[{"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js":"1","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js":"2","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js":"3","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Library.js":"4","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js":"5","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js":"6","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js":"7","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\message.reducer.js":"8","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js":"9","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js":"10","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\books.service.js":"11","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\message.action.js":"12","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js":"13","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js":"14","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js":"15","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js":"16","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js":"17","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\Lessons.js":"18","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js":"19","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js":"20","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\SetUserRole.js":"21","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\layer.reducer.js":"22","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\layer.actions.js":"23","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\layer.service.js":"24","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\AttendanceJournal.js":"25","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchyListView.js":"26","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\CreateHierarchy.js":"27","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\ViewGroupsDetails.js":"28","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AffiliationToGroup.js":"29","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\NewPassword.js":"30","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\NavBar.js":"31"},{"size":368,"mtime":1609961256170,"results":"32","hashOfConfig":"33"},{"size":5491,"mtime":1614715055809,"results":"34","hashOfConfig":"33"},{"size":622,"mtime":1612295933692,"results":"35","hashOfConfig":"33"},{"size":905,"mtime":1614713941797,"results":"36","hashOfConfig":"33"},{"size":954,"mtime":1614718415473,"results":"37","hashOfConfig":"33"},{"size":700,"mtime":1614450758516,"results":"38","hashOfConfig":"33"},{"size":1452,"mtime":1612639730024,"results":"39","hashOfConfig":"33"},{"size":402,"mtime":1610218247338,"results":"40","hashOfConfig":"33"},{"size":575,"mtime":1610234410977,"results":"41","hashOfConfig":"33"},{"size":1846,"mtime":1614717753108,"results":"42","hashOfConfig":"33"},{"size":366,"mtime":1609658093287,"results":"43","hashOfConfig":"33"},{"size":250,"mtime":1609963332060,"results":"44","hashOfConfig":"33"},{"size":2905,"mtime":1614717706877,"results":"45","hashOfConfig":"33"},{"size":3112,"mtime":1614717855782,"results":"46","hashOfConfig":"33"},{"size":2600,"mtime":1614455357803,"results":"47","hashOfConfig":"33"},{"size":390,"mtime":1610830596948,"results":"48","hashOfConfig":"33"},{"size":2351,"mtime":1614713941750,"results":"49","hashOfConfig":"33"},{"size":1141,"mtime":1614713941756,"results":"50","hashOfConfig":"33"},{"size":607,"mtime":1614713941805,"results":"51","hashOfConfig":"33"},{"size":335,"mtime":1610828754796,"results":"52","hashOfConfig":"33"},{"size":1405,"mtime":1612034672710,"results":"53","hashOfConfig":"33"},{"size":698,"mtime":1613844403535,"results":"54","hashOfConfig":"33"},{"size":2312,"mtime":1613922016617,"results":"55","hashOfConfig":"33"},{"size":654,"mtime":1613848879110,"results":"56","hashOfConfig":"33"},{"size":3019,"mtime":1614451440565,"results":"57","hashOfConfig":"33"},{"size":3612,"mtime":1613852030290,"results":"58","hashOfConfig":"33"},{"size":4121,"mtime":1613922016611,"results":"59","hashOfConfig":"33"},{"size":614,"mtime":1614450758452,"results":"60","hashOfConfig":"33"},{"size":5629,"mtime":1614530673616,"results":"61","hashOfConfig":"33"},{"size":2101,"mtime":1614713941770,"results":"62","hashOfConfig":"33"},{"size":2564,"mtime":1614718006110,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1a2415e",{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js",[],["135","136"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js",["137","138","139"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Library.js",["140"],"import React, { useEffect, useState } from 'react';\r\nimport { useBarcode } from 'react-barcodes';\r\nimport api from '../services/books.service';\r\nimport { Table } from 'antd';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Barcode',\r\n        dataIndex: 'barcode'\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name'\r\n    },\r\n    {\r\n        title: 'Writer',\r\n        dataIndex: 'writer'\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status'\r\n    }\r\n];\r\n\r\n\r\n\r\nconst Library = () => {\r\n\r\n    const [tableData, setTableData] = useState([]);\r\n\r\n    // const { inputRef } = useBarcode({\r\n    //     value: '',\r\n    // })\r\n\r\n    //  [\r\n    //     {\r\n    //         key: <svg ref={inputRef} />,\r\n    //         name: <ul>{bookList.map((book, index) => <li key={index}>{book.bookName}</li>)}</ul>,\r\n    //         writer: '',\r\n    //         status: ''\r\n    //     }\r\n    // ];\r\n\r\n    useEffect(() => {\r\n        api.getAllBooks().then(response => response.data.data).then(books => {\r\n            let data = books.map(book => ({...book, key: book._id}));\r\n            setTableData(data);\r\n        }, [])\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Table columns={columns} dataSource={tableData} bordered />\r\n        </>\r\n    )\r\n}\r\nexport default Library;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\message.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js",["141","142","143","144","145","146"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\books.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\message.action.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js",["147"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js",["148","149","150","151","152"],"import React, { useEffect, useState } from 'react';\r\nimport { List, message, Avatar, Spin, Card, Button , Modal} from 'antd';\r\nimport { useHistory,Link } from 'react-router-dom';\r\nimport SetUserRole from './SetUserRole';\r\n\r\nconst ViewUsers = (props) => {\r\n\r\n    const {userList, showSetRole} = props;\r\n    const history = useHistory();\r\n    function getRandomColor() {\r\n        var letters = '0123456789ABCDEF'.split('');\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++ ) {\r\n            color += letters[Math.round(Math.random() * 15)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    const navigate = (user) => {\r\n        history.push({\r\n            pathname: `/users/${user._id}`,\r\n            state: { user },\r\n        });\r\n    }\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = (e) => {\r\n        e.stopPropagation();\r\n        e.nativeEvent.stopImmediatePropagation();\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <Card type=\"inner\" title=\"User List\">\r\n            <List\r\n                dataSource={userList}\r\n                renderItem={item => (\r\n                    // <List.Item key={item._id} onClick={()=> navigate(item)}>\r\n                    <List.Item key={item._id}>\r\n                        <List.Item.Meta \r\n                            avatar={\r\n                                <Avatar style={{ backgroundColor: getRandomColor(),textTransform: 'uppercase', verticalAlign: 'middle' }} size=\"large\">\r\n                                    {item.firstName.charAt(0)}\r\n                                </Avatar>\r\n                            }\r\n                            title={`${item.firstName} ${item.lastName}`}\r\n                            description={item.email}\r\n\r\n                            />\r\n                            {showSetRole && \r\n                                <>\r\n                                    <Button type=\"primary\" onClick={showModal}>Set User Role</Button>\r\n                                    <Modal title=\"Set Role\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                                        <SetUserRole id={item._id}></SetUserRole>\r\n                                    </Modal>\r\n                                </>\r\n                            }\r\n                    </List.Item>\r\n                )}\r\n            >\r\n            </List>\r\n        </Card>\r\n    )\r\n}\r\nexport default ViewUsers;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js",["153"],"import React from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createLesson } from '../../redux/actions/lesson.actions';\r\n\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n};\r\n\r\nconst CreateLesson = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const save = (values) => {\r\n        console.log('Success:', values); \r\n        dispatch(createLesson(values));       \r\n    }\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Form {...layout} name=\"Add New Lesson\" initialValues={{ remember: true }} onFinish={save} onFinishFailed={onFinishFailed} >\r\n        <Form.Item\r\n            label=\"lesson subject\"\r\n            name=\"lessonSubject\"\r\n            rules={[\r\n                {\r\n                    required: true,\r\n                    pattern:\"(^[a-zA-Z0-9]+$)\",\r\n                    min:2,\r\n                    message: 'lesson subject is required and must be at least 2 chars',\r\n                },\r\n            ]}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Add Lesson\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateLesson;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\Lessons.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\SetUserRole.js",["154"],"import React, { useState } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { Form, Input, Radio, Button } from 'antd';\r\nimport {setUserRole} from '../../redux/actions/user.actions';\r\n\r\n\r\nconst SetUserRole = (props) => {\r\n\r\n  const { id } = props;\r\n\r\n  const { user } = useSelector(state => state.userReducer);\r\n    \r\n  const [role, setRole] = useState();\r\n\r\n  const onChange = e => {\r\n    console.log('radio checked', e.target.value);\r\n    setRole(e.target.value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n    \r\n  const save = () => {\r\n      dispatch(setUserRole(id, role));       \r\n  }\r\n\r\n  const onFinishFailed = () => {\r\n    alert('Failed to set user role');\r\n  }\r\n\r\n    return (\r\n      <>\r\n      <Form onFinish={save} onFinishFailed={onFinishFailed} >\r\n\r\n      <Form.Item>\r\n        <Radio.Group onChange={onChange}>\r\n        <Radio value={'student'}>student</Radio>\r\n        <br />\r\n        <Radio value={'teacher'}>teacher</Radio>\r\n        <br />\r\n        <Radio value={'secretary'}>secretary</Radio>\r\n        <br />\r\n        { user.role === 'admin' && \r\n          <Radio value={'admin'}>admin</Radio>\r\n        }\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n          </Button>\r\n      </Form.Item>\r\n      </Form>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SetUserRole;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\layer.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\layer.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\layer.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\AttendanceJournal.js",["155","156","157","158"],"import React, { useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\n\r\nconst AttendanceJournal = (props) => {\r\n\r\n    const [eventList, setEventList] = useState([]);\r\n    const myEventsList = [\r\n        {\r\n            start: moment().toDate(),\r\n            end: moment()\r\n                .add(1, \"days\")\r\n                .toDate(),\r\n            title: \"Some title\"\r\n        }\r\n    ];\r\n    const onEventResize = (data) => {\r\n        const { start, end } = data;\r\n\r\n        // this.setState((state) => {\r\n        //   state.myEventsList[0].start = start;\r\n        //   state.myEventsList[0].end = end;\r\n        //   return { myEventsList: [...state.events] };\r\n        // });\r\n    };\r\n\r\n    const onEventDrop = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <DnDCalendar\r\n                    localizer={localizer}\r\n                    events={myEventsList}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    defaultDate={new Date()}\r\n                    defaultView=\"month\"\r\n                    onEventDrop={onEventDrop}\r\n                    onEventResize={onEventResize}\r\n                    resizable\r\n                    style={{ height: \"100vh\" }}\r\n\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AttendanceJournal;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import {useSelector} from 'react-redux';\r\n// import { Table,Input, AutoComplete } from 'antd';\r\n// import { AudioOutlined } from '@ant-design/icons';\r\n// import { $CombinedState } from 'redux';\r\n\r\n\r\n\r\n\r\n// const columns = [\r\n//   {\r\n//     title: 'Name',\r\n//     dataIndex: 'name'\r\n//   }\r\n// ];\r\n\r\n\r\n// const AttendanceJournal = (props) => {\r\n\r\n//   const {id}=props;\r\n\r\n// const { user } = useSelector(state => state.userReducer);\r\n\r\n//   const data = [\r\n//   {\r\n//     key:user._id ,\r\n//     name: user.name\r\n//   }\r\n//  ];\r\n\r\n\r\n//   const [students,setStudents] = useState();\r\n\r\n//     const rowSelection = {\r\n//     onChange: (selectedRowKeys, selectedRows) => {\r\n//         console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n//     },\r\n//     getCheckboxProps: record => ({\r\n//         disabled: record.name === 'Disabled User', \r\n//         name: record.name,\r\n//     }),\r\n//     };\r\n\r\n//   return (\r\n//     <>\r\n//         <Table\r\n//           rowSelection={{\r\n//             type: 'checkbox',\r\n//             ...rowSelection,\r\n//           }}\r\n//           columns={columns}\r\n//           dataSource={data}\r\n\r\n//         />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default AttendanceJournal;\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchyListView.js",["159","160"],"import React, {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {getLayers} from '../../redux/actions/layer.actions';\r\nimport { Button, Card, Col, Row } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport CreateHierarchy from './CreateHierarchy';\r\n\r\nconst HierarchyListView = (props) => {\r\n\r\n    const { type, layerId, gradeId, nextHierarchy } = props;\r\n    const [showAddNewHierarchy, setshowAddNewHierarchy] = useState(false);\r\n    const  { layers } = useSelector(state => state.layerReducer);\r\n    const history = useHistory();\r\n    // const {hierarchyItem} = history.location.state;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(layers == null){\r\n            dispatch(getLayers());\r\n        }\r\n    }, [dispatch, layers]);\r\n\r\n    const getHierarchyItemId = () => {\r\n        if(history.location.state)\r\n            return history.location.state.hierarchyItem._id;\r\n        return null;\r\n    }\r\n\r\n    const getData = () => {\r\n        let data;\r\n        switch (type) {\r\n            case 'layer':\r\n                data = layers;\r\n                break;\r\n            case 'grade':\r\n                data =  layers.find(layer => layer._id === getHierarchyItemId()).grades;\r\n                break;\r\n            case 'level':\r\n                data =  layers.find(layers => layers.grades.find(grade => \r\n                    grade._id === getHierarchyItemId())\r\n                ).grades.find(grade => \r\n                    grade._id === getHierarchyItemId()\r\n                ).levels;\r\n                break;\r\n            case 'group':\r\n                layers.forEach(layer => {\r\n                    layer.grades.forEach(grade => {\r\n                        grade.levels.forEach(level => {\r\n                            if(level._id === getHierarchyItemId())\r\n                                data = level.groups;\r\n                        })\r\n                    })\r\n                })\r\n                break;\r\n            default:\r\n                return [];\r\n        }\r\n        return data ? data : [];\r\n    }\r\n\r\n    const showDetails = (item) => {\r\n        history.push({\r\n            pathname: `/${nextHierarchy}`,\r\n            state: { hierarchyItem: item },\r\n        });\r\n    }\r\n\r\n    const handleAddNewLayer = () => {\r\n        setshowAddNewHierarchy(true);\r\n    }\r\n\r\n    const hideCreateHierarchy = () => {\r\n        setshowAddNewHierarchy(false);\r\n    }\r\n\r\n    return (\r\n        <>      \r\n        \r\n            <Button htmlType=\"submit\" type=\"primary\" onClick={handleAddNewLayer}>{`add new ${type}`}</Button>\r\n            {showAddNewHierarchy && \r\n                <CreateHierarchy \r\n                    hideCreateHierarchy={hideCreateHierarchy} \r\n                    type={type} \r\n                    layerId={getHierarchyItemId()}\r\n                    gradeId={getHierarchyItemId()}\r\n                    levelId={getHierarchyItemId()}\r\n                />}\r\n               <div>\r\n                <div className=\"site-card-wrapper\">\r\n                    <Row gutter={16}>\r\n                        {getData().map(item =>\r\n                            <Col key={item._id} span={8}>\r\n                                <Card  title={item.name} bordered={false}>\r\n                                    <Button type=\"primary\" onClick={() => showDetails(item)}>view details</Button>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </div>\r\n               </div>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HierarchyListView;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\CreateHierarchy.js",["161"],"import React, { useState, useEffect }  from 'react';\r\nimport { Form, Input, Button, Alert, message } from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addLayer, addGrade, addLevel, addGroup} from '../../redux/actions/layer.actions';\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst CreateHierarchy = (props) => {\r\n\r\n    const {hideCreateHierarchy , type, layerId, gradeId , levelId} = props;\r\n    const { layers } = useSelector(state => state.layerReducer);\r\n\r\n    // const gradeByLevel = getGradeId(levelId);\r\n    // const layerByGrade = getLayerId(gradeByLevel);\r\n\r\n    // const  { message } = useSelector(state => state.messageReducer);\r\n    const [messageText, setMessageText] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getLayerId = (gradeId) => {\r\n        \r\n        if(!gradeId)\r\n            return null;\r\n        return layers.find(layers => layers.grades.find(grade => grade._id === gradeId))._id;\r\n    }\r\n    \r\n    const getGradeId = (levelId) => {\r\n        \r\n        if(!levelId)\r\n            return null;\r\n    \r\n        let result;\r\n        layers.forEach(layer => {\r\n            layer.grades.forEach(grade => {\r\n                let data = grade.levels.find(level => level._id === levelId)\r\n                if (data) {\r\n                    result = grade;\r\n                    return;\r\n                }\r\n            });\r\n    \r\n        });\r\n        return result._id;\r\n    }\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n        let {name} = values;\r\n        let func;\r\n        let params;\r\n        switch (type) {\r\n            case 'layer':\r\n                func = addLayer;\r\n                params = name;\r\n                break;\r\n            case 'grade':\r\n                func = addGrade;\r\n                params = {layerId : layerId , gradeName: name };\r\n                break;\r\n            case 'level':\r\n                func = addLevel;\r\n                params = {gradeId: gradeId, levelName: name, layerId: getLayerId(gradeId) };\r\n                break;\r\n            case 'group':\r\n                func = addGroup;\r\n                params = {\r\n                    gradeId: getGradeId(levelId), \r\n                    groupName: name, \r\n                    layerId: getLayerId(getGradeId(levelId)), \r\n                    levelId: levelId\r\n                };\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n        dispatch(func(params)).then((response) => {\r\n            setLoading(false);\r\n            if(response.success){\r\n                form.resetFields()\r\n                message.success(`${type} created sucessfuly`);\r\n                hideCreateHierarchy();\r\n            }\r\n            else {\r\n                setMessageText(response.error.response.data.error);\r\n            }\r\n        }).catch(error => {\r\n            setMessageText(`Filed to create ${type}`);\r\n        });  \r\n    }\r\n\r\n    return (\r\n    <>\r\n        {messageText && <Alert\r\n            message=\"Error\"\r\n            description={messageText}\r\n            type=\"error\"\r\n            showIcon\r\n        />}\r\n        <Form {...layout} form={form} name={`Add ${type}`} initialValues={{ remember: true }} onFinish={save} >\r\n            <Form.Item\r\n                label={`${type} Name`}\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `Please input ${type} name !`\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\"  loading={loading}>\r\n                    add\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </>\r\n)\r\n   \r\n}\r\n\r\nexport default CreateHierarchy;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\ViewGroupsDetails.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AffiliationToGroup.js",["162","163","164"],"import React, { useEffect, useState } from 'react';\r\nimport { AutoComplete, Input, Form } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getTeachers, getStudents } from '../../services/user.service';\r\nimport { message,Button } from 'antd';\r\nimport {useSelector} from 'react-redux';\r\nimport ViewUsers from '../../components/users/ViewUsers';\r\n\r\n\r\n\r\nconst AffiliationToGroup = () => {\r\n\r\n\r\n    const history = useHistory();\r\n    const { group } = history.location.state;\r\n    const [teacherList, setTeacherList] = useState([]);\r\n    const [studentList, setStudentList] = useState();\r\n    const [groupName, setGroupName] = useState(group.name);\r\n    const [selectedTeacher, setSelectedTeacher] = useState(group.teacherCode);\r\n    const [selectedStudents, setSelectedStudents] = useState([]);\r\n    const [currentStudent, setCurrentStudent] = useState(group.teacherCode);\r\n    // const [selectStudent, setSelectStudent] = useState(group.StudentsInTheGroup.studentCode);\r\n    const [teacherDefaultValue, setTeacherDefaultValue] = useState();\r\n    const { layers } = useSelector(state => state.layerReducer);\r\n\r\n    useEffect(() => {\r\n        initTeacherList();\r\n        initStudentList();\r\n    }, []);\r\n\r\n    const initTeacherList = () => {\r\n        getTeachers().then(resopnse => resopnse.data).then(response => {\r\n            if (response.success) {\r\n                let result = response.data.map(teacher => {\r\n                    if(group.teacherCode && teacher._id === group.teacherCode) {\r\n                        setTeacherDefaultValue(`${teacher.firstName} ${teacher.lastName}`);\r\n                        setSelectedTeacher(teacher._id);\r\n                    }\r\n                    return ({ ...teacher, key:teacher._id, value:`${teacher.firstName} ${teacher.lastName}` })\r\n                })\r\n                setTeacherList(result);\r\n            }\r\n            else {\r\n                message.error('Faild to load teacher list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load teacher list'));\r\n    }\r\n    const getPicklistItem = (student) => {\r\n        let value = `${student.firstName} ${student.lastName}`;\r\n        return (\r\n            <div value={value}>\r\n                <h3>{value}</h3>\r\n                <label>{student.email}</label>\r\n            </div>\r\n        )\r\n    }\r\n    const initStudentList = () => {\r\n        getStudents().then(resopnse => resopnse.data).then(response => {\r\n            if (response.success) {\r\n                let result = response.data.map(student => \r\n                    ({...student,\r\n                        key:student._id, \r\n                        value: `${student.firstName} ${student.lastName}`,\r\n                        label : getPicklistItem(student)\r\n                    }\r\n                ));\r\n                setStudentList(result);\r\n                let studentsIds = group.StudentsInTheGroup.map(studentInGroup => studentInGroup.studentCode);\r\n                let existStudents = result.filter(student => studentsIds.includes(student._id));\r\n                setSelectedStudents(existStudents); \r\n            }\r\n            \r\n            else {\r\n                message.error('Faild to load teacher list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load teacher list'));\r\n    }\r\n\r\n    const handleSelectTeacher = (value, teacher) => {\r\n        setSelectedTeacher(teacher._id);\r\n    }\r\n    const handleSelectStudent = (value, student) => {\r\n        setCurrentStudent(student);\r\n    }\r\n\r\n    const addNewStudentToList = () => {\r\n        setSelectedStudents([...selectedStudents, currentStudent]);\r\n    }\r\n\r\n    const filterAutoComplete  = (inputValue, option) => {\r\n        return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n    }\r\n\r\n    const save = () => {\r\n        let data = {\r\n            groupId: group._id,\r\n            name:groupName,\r\n            teacherCode: selectedTeacher,\r\n            StudentsInTheGroup: selectedStudents.map(student => \r\n                ({studentCode: student._id})\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                label=\"group name\"\r\n                name=\"group name\"\r\n                onChange={(e) => {setGroupName(e.target.value)}}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `Please input group name!`\r\n                    },\r\n                ]}\r\n            >\r\n                <Input defaultValue={groupName}/>\r\n            </Form.Item>\r\n            <label>select teacher</label>\r\n            <AutoComplete\r\n                style={{\r\n                    width: 200,\r\n                }}\r\n                options={teacherList}\r\n                defaultValue={teacherDefaultValue}\r\n                placeholder=\"teacher name\"\r\n                onSelect={handleSelectTeacher}\r\n                filterOption={filterAutoComplete}\r\n            />\r\n\r\n            <div>\r\n                <AutoComplete\r\n                    style={{width: 200}}\r\n                    options={studentList}\r\n                    placeholder=\"add student\"\r\n                    onSelect={handleSelectStudent}\r\n                    filterOption={filterAutoComplete}\r\n                />\r\n                <Button onClick={addNewStudentToList}>Add Student</Button>\r\n            </div>\r\n\r\n            <ViewUsers userList={selectedStudents} showSetRole={false} />\r\n\r\n            <Button onClick={save}>Save Changes</Button>\r\n        </>\r\n    )\r\n}\r\nexport default AffiliationToGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\NewPassword.js",["165","166","167"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\NavBar.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":9,"column":48,"nodeType":"174","messageId":"175","endLine":9,"endColumn":65},{"ruleId":"172","severity":1,"message":"176","line":10,"column":50,"nodeType":"174","messageId":"175","endLine":10,"endColumn":54},{"ruleId":"172","severity":1,"message":"177","line":14,"column":8,"nodeType":"174","messageId":"175","endLine":14,"endColumn":19},{"ruleId":"172","severity":1,"message":"178","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":20},{"ruleId":"172","severity":1,"message":"179","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":17},{"ruleId":"172","severity":1,"message":"180","line":5,"column":17,"nodeType":"174","messageId":"175","endLine":5,"endColumn":23},{"ruleId":"172","severity":1,"message":"181","line":5,"column":25,"nodeType":"174","messageId":"175","endLine":5,"endColumn":31},{"ruleId":"172","severity":1,"message":"182","line":13,"column":12,"nodeType":"174","messageId":"175","endLine":13,"endColumn":19},{"ruleId":"172","severity":1,"message":"183","line":13,"column":21,"nodeType":"174","messageId":"175","endLine":13,"endColumn":31},{"ruleId":"172","severity":1,"message":"184","line":14,"column":21,"nodeType":"174","messageId":"175","endLine":14,"endColumn":31},{"ruleId":"172","severity":1,"message":"185","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"186","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"187","line":2,"column":16,"nodeType":"174","messageId":"175","endLine":2,"endColumn":23},{"ruleId":"172","severity":1,"message":"188","line":2,"column":33,"nodeType":"174","messageId":"175","endLine":2,"endColumn":37},{"ruleId":"172","severity":1,"message":"176","line":3,"column":21,"nodeType":"174","messageId":"175","endLine":3,"endColumn":25},{"ruleId":"172","severity":1,"message":"189","line":19,"column":11,"nodeType":"174","messageId":"175","endLine":19,"endColumn":19},{"ruleId":"172","severity":1,"message":"190","line":2,"column":31,"nodeType":"174","messageId":"175","endLine":2,"endColumn":39},{"ruleId":"172","severity":1,"message":"191","line":3,"column":16,"nodeType":"174","messageId":"175","endLine":3,"endColumn":21},{"ruleId":"172","severity":1,"message":"192","line":14,"column":12,"nodeType":"174","messageId":"175","endLine":14,"endColumn":21},{"ruleId":"172","severity":1,"message":"193","line":14,"column":23,"nodeType":"174","messageId":"175","endLine":14,"endColumn":35},{"ruleId":"172","severity":1,"message":"194","line":25,"column":17,"nodeType":"174","messageId":"175","endLine":25,"endColumn":22},{"ruleId":"172","severity":1,"message":"195","line":25,"column":24,"nodeType":"174","messageId":"175","endLine":25,"endColumn":27},{"ruleId":"172","severity":1,"message":"196","line":11,"column":19,"nodeType":"174","messageId":"175","endLine":11,"endColumn":26},{"ruleId":"172","severity":1,"message":"197","line":11,"column":28,"nodeType":"174","messageId":"175","endLine":11,"endColumn":35},{"ruleId":"172","severity":1,"message":"186","line":1,"column":27,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"198","line":24,"column":13,"nodeType":"174","messageId":"175","endLine":24,"endColumn":19},{"ruleId":"199","severity":1,"message":"200","line":29,"column":8,"nodeType":"201","endLine":29,"endColumn":10,"suggestions":"202"},{"ruleId":"172","severity":1,"message":"203","line":97,"column":13,"nodeType":"174","messageId":"175","endLine":97,"endColumn":17},{"ruleId":"172","severity":1,"message":"185","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"204","line":2,"column":20,"nodeType":"174","messageId":"175","endLine":2,"endColumn":26},{"ruleId":"172","severity":1,"message":"205","line":22,"column":9,"nodeType":"174","messageId":"175","endLine":22,"endColumn":27},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'AuthorizedSection' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NewPassword' is defined but never used.","'useBarcode' is defined but never used.","'connect' is defined but never used.","'Button' is defined but never used.","'Layout' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'message' is defined but never used.","'Spin' is defined but never used.","'navigate' is assigned a value but never used.","'Checkbox' is defined but never used.","'Input' is defined but never used.","'eventList' is assigned a value but never used.","'setEventList' is assigned a value but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.","'layerId' is assigned a value but never used.","'gradeId' is assigned a value but never used.","'layers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initStudentList' and 'initTeacherList'. Either include them or remove the dependency array.","ArrayExpression",["208"],"'data' is assigned a value but never used.","'Select' is defined but never used.","'tailFormItemLayout' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},"Update the dependencies array to be: [initStudentList, initTeacherList]",{"range":"211","text":"212"},[1215,1217],"[initStudentList, initTeacherList]"]