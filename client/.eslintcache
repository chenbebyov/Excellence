[{"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js":"1","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js":"2","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js":"3","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js":"4","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js":"5","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js":"6","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js":"7","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js":"8","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js":"9","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js":"10","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js":"11","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js":"12","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js":"13","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js":"14","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js":"15","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\SetUserRole.js":"16","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\layer.reducer.js":"17","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\layer.actions.js":"18","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\layer.service.js":"19","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\AttendanceJournal.js":"20","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchyListView.js":"21","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\CreateHierarchy.js":"22","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\ViewGroupsDetails.js":"23","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AffiliationToGroup.js":"24","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\NewPassword.js":"25","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\NavBar.js":"26","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\hooks\\stringToColor.js":"27","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadImageToS3WithReactS3.js":"28","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AddLessonToGroup.js":"29","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\LessonsInGroup.js":"30","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\GroupDetails.js":"31","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadFiles.js":"32","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\Library.js":"33","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\CreateNewBook.js":"34","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\book.reducer.js":"35","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\book.service.js":"36","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\book.actions.js":"37"},{"size":530,"mtime":1618087776906,"results":"38","hashOfConfig":"39"},{"size":5233,"mtime":1618087776898,"results":"40","hashOfConfig":"39"},{"size":917,"mtime":1618082422443,"results":"41","hashOfConfig":"39"},{"size":1132,"mtime":1615052376891,"results":"42","hashOfConfig":"39"},{"size":700,"mtime":1614450758516,"results":"43","hashOfConfig":"39"},{"size":1056,"mtime":1617731164544,"results":"44","hashOfConfig":"39"},{"size":575,"mtime":1610234410977,"results":"45","hashOfConfig":"39"},{"size":1847,"mtime":1617557509874,"results":"46","hashOfConfig":"39"},{"size":3242,"mtime":1617731315728,"results":"47","hashOfConfig":"39"},{"size":2906,"mtime":1617731357333,"results":"48","hashOfConfig":"39"},{"size":2784,"mtime":1617722429750,"results":"49","hashOfConfig":"39"},{"size":390,"mtime":1610830596948,"results":"50","hashOfConfig":"39"},{"size":6568,"mtime":1618079882063,"results":"51","hashOfConfig":"39"},{"size":542,"mtime":1617729359590,"results":"52","hashOfConfig":"39"},{"size":335,"mtime":1610828754796,"results":"53","hashOfConfig":"39"},{"size":1943,"mtime":1617729883289,"results":"54","hashOfConfig":"39"},{"size":1219,"mtime":1617728815958,"results":"55","hashOfConfig":"39"},{"size":3435,"mtime":1615120178062,"results":"56","hashOfConfig":"39"},{"size":858,"mtime":1615119921659,"results":"57","hashOfConfig":"39"},{"size":3330,"mtime":1617561509086,"results":"58","hashOfConfig":"39"},{"size":4189,"mtime":1618080248864,"results":"59","hashOfConfig":"39"},{"size":3762,"mtime":1617728928207,"results":"60","hashOfConfig":"39"},{"size":504,"mtime":1614799631630,"results":"61","hashOfConfig":"39"},{"size":10183,"mtime":1617606028374,"results":"62","hashOfConfig":"39"},{"size":2101,"mtime":1614713941770,"results":"63","hashOfConfig":"39"},{"size":2532,"mtime":1617557509826,"results":"64","hashOfConfig":"39"},{"size":502,"mtime":1615220273442,"results":"65","hashOfConfig":"39"},{"size":971,"mtime":1617834267533,"results":"66","hashOfConfig":"39"},{"size":5218,"mtime":1617652217430,"results":"67","hashOfConfig":"39"},{"size":2431,"mtime":1617653918450,"results":"68","hashOfConfig":"39"},{"size":1898,"mtime":1617651045491,"results":"69","hashOfConfig":"39"},{"size":2193,"mtime":1617834593587,"results":"70","hashOfConfig":"39"},{"size":1681,"mtime":1618085338255,"results":"71","hashOfConfig":"39"},{"size":3056,"mtime":1618085731823,"results":"72","hashOfConfig":"39"},{"size":512,"mtime":1618082390095,"results":"73","hashOfConfig":"39"},{"size":385,"mtime":1618081626084,"results":"74","hashOfConfig":"39"},{"size":910,"mtime":1618084750382,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12s4mj8",{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"81"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"81"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"81"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"81"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"81"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"81"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"81"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"81"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"81"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js",["170","171","172","173"],"import React, { useEffect, useState } from 'react';\r\nimport Library from './components/library/Library';\r\nimport Home from './pages/Home';\r\nimport ViewUsers from './components/users/ViewUsers';\r\nimport HierarchyListView from './components/layers/HierarchyListView';\r\nimport api from './services/user.service';\r\nimport { useSelector } from 'react-redux';\r\nimport { PermissionsProvider, AuthorizedRoute, AuthorizedSection } from '@tshio/react-router-permissions';\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport UserDetails from './components/users/UserDetails';\r\nimport CreateLesson from './components/lessonsAndTasks/CreateLesson';\r\nimport AttendanceJournal from './components/users/AttendanceJournal';\r\nimport NewPassword from './components/users/NewPassword';\r\nimport ViewGroupsDetails from './components/layers/ViewGroupsDetails';\r\nimport AffiliationToGroup from './components/groups/AffiliationToGroup';\r\nimport NavBar from './components/home/NavBar';\r\n\r\nconst permissionsStrategy = (currentRole, requirement) => {\r\n    return requirement.find(role => role === currentRole);\r\n};\r\n\r\nfunction App (props) {\r\n\r\n    const { user } = useSelector(state => state.userReducer);\r\n    const [userList, setUserList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        api.getAllUsers().then(users => {\r\n            setUserList(users.data.data);\r\n        }, [])\r\n    }, []);\r\n\r\n    // const getRoles =() =>{\r\n    //     return user ? [user.role] : 'guest';\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <PermissionsProvider\r\n                permissions={user ? user.role : 'guest'}\r\n                authorizationStrategy={permissionsStrategy}\r\n            >\r\n                <Router>\r\n                    <NavBar/>\r\n\r\n                    <Switch>\r\n                        <AuthorizedRoute path=\"/lessons/add\"  requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <CreateLesson /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/library\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <Library /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/users/:id\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <UserDetails /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/users\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <ViewUsers title=\"User List\" userList={userList} showSetRole={true} />: <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/layers\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"layer\" nextHierarchy=\"grade\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/grade\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"grade\" nextHierarchy=\"level\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/level\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"level\" nextHierarchy=\"group\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/group\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"group\" nextHierarchy=\"viewGroupDetails\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        {/* <AuthorizedRoute path=\"/viewGroupDetails\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <ViewGroupsDetails/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute> */}\r\n                        <AuthorizedRoute path=\"/viewGroupDetails\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <AffiliationToGroup mode=\"read\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        {/* <AuthorizedRoute path=\"/newPassword\" >\r\n                            {({ isAuthorized }) => (isAuthorized ? <NewPassword/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute> */}\r\n                        <AuthorizedRoute path=\"/timetable\"  requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <AttendanceJournal /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <Route path=\"/\" component={Home}>\r\n                            <Home />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </PermissionsProvider>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n",["174","175"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js",["176","177","178","179","180","181"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../components/sign-in/Login';\r\nimport Register from '../components/sign-in/Register';\r\nimport { Modal, Button, Layout, Tabs } from 'antd';\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nfunction SignIn(props) {\r\n\r\n    const {hideSignIn} = props;\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [visible, setVisible] = useState(true);\r\n\r\n    //   const showModal = () => {\r\n    //     setVisible(true);\r\n    //   };\r\n\r\n    const hideModal = () => {\r\n        hideSignIn();\r\n    }\r\n\r\n    const handleOk = () => {\r\n        // setLoading(true);\r\n        // setTimeout(() => {\r\n        //   setVisible(false);\r\n        //   setLoading(false);\r\n        // }, 3000);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        // hideSignIn();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* <Button type=\"primary\" onClick={showModal}>Sign in</Button> */}\r\n            <Modal\r\n                title=\"Login/Register\"\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                visible={visible}\r\n                closable={false}\r\n                footer={[\r\n                    // <Button key=\"back\" onClick={handleCancel}> Return </Button>,\r\n                    // <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}> Submit</Button>\r\n                ]}\r\n            >\r\n                {/* <Layout theme=\"light\"> */}\r\n                <Tabs defaultActiveKey=\"1\" size=\"large\" >\r\n                    <TabPane tab=\"Login\" key=\"1\"><Login hideModal={hideModal} /></TabPane>\r\n                    <TabPane tab=\"Register\" key=\"2\"><Register hideModal={hideModal} /></TabPane>\r\n\r\n                </Tabs>\r\n                {/* </Layout> */}\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js",["182","183","184"],"import React, { useState } from 'react';\r\nimport { enterUser } from '../../redux/actions/user.actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Form, Input, Button, Checkbox, Alert, message } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst Login = (props) => {\r\n\r\n    const {hideModal} = props;\r\n\r\n    // const { message } = useSelector(state => state.messageReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n\r\n        dispatch(enterUser(values.email, values.password))\r\n            .then((response)=>{\r\n                setLoading(false);\r\n                if(response.data){\r\n                    hideModal();\r\n                    return;\r\n                }\r\n                switch (response.request.status) {\r\n                    case 404:\r\n                        message.error('Error: user name or password are not exist');\r\n                        break;\r\n                    default:\r\n                        message.error('Login Failed 1');\r\n                        break;\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setLoading(false);\r\n                message.error('Login Failed 2')\r\n            });\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        hideModal();\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* {message && <Alert\r\n                message=\"Error\"\r\n                description={message}\r\n                type=\"error\"\r\n                showIcon\r\n            />} */}\r\n            <Form {...layout} name=\"login\" onFinish={save} onFinishFailed={onFinishFailed} >\r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your email!',\r\n                            type: 'email'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                        Submit\r\n                    </Button>\r\n                    <Button type=\"default\" htmlType=\"button\" onClick={handleCancel}>\r\n                        Cancel\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js",["185","186"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createUser } from '../../redux/actions/user.actions';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const {hideModal} = props;\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const save = (values) => {\r\n        console.log('Success:', values); \r\n        dispatch(createUser(values)).then(res => {\r\n            hideModal();\r\n        });       \r\n    }\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        hideModal();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form {...layout} name=\"login\" onFinish={save} onFinishFailed={onFinishFailed} >\r\n                <Form.Item\r\n                    label=\"first name\"\r\n                    name=\"firstName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern:\"(^[a-zA-Z]+$)\",\r\n                            min:2,\r\n                            message: 'first name is required and must be at least 2 chars',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"last name\"\r\n                    name=\"lastName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern:\"(^[a-zA-Z]+$)\",\r\n                            min:2,\r\n                            message: 'first name is required and must be at least 2 chars',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                \r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your email!',\r\n                            type: 'email'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button type=\"default\" htmlType=\"button\" onClick={handleCancel}>\r\n                        Cancel\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js",["187","188","189","190","191","192"],"import React, { useEffect, useState } from 'react';\r\nimport { List, message, Avatar, Spin, Card, Button , Modal} from 'antd';\r\nimport { useHistory,Link } from 'react-router-dom';\r\nimport SetUserRole from './SetUserRole';\r\nimport stringToColor from '../../hooks/stringToColor';\r\n\r\nconst ViewUsers = (props) => {\r\n\r\n    const {userList, showSetRole, title, showRemove, removeStudent} = props;\r\n    const [selectUser, setSelectdUser] = useState(null);\r\n    \r\n    const history = useHistory();\r\n\r\n    function getRandomColor(userName) {\r\n        return stringToColor(userName);\r\n    }\r\n\r\n    function navigate(user) {\r\n        history.push({\r\n            pathname: `/users/${user._id}`,\r\n            state: { user },\r\n        });\r\n    }\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = (e, userId) => {\r\n        e.stopPropagation();\r\n        e.nativeEvent.stopImmediatePropagation();\r\n        setSelectdUser(userId);\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card type=\"inner\" title={title}>\r\n                <List\r\n                    dataSource={userList}\r\n                    renderItem={item => (\r\n                        // <List.Item key={item._id} onClick={()=> navigate(item)}>\r\n                        <List.Item key={item._id}>\r\n                            <List.Item.Meta \r\n                                avatar={\r\n                                    <Avatar style={{ backgroundColor: getRandomColor(item.firstName),textTransform: 'uppercase', verticalAlign: 'middle' }} size=\"large\">\r\n                                        {item.firstName.charAt(0)}\r\n                                    </Avatar>\r\n                                }\r\n                                title={`${item.firstName} ${item.lastName}`}\r\n                                description={item.email}\r\n\r\n                                />\r\n                                {showSetRole && \r\n                                    <Button type=\"primary\" onClick={(e) =>showModal(e,item._id)}>Set User Role</Button>\r\n                                }\r\n                                {showRemove && \r\n                                    <Button type=\"primary\" onClick={()=>removeStudent(item._id)}>Remove Student</Button>\r\n                                }\r\n                        </List.Item>\r\n                    )}\r\n                >\r\n                </List>\r\n            </Card>\r\n            \r\n            {isModalVisible && <SetUserRole id={selectUser} handleOk={handleOk} handleCancel={handleCancel}></SetUserRole>}\r\n        </>\r\n    )\r\n}\r\nexport default ViewUsers;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js",["193","194"],"import React from 'react';\r\nimport { Form, Input, Button, Upload, message, Row, Col } from 'antd';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { createLesson } from '../../redux/actions/lesson.actions';\r\nimport { InboxOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport '../../css/Lessons.css';\r\nimport UploadImageToS3WithReactS3 from './UploadImageToS3WithReactS3';\r\nimport UploadFiles from './UploadFiles';\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst CreateLesson = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { Dragger } = Upload;\r\n\r\n    const props = {\r\n        name: 'file',\r\n        multiple: true,\r\n        action: '',\r\n        onChange(info) {\r\n            const { status } = info.file;\r\n            if (status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n            if (status === 'done') {\r\n                message.success(`${info.file.name} file uploaded successfully.`);\r\n            } else if (status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n    };\r\n\r\n    const save = (values) => {\r\n        console.log('Success:', values);\r\n        dispatch(createLesson(values)).then(response => {\r\n            if(response.success){\r\n                message.success(response.message)\r\n            }\r\n            else {\r\n                message.error('lesson creation failed')\r\n            }\r\n        }).catch(error => message.error('lesson creation failed'));\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Row>\r\n        {/* <UploadFiles actionOnUploadCompleted={null}/>\r\n        <UploadImageToS3WithReactS3/> */}\r\n            <Col span={12} offset={6}>\r\n                <Form className=\"parent\" \r\n                        {...layout} \r\n                        name=\"Add New Lesson\" \r\n                        initialValues={{ remember: true }} \r\n                        onFinish={save} \r\n                        onFinishFailed={onFinishFailed}>\r\n\r\n                        <Form.Item className=\"div1\"\r\n                            label=\"lesson subject\"\r\n                            name=\"lessonSubject\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    pattern: \"(^[a-zA-Z0-9 ]+$)\",\r\n                                    min: 2,\r\n                                    message: 'lesson subject is required and must be at least 2 chars',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item className=\"div2\"\r\n                            label=\"file name\"\r\n                            name=\"fileName\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    pattern: \"(^[a-zA-Z0-9]+$)\",\r\n                                    min: 2,\r\n                                    message: 'file name is required and must be at least 2 chars',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n\r\n                        </Form.Item>\r\n                        <Form.Item className=\"div3\">\r\n                            <Dragger {...props}>\r\n                                <p className=\"ant-upload-drag-icon\">\r\n                                    <InboxOutlined />\r\n                                </p>\r\n                                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                                <p className=\"ant-upload-hint\">\r\n                                    Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n                                    band files\r\n                                </p>\r\n                            </Dragger>\r\n                            <br/>\r\n                            <Upload action=\"                                                \" directory>\r\n                                <Button icon={<UploadOutlined />}>Upload Directory</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            className=\"div4\"\r\n                            label=\"task name\"\r\n                            name=\"taskName\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    pattern: \"(^[a-zA-Z0-9]+$)\",\r\n                                    min: 2,\r\n                                    message: 'file name is required and must be at least 2 chars',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item className=\"div5\">\r\n                            <Dragger {...props}>\r\n                                <p className=\"ant-upload-drag-icon\">\r\n                                    <InboxOutlined />\r\n                                </p>\r\n                                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                                <p className=\"ant-upload-hint\">\r\n                                    Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n                                    band files\r\n                                </p>\r\n                            </Dragger>\r\n                            <br/>\r\n                            <Upload action=\"                                                \" directory>\r\n                                <Button icon={<UploadOutlined />}>Upload Directory</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n                        <Form.Item className=\"div6\">\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Add Lesson\r\n                            </Button>\r\n                        </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row> \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateLesson;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\SetUserRole.js",["195"],"import React, { useState } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { Form, Input, Radio, Button, Modal, message } from 'antd';\r\nimport {setUserRole} from '../../redux/actions/user.actions';\r\n\r\n\r\nconst SetUserRole = (props) => {\r\n\r\n  const { id, handleOk, handleCancel } = props;\r\n\r\n  const { user } = useSelector(state => state.userReducer);\r\n    \r\n  const [role, setRole] = useState();\r\n\r\n  const onChange = e => {\r\n    console.log('radio checked', e.target.value);\r\n    setRole(e.target.value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n    \r\n  const save = () => {\r\n      dispatch(setUserRole(id, role)).then(response => {\r\n        message.success('role was set successfully');\r\n      }).catch(error => message.error('set user role failed'));    \r\n      handleOk();   \r\n  }\r\n  const cancel = () => {\r\n    handleCancel();\r\n  }\r\n\r\n  const onFinishFailed = () => {\r\n    alert('Failed to set user role');\r\n  }\r\n\r\n    return (\r\n      <>\r\n        <Modal title=\"Set Role\" visible={true} footer={null}>\r\n          <Form onFinish={save} onFinishFailed={onFinishFailed} >\r\n\r\n          <Form.Item>\r\n            <Radio.Group onChange={onChange}>\r\n            <Radio value={'student'}>student</Radio>\r\n            <br />\r\n            <Radio value={'teacher'}>teacher</Radio>\r\n            <br />\r\n            <Radio value={'secretary'}>secretary</Radio>\r\n            <br />\r\n            { user.role === 'admin' && \r\n              <Radio value={'admin'}>admin</Radio>\r\n            }\r\n            </Radio.Group>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                  Save\r\n              </Button>\r\n              <Button type=\"default\" htmlType=\"submit\" onClick={()=> cancel()}>\r\n                  cancel\r\n              </Button>\r\n\r\n          </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SetUserRole;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\layer.reducer.js",["196"],"import {SET_LAYERS, ADD_LAYER, UPDATE_GROUP} from '../actions/layer.actions';\r\nimport produce from \"immer\"\r\n\r\n\r\nconst InitialSatate = {\r\n    layers: null\r\n}\r\n\r\nexport default produce((state = InitialSatate, action) => {\r\n    switch (action.type) {\r\n        case SET_LAYERS:\r\n            return {...state, \r\n                layers : action.payload\r\n            };\r\n        case ADD_LAYER:\r\n            let newLayer = action.payload;\r\n            let layers = state.layers.filter(layer => layer._id !== newLayer._id);\r\n            layers = [...layers, newLayer];\r\n            state.layers = layers;\r\n            return state;\r\n\r\n        case UPDATE_GROUP:\r\n            for(let layer of state.layers) {\r\n                for(let grade of layer.grades) {\r\n                    for(let level of grade.levels) {\r\n                        for(let group of level.groups) {\r\n                            if(group._id === action.payload._id) {\r\n                                group = Object.assign(group, action.payload);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n})","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\layer.actions.js",["197"],"import { useSelector } from 'react-redux';\r\nimport {getAllLayers, \r\n        addNewLayer, \r\n        addNewGrade, \r\n        addNewLevel, \r\n        addNewGroup,\r\n        updateGroupDetails,\r\n        updateGroupLessons\r\n} from '../../services/layer.service';\r\n\r\nexport const SET_LAYERS = 'SET LAYERS';\r\nexport const ADD_LAYER = 'ADD LAYER';\r\nexport const UPDATE_GROUP = 'UPDATE GROUP';\r\n\r\nexport const setLayers = (layersList) => {\r\n    return {\r\n        type: SET_LAYERS,\r\n        payload: layersList\r\n    };\r\n};\r\nexport const setLayer = (layer) => {\r\n    return {\r\n        type: ADD_LAYER,\r\n        payload: layer\r\n    };\r\n};\r\nexport const setUpdatedGroup = (group) => {\r\n    return {\r\n        type: UPDATE_GROUP,\r\n        payload: group\r\n    };\r\n};\r\n\r\n\r\nexport const getLayers = () => {\r\n    return (dispatch) => {\r\n        getAllLayers().then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayers(response.data));\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const addLayer = (layer) => {\r\n    return dispatch => {\r\n        return addNewLayer(layer).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\n\r\nexport const addGrade = (params) => {\r\n    return dispatch => {\r\n        return addNewGrade(params).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const addLevel = (params) => {\r\n   \r\n    return dispatch => {\r\n        return addNewLevel(params).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\nexport const addGroup = (params) => {\r\n   \r\n    return dispatch => {\r\n        return addNewGroup(params).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\nexport const updateGroup = (group) => {\r\n   \r\n    return dispatch => {\r\n        return updateGroupDetails(group).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setUpdatedGroup(response.group));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\nexport const updateLessonsInGroup = (data) => {\r\n   \r\n    return dispatch => {\r\n        return updateGroupLessons(data).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                debugger;\r\n                dispatch(setUpdatedGroup(response.group));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\layer.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\AttendanceJournal.js",["198","199","200","201","202"],"import React, { useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\n\r\nconst AttendanceJournal = (props) => {\r\n\r\n    const {lessons} = props;\r\n\r\n    const [eventList, setEventList] = useState([]);\r\n    const myEventsList = [\r\n        {\r\n            start: moment().toDate(),\r\n            end: moment()\r\n                .add(1, \"days\")\r\n                .toDate(),\r\n            title: \"Some title\"\r\n        }\r\n    ];\r\n\r\n    const getEventsList = () => {\r\n        if(lessons === null)\r\n            return [];\r\n        return lessons.map(lesson => ({\r\n            start: lesson.fromAnHour,\r\n            end: lesson.toAnHour,\r\n            title: lesson.Code\r\n        }))\r\n    }\r\n\r\n    const onEventResize = (data) => {\r\n        const { start, end } = data;\r\n\r\n        // this.setState((state) => {\r\n        //   state.myEventsList[0].start = start;\r\n        //   state.myEventsList[0].end = end;\r\n        //   return { myEventsList: [...state.events] };\r\n        // });\r\n    };\r\n\r\n    const onEventDrop = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                \r\n                <DnDCalendar\r\n                    localizer={localizer}\r\n                    events={getEventsList}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    defaultDate={new Date()}\r\n                    defaultView=\"month\"\r\n                    onEventDrop={onEventDrop}\r\n                    onEventResize={onEventResize}\r\n                    resizable\r\n                    style={{ height: \"100vh\" }}\r\n\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AttendanceJournal;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import {useSelector} from 'react-redux';\r\n// import { Table,Input, AutoComplete } from 'antd';\r\n// import { AudioOutlined } from '@ant-design/icons';\r\n// import { $CombinedState } from 'redux';\r\n\r\n\r\n\r\n\r\n// const columns = [\r\n//   {\r\n//     title: 'Name',\r\n//     dataIndex: 'name'\r\n//   }\r\n// ];\r\n\r\n\r\n// const AttendanceJournal = (props) => {\r\n\r\n//   const {id}=props;\r\n\r\n// const { user } = useSelector(state => state.userReducer);\r\n\r\n//   const data = [\r\n//   {\r\n//     key:user._id ,\r\n//     name: user.name\r\n//   }\r\n//  ];\r\n\r\n\r\n//   const [students,setStudents] = useState();\r\n\r\n//     const rowSelection = {\r\n//     onChange: (selectedRowKeys, selectedRows) => {\r\n//         console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n//     },\r\n//     getCheckboxProps: record => ({\r\n//         disabled: record.name === 'Disabled User', \r\n//         name: record.name,\r\n//     }),\r\n//     };\r\n\r\n//   return (\r\n//     <>\r\n//         <Table\r\n//           rowSelection={{\r\n//             type: 'checkbox',\r\n//             ...rowSelection,\r\n//           }}\r\n//           columns={columns}\r\n//           dataSource={data}\r\n\r\n//         />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default AttendanceJournal;\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchyListView.js",["203","204"],"import React, {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {getLayers} from '../../redux/actions/layer.actions';\r\nimport { Button, Card, Col, Row, Breadcrumb } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport CreateHierarchy from './CreateHierarchy';\r\n\r\nconst HierarchyListView = (props) => {\r\n\r\n    const { type, layerId, gradeId, nextHierarchy } = props;\r\n    const [showAddNewHierarchy, setshowAddNewHierarchy] = useState(false);\r\n    const  { layers } = useSelector(state => state.layerReducer);\r\n    const history = useHistory();\r\n    // const {hierarchyItem} = history.location.state;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(layers == null){\r\n            dispatch(getLayers());\r\n        }\r\n    }, [dispatch, layers]);\r\n\r\n    const getHierarchyItemId = () => {\r\n        if(history.location.state)\r\n            return history.location.state.hierarchyItem._id;\r\n        return null;\r\n    }\r\n\r\n    const getData = () => {\r\n        let data;\r\n        switch (type) {\r\n            case 'layer':\r\n                data = layers;\r\n                break;\r\n            case 'grade':\r\n                data =  layers.find(layer => layer._id === getHierarchyItemId()).grades;\r\n                break;\r\n            case 'level':\r\n                data =  layers.find(layers => layers.grades.find(grade => \r\n                    grade._id === getHierarchyItemId())\r\n                ).grades.find(grade => \r\n                    grade._id === getHierarchyItemId()\r\n                ).levels;\r\n                break;\r\n            case 'group':\r\n                layers.forEach(layer => {\r\n                    layer.grades.forEach(grade => {\r\n                        grade.levels.forEach(level => {\r\n                            if(level._id === getHierarchyItemId())\r\n                                data = level.groups;\r\n                        })\r\n                    })\r\n                })\r\n                break;\r\n            default:\r\n                return [];\r\n        }\r\n        return data ? data : [];\r\n    }\r\n\r\n    const showDetails = (item) => {\r\n        history.push({\r\n            pathname: `/${nextHierarchy}`,\r\n            state: { hierarchyItem: item },\r\n        });\r\n    }\r\n\r\n    const handleAddNewLayer = () => {\r\n        setshowAddNewHierarchy(true);\r\n    }\r\n\r\n    const hideCreateHierarchy = () => {\r\n        setshowAddNewHierarchy(false);\r\n    }\r\n\r\n    return (\r\n        <>      \r\n        \r\n            <div className=\"hierarchy-header\">\r\n                <Breadcrumb>\r\n                    {['layer', 'grade', 'level', 'group' ].includes(type) && <Breadcrumb.Item>Layers</Breadcrumb.Item>}\r\n                    {['grade', 'level', 'group' ].includes(type) && <Breadcrumb.Item>Grades</Breadcrumb.Item>}\r\n                    {['level', 'group' ].includes(type) && <Breadcrumb.Item>Levels</Breadcrumb.Item>}\r\n                    {['group' ].includes(type) && <Breadcrumb.Item>Groups</Breadcrumb.Item>}\r\n                </Breadcrumb>\r\n\r\n                <Button htmlType=\"submit\" type=\"primary\" onClick={handleAddNewLayer}>{`add new ${type}`}</Button>\r\n            </div>\r\n            {showAddNewHierarchy && \r\n                <CreateHierarchy \r\n                    hideCreateHierarchy={hideCreateHierarchy} \r\n                    type={type} \r\n                    layerId={getHierarchyItemId()}\r\n                    gradeId={getHierarchyItemId()}\r\n                    levelId={getHierarchyItemId()}\r\n                />}\r\n               <div>\r\n                <div className=\"site-card-wrapper\">\r\n                    <Row gutter={16}>\r\n                        {getData().map(item =>\r\n                            <Col key={item._id} span={8}>\r\n                                <Card  title={item.name} bordered={true} >\r\n                                    <Button type=\"primary\" onClick={() => showDetails(item)}>view details</Button>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </div>\r\n               </div>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HierarchyListView;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\CreateHierarchy.js",["205"],"import React, { useState, useEffect }  from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addLayer, addGrade, addLevel, addGroup} from '../../redux/actions/layer.actions';\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst CreateHierarchy = (props) => {\r\n\r\n    const {hideCreateHierarchy , type, layerId, gradeId , levelId} = props;\r\n    const { layers } = useSelector(state => state.layerReducer);\r\n    const [loading, setLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getLayerId = (gradeId) => {\r\n        \r\n        if(!gradeId)\r\n            return null;\r\n        return layers.find(layers => layers.grades.find(grade => grade._id === gradeId))._id;\r\n    }\r\n    \r\n    const getGradeId = (levelId) => {\r\n        \r\n        if(!levelId)\r\n            return null;\r\n    \r\n        let result;\r\n        layers.forEach(layer => {\r\n            layer.grades.forEach(grade => {\r\n                let data = grade.levels.find(level => level._id === levelId)\r\n                if (data) {\r\n                    result = grade;\r\n                    return;\r\n                }\r\n            });\r\n    \r\n        });\r\n        return result._id;\r\n    }\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n        let {name} = values;\r\n        let func;\r\n        let params;\r\n        switch (type) {\r\n            case 'layer':\r\n                func = addLayer;\r\n                params = name;\r\n                break;\r\n            case 'grade':\r\n                func = addGrade;\r\n                params = {layerId : layerId , gradeName: name };\r\n                break;\r\n            case 'level':\r\n                func = addLevel;\r\n                params = {gradeId: gradeId, levelName: name, layerId: getLayerId(gradeId) };\r\n                break;\r\n            case 'group':\r\n                func = addGroup;\r\n                params = {\r\n                    gradeId: getGradeId(levelId), \r\n                    groupName: name, \r\n                    layerId: getLayerId(getGradeId(levelId)), \r\n                    levelId: levelId\r\n                };\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n        dispatch(func(params)).then((response) => {\r\n            setLoading(false);\r\n            if(response.success){\r\n                form.resetFields()\r\n                message.success(`${type} created sucessfuly`);\r\n                hideCreateHierarchy();\r\n            }\r\n            else {\r\n                message.error(response.error.response.data.error);\r\n            }\r\n        }).catch(error => {\r\n            debugger;\r\n            message.error(`Filed to create ${type}, error message: ${error}`);\r\n        });  \r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Form {...layout} form={form} name={`Add ${type}`} initialValues={{ remember: true }} onFinish={save} >\r\n            <Form.Item\r\n                label={`${type} Name`}\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `Please input ${type} name !`\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\"  loading={loading}>\r\n                    add\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </>\r\n)\r\n   \r\n}\r\n\r\nexport default CreateHierarchy;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\ViewGroupsDetails.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AffiliationToGroup.js",["206","207","208","209","210"],"import React, { useEffect, useState } from 'react';\r\nimport { AutoComplete, Input, Form, Tabs, Drawer ,message,Button, Card } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getTeachers, getStudents } from '../../services/user.service';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {updateGroup} from '../../redux/actions/layer.actions';\r\nimport ViewUsers from '../../components/users/ViewUsers';\r\nimport GroupDetails from './GroupDetails';\r\n\r\n\r\n\r\nconst AffiliationToGroup = (props) => {\r\n\r\n    const {mode} = props;\r\n    const history = useHistory();\r\n    const [group, setGroup] = useState();\r\n    const [teacherList, setTeacherList] = useState([]);\r\n    const [studentList, setStudentList] = useState();\r\n    const [groupName, setGroupName] = useState('');\r\n    const [selectedTeacher, setSelectedTeacher] = useState('');\r\n    const [selectedStudents, setSelectedStudents] = useState([]);\r\n    const [currentStudent, setCurrentStudent] = useState(null);\r\n    // const [selectStudent, setSelectStudent] = useState(group.StudentsInTheGroup.studentCode);\r\n    const [teacherDefaultValue, setTeacherDefaultValue] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [viewMode, setViewMode] = useState(mode);\r\n    const { layers } = useSelector(state => state.layerReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(group) {\r\n            initTeacherList();\r\n            initStudentList();\r\n        }\r\n    }, [group]);\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        for(let layer of layers) {\r\n            for(let grade of layer.grades) {\r\n                for(let level of grade.levels) {\r\n                    for(let group of level.groups) {\r\n                        if(group._id === history.location.state.hierarchyItem._id) {\r\n                            setGroup(group);\r\n                            setGroupName(group.name)\r\n                            setSelectedTeacher(group.teacherCode)\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [layers]);\r\n\r\n    const initTeacherList = () => {\r\n        getTeachers().then(resopnse => resopnse.data).then(response => {\r\n            if (response.success) {\r\n                let result = response.data.map(teacher => {\r\n                    if(group.teacherCode && teacher._id === group.teacherCode) {\r\n                        setTeacherDefaultValue(`${teacher.firstName} ${teacher.lastName}`);\r\n                        setSelectedTeacher(teacher._id);\r\n                    }\r\n                    return ({ ...teacher, key:teacher._id, value:`${teacher.firstName} ${teacher.lastName}` })\r\n                })\r\n                setTeacherList(result);\r\n            }\r\n            else {\r\n                message.error('Faild to load teacher list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load teacher list'));\r\n    }\r\n    const getPicklistItem = (student) => {\r\n        let value = `${student.firstName} ${student.lastName}`;\r\n        return (\r\n            <div value={value}>\r\n                <h3>{value}</h3>\r\n                <label>{student.email}</label>\r\n            </div>\r\n        )\r\n    }\r\n    const initStudentList = () => {\r\n        getStudents().then(resopnse => resopnse.data).then(response => {\r\n            if (response.success) {\r\n                debugger\r\n                let result = response.data.map(student => \r\n                    ({...student,\r\n                        key:student._id, \r\n                        value: `${student.firstName} ${student.lastName}`,\r\n                        label : getPicklistItem(student)\r\n                    }\r\n                ));\r\n                let studentsIds = group.StudentsInTheGroup.map(studentInGroup => studentInGroup.studentCode);\r\n                let existStudents = result.filter(student => studentsIds.includes(student._id));\r\n                let notExistStudents = result.filter(student => !studentsIds.includes(student._id));\r\n                setStudentList(notExistStudents);\r\n                setSelectedStudents(existStudents); \r\n            }\r\n            \r\n            else {\r\n                message.error('Faild to load student list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load student list'));\r\n    }\r\n\r\n    const handleSelectTeacher = (value, teacher) => {\r\n        setSelectedTeacher(teacher._id);\r\n        setTeacherDefaultValue(`${teacher.firstName} ${teacher.lastName}`)\r\n    }\r\n    const handleSelectStudent = (value, student) => {\r\n        setCurrentStudent(student);\r\n    }\r\n\r\n    const addNewStudentToList = (event) => {\r\n        setSelectedStudents([...selectedStudents, currentStudent]);\r\n        let students = studentList.filter(student => student._id !== currentStudent._id);\r\n        setStudentList(students);\r\n        setCurrentStudent(null)\r\n    }\r\n\r\n    const filterAutoComplete  = (inputValue, option) => {\r\n        return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n    }\r\n\r\n    const save = () => {\r\n        setLoading(true);\r\n        let data = {\r\n            groupId: group._id,\r\n            name:groupName,\r\n            teacherCode: selectedTeacher,\r\n            StudentsInTheGroup: selectedStudents.map(student => \r\n                ({studentCode: student._id})\r\n            )\r\n        }\r\n\r\n        dispatch(updateGroup(data)).then((response) => {\r\n            setLoading(false);\r\n            if(response.success){\r\n                debugger\r\n                setGroup(response.group);\r\n                message.success(`group updated sucessfuly`);\r\n            }\r\n            setViewMode('read');\r\n        }).catch(error => {\r\n            message.error(`Filed to update group`);\r\n        });  \r\n    }\r\n    const removeStudent = (studentId) => {\r\n        let student = selectedStudents.find(student => student._id === studentId);\r\n        let selectedList = selectedStudents.filter(student => student._id !== studentId)\r\n        setSelectedStudents(selectedList);\r\n        setStudentList([...studentList, student]);\r\n    }\r\n\r\n    const editGroup = () => {\r\n        setViewMode('edit');\r\n    }\r\n\r\n    const style = {\r\n        display : \"flex\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n    const style2 = {\r\n        width: \"-webkit-fill-available\"\r\n    }\r\n\r\n    return (\r\n        \r\n       \r\n        <div style={style}>\r\n        {group &&\r\n            <>\r\n            <div style={style2}>\r\n                {viewMode === 'edit' && \r\n                    <>\r\n                        <Form\r\n                            layout=\"vertical\"\r\n                        >\r\n                            <Form.Item\r\n                                label=\"group name\"\r\n                                name=\"group name\"\r\n                                onChange={(e) => {setGroupName(e.target.value)}}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: `Please input group name!`\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input defaultValue={groupName}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"teacher name\" name=\"teacher name\">     \r\n                                <AutoComplete\r\n                                    style={{\r\n                                        width: 200,\r\n                                    }}\r\n                                    options={teacherList}\r\n                                    defaultValue={teacherDefaultValue}\r\n                                    placeholder=\"teacher name\"\r\n                                    onSelect={handleSelectTeacher}\r\n                                    filterOption={filterAutoComplete}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label=\"add a new student\" name=\"add a new student\"> \r\n                            <AutoComplete\r\n                                style={{width: 200}}\r\n                                options={studentList}\r\n                                placeholder=\"add student\"\r\n                                onSelect={handleSelectStudent}\r\n                                filterOption={filterAutoComplete}\r\n                                notFoundContent=\"No student found\"\r\n                                value={currentStudent !== null? `${currentStudent.firstName} ${currentStudent.lastName}` : \"\"}\r\n                            />\r\n                            <Button disabled={currentStudent=== null} onClick={addNewStudentToList}>Add Student</Button>\r\n                            </Form.Item>\r\n                        <div>\r\n                        </div>\r\n\r\n                        </Form>\r\n                        <ViewUsers \r\n                            title=\"Student In Group:\" \r\n                            userList={selectedStudents} \r\n                            showSetRole={false}\r\n                            showRemove={true}\r\n                            removeStudent={removeStudent}\r\n                        /> \r\n                    </>\r\n                }\r\n                    \r\n                {viewMode === 'read' &&\r\n                    <GroupDetails \r\n                        group={group} \r\n                        teacherName={teacherDefaultValue} \r\n                        studentsInGroup={selectedStudents}\r\n                    />\r\n                }\r\n          \r\n            </div>\r\n            <div>\r\n                {viewMode === 'edit' && <Button loading={loading} onClick={save}>Save Changes</Button>}\r\n                {viewMode === 'read' && \r\n                    <>\r\n                        <Button loading={loading} onClick={editGroup}>Edit</Button>\r\n                    </>\r\n                }\r\n                \r\n            </div>\r\n            </>\r\n        }\r\n        </div>\r\n    )\r\n}\r\nexport default AffiliationToGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\NewPassword.js",["211","212","213"],"import React, { useState } from 'react';\r\nimport {Form,Input,Select,Button,} from 'antd';\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: {\r\n        span: 24,\r\n      },\r\n      sm: {\r\n        span: 8,\r\n      },\r\n    },\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n      },\r\n    },\r\n  };\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n  \r\n\r\n\r\nconst NewPassword = () => { \r\n   const RegistrationForm = () => {\r\n    const [form] = Form.useForm();\r\n  \r\n    const onFinish = (values) => {\r\n      console.log('Received values of form: ', values);\r\n    };\r\n    return (\r\n        <>\r\n               <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n  \r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject('The two passwords that you entered do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          save\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    <RegistrationForm />\r\n        </>\r\n    )\r\n    }\r\n}\r\nexport default NewPassword;\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\NavBar.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\hooks\\stringToColor.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadImageToS3WithReactS3.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AddLessonToGroup.js",["214","215","216","217","218"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button,Space, DatePicker,TimePicker, message,Checkbox,AutoComplete } from 'antd';\r\nimport {getLessons} from '../../services/lesson.service';\r\nimport {updateLessonsInGroup} from '../../redux/actions/layer.actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddLessonsToGroup = (props) => {\r\n    const {groupId, setViewDrawer} = props;\r\n    const [startDate, setStartDate] = useState();\r\n    // const [startDate, setStartDate] = useState();\r\n    const [lessons, setLessons] = useState([]);\r\n    const [selectedLesson, setSelectedLesson] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [key, setKey] = useState(new Date());\r\n    const format = 'HH:mm';\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        initLessons();\r\n    }, []);\r\n\r\n    const initLessons = () => {\r\n        getLessons().then(response => {\r\n            debugger\r\n            if (response.success) {\r\n                debugger\r\n                let result = response.data.map(lesson => \r\n                    ({...lesson,\r\n                        key:lesson._id, \r\n                        value: lesson.lessonSubject,\r\n                        label : lesson.lessonSubject\r\n                    }\r\n                ));\r\n                setLessons(result);\r\n            }\r\n            else {\r\n                message.error('Faild to load teacher list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load teacher list'));\r\n    }\r\n\r\n\r\n    const handleSatartDateChanged = (date, dateString) => {\r\n        setStartDate(date);\r\n    }\r\n\r\n    // Code: { type: ObjectId, required: true },\r\n    // remarks: { type: String, required: false },\r\n    // // date: { type: Date, required: true },\r\n    // comments: { type: Date, required: true },\r\n    // toAnHour: { type: Date, required: true },\r\n    // comments: { type: String, required: false },\r\n\r\n    const filterAutoComplete = (inputValue, option) => {\r\n        return option.lessonSubject.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1  \r\n    }\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n        let lesson = {\r\n            Code: selectedLesson._id,\r\n            fromDateTime:values[\"lesson time\"][0],\r\n            toDateTime:values[\"lesson time\"][1],\r\n            comments: values[\"comments\"]\r\n        }\r\n        let data = {groupId: groupId, lessons: [lesson]};\r\n        dispatch(updateLessonsInGroup(data)).then(res => {\r\n            if(res.success){\r\n                setLoading(false);\r\n                message.success(\"lesson created successfuly\")\r\n                setViewDrawer(false);\r\n                setKey(new Date());\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        console.log(\"cancel\");\r\n    }\r\n\r\n    const handleSelectLesson = (value, lesson) => {\r\n        setSelectedLesson(lesson);\r\n    }\r\n\r\n    const style = { \r\n        display: \"grid\"\r\n    }\r\n    return (\r\n        <>\r\n        <Space>\r\n        <Form key={key} layout=\"vertical\" style={style} initialValues={{ remember: true }} onFinish={save}>\r\n            <Form.Item \r\n                label=\"lesson time\" \r\n                name=\"lesson time\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'please set lesson hours!'\r\n                    },\r\n                ]}\r\n            >\r\n                <RangePicker\r\n                    ranges={{\r\n                        Today: [moment(), moment()],\r\n                        'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n                    }}\r\n                    showTime\r\n                    format=\"YYYY/MM/DD HH:mm\"\r\n                />\r\n\r\n            </Form.Item>\r\n            <Form.Item \r\n                label=\"select lesson\" \r\n                name=\"select lesson\" \r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'please select lesson!'\r\n                    },\r\n                ]}\r\n            \r\n            >     \r\n                <AutoComplete\r\n                    style={{\r\n                        width: 200,\r\n                    }}\r\n                    options={lessons}\r\n                    placeholder=\"select lesson\"\r\n                    onSelect={handleSelectLesson}\r\n                    filterOption={filterAutoComplete}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                    label=\"comments\"\r\n                    name=\"comments\"\r\n                >\r\n                    <Input />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                        Save\r\n                    </Button>\r\n                    <Button type=\"default\" htmlType=\"button\" onClick={handleCancel}>\r\n                        Cancel\r\n                    </Button>\r\n            </Form.Item>\r\n        </Form>\r\n        </Space>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddLessonsToGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\LessonsInGroup.js",["219","220","221"],"import React, {useEffect, useState} from 'react';\r\nimport { List, message, Steps, Divider, Popover } from 'antd';\r\nimport {getLessons} from '../../services/lesson.service';\r\n\r\nconst { Step } = Steps;\r\n\r\n\r\nconst LessonsInGroup = (props) => {\r\n\r\n    const {lessons} = props;\r\n    const [groupLessons, setGroupLessons] = useState([]);\r\n    const [currentLessonIndex, setCurrentLessonIndex] = useState();\r\n\r\n    useEffect(() => {\r\n        initLessons();\r\n    }, [lessons]);\r\n    \r\n    \r\n    useEffect(() => {\r\n        let index = groupLessons.findIndex(lesson => new Date(lesson.fromDateTime) > new Date());\r\n        setCurrentLessonIndex(index);\r\n        // groupLessons.forEach((lesson, index) => {\r\n        //     if(new Date(lesson.fromDateTime) > new Date()){\r\n        //         setCurrentLessonIndex(index);\r\n        //         return;\r\n        //     }\r\n        // });\r\n    }, [groupLessons]);\r\n\r\n    const initLessons = () => {\r\n        getLessons().then(response => {\r\n\r\n            if (response.success) {\r\n                let lessonsMap = Object.assign({}, ...response.data.map(lesson => ({[lesson._id]: lesson})));\r\n                let result = Object.values(lessons.map(lesson => ({...lesson, lessonObject: lessonsMap[lesson.Code]})));\r\n                let filterdList = result.sort((a, b) => new Date(a.fromDateTime) - new Date(b.fromDateTime))\r\n                setGroupLessons(filterdList);\r\n            }\r\n            else {\r\n                message.error('Faild to load lessons list')\r\n            }\r\n            console.log(response);\r\n        })\r\n        .catch(error => message.error('Faild to load lessons list'));\r\n    }\r\n\r\n    const customDot = (dot, { status, index }) => (\r\n        <Popover\r\n          content={\r\n            <span>\r\n              step {index} status: {status}\r\n            </span>\r\n          }\r\n        >\r\n          {dot}\r\n        </Popover>\r\n      );\r\n\r\n\r\n    return (\r\n        <>\r\n            {groupLessons.length && \r\n                <Steps progressDot={customDot} current={currentLessonIndex} direction=\"vertical\">\r\n            \r\n                    {groupLessons.map(lesson => \r\n                        <Step key={lesson._id} title={lesson.lessonObject.lessonSubject} \r\n                                description={lesson.fromDateTime}\r\n                        />\r\n                    )}\r\n                </Steps>\r\n            }  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default LessonsInGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\GroupDetails.js",["222","223","224","225"],"import React, {useState} from 'react';\r\nimport ViewUsers from '../../components/users/ViewUsers';\r\nimport { AutoComplete, Input, Form, Tabs, Drawer ,message,Button, Card } from 'antd';\r\nimport LessonsInGroup from './LessonsInGroup';\r\nimport AddLessonsToGroup from './AddLessonToGroup';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst GroupDetails = (props) => {\r\n\r\n    const {group, teacherName, studentsInGroup} = props;\r\n    const [viewDrawer, setViewDrawer] = useState(false);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card title={`Group name: ${group.name}`} style={{ width: 300 }} bordered={false}>\r\n                        <p>Teacher name: {teacherName}</p>\r\n            </Card>\r\n\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"Student In Group\" key=\"1\">\r\n                    <ViewUsers \r\n                        title=\"Student In Group:\" \r\n                        userList={studentsInGroup} \r\n                        showSetRole={false}\r\n                        showRemove={false}\r\n                    /> \r\n                </TabPane>\r\n                <TabPane tab=\"Group Lessons\" key=\"2\">\r\n                    <>\r\n                    <LessonsInGroup lessons={group.lessons}/>\r\n                        <Button onClick={()=>{setViewDrawer(true)}}>add new lesson to group</Button>\r\n                        <Drawer\r\n                            title=\"add lesson to group\"\r\n                            placement=\"right\"\r\n                            closable={()=>{setViewDrawer(true)}}\r\n                            visible={viewDrawer}\r\n                            key=\"right\"\r\n                            >\r\n                            <AddLessonsToGroup setViewDrawer={setViewDrawer} groupId={group._id}/>\r\n                        </Drawer>\r\n                    </>\r\n                </TabPane>\r\n            </Tabs>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupDetails;\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadFiles.js",["226","227","228","229","230"],"import React, {useState} from  'react';\r\nimport { Upload, Button, message } from \"antd\";\r\nimport { InboxOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport { uploadFile } from 'react-s3';\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst config = {\r\n    bucketName: process.env.REACT_APP_S3_BUCKET,\r\n    region: process.env.REACT_APP_S3_REGION,\r\n    accessKeyId: process.env.REACT_APP_S3_ACCESS_KEY,\r\n    secretAccessKey: process.env.REACT_APP_S3_SECRET_ACCESS_KEY,\r\n}\r\n\r\nconst UploadFiles  = (props) => {\r\n\r\n    const { actionOnUploadCompleted } = props;\r\n    const [selectedFileList, setSelectedFileList] = useState([]);\r\n\r\n    const uploadFileToS3 = ({ file, onSuccess, onError }) => {\r\n        uploadFile(file, config).then(data => {\r\n            console.log(data.location);\r\n            actionOnUploadCompleted(data.location);\r\n            onSuccess(\"ok\")\r\n        }).catch(error => {\r\n            console.error(error);\r\n            onError({error});\r\n        })\r\n    }\r\n    \r\n    //TODO : delete files: https://www.npmjs.com/package/react-s3\r\n\r\n    const upload = info => {\r\n\r\n        switch (info.file.status) {\r\n            // case \"uploading\":\r\n            //     nextState.selectedFileList = [info.file];\r\n            //     break;\r\n            case \"done\":\r\n                message.success(`${info.file.name} file uploaded successfully.`);\r\n                break;\r\n\r\n            case \"error\":\r\n                message.error(`${info.file.name} file upload failed.`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const daraggerProps = {\r\n        name: 'file',\r\n        multiple: true,\r\n        customRequest: uploadFileToS3,\r\n        onChange : upload\r\n    };\r\n\r\n\r\n    return (\r\n      <>\r\n        <Dragger {...daraggerProps}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n            <p className=\"ant-upload-hint\">\r\n            Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n            band files\r\n            </p>\r\n        </Dragger>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default UploadFiles;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\Library.js",["231"],"import React, { useEffect, useState } from 'react';\r\nimport api from '../../services/book.service';\r\nimport { Table, Button, message } from 'antd';\r\nimport CreateNewBook from './CreateNewBook';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getBooks} from '../../redux/actions/book.actions'\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Barcode',\r\n        dataIndex: 'barcode'\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name'\r\n    },\r\n    {\r\n        title: 'Writer',\r\n        dataIndex: 'writer'\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status'\r\n    }\r\n];\r\n\r\n\r\n\r\nconst Library = () => {\r\n\r\n    const [tableData, setTableData] = useState([]);\r\n    const [viewDrawer, setViewDrawer] = useState(false);\r\n    const { books } = useSelector(state => state.bookReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const setViewAddBook = (value) => {\r\n        setViewDrawer(value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        if(books == null) {\r\n            dispatch(getBooks())\r\n            .catch(error => {\r\n                console.log(error);\r\n                message.error('Failed to get books from server')\r\n            });\r\n        }\r\n        else {\r\n             let data = books.map(book => ({...book, key: book._id}));\r\n            setTableData(data);\r\n        }\r\n    }, [books, dispatch]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Button type=\"primary\" onClick={()=>{setViewAddBook(true)}}>New Book</Button>\r\n            {viewDrawer && <CreateNewBook setVisible={setViewAddBook} />}\r\n            <Table columns={columns} dataSource={tableData} bordered />\r\n        </>\r\n    )\r\n}\r\nexport default Library;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\CreateNewBook.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\book.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\book.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\book.actions.js",[],{"ruleId":"232","severity":1,"message":"233","line":8,"column":48,"nodeType":"234","messageId":"235","endLine":8,"endColumn":65},{"ruleId":"232","severity":1,"message":"236","line":9,"column":50,"nodeType":"234","messageId":"235","endLine":9,"endColumn":54},{"ruleId":"232","severity":1,"message":"237","line":13,"column":8,"nodeType":"234","messageId":"235","endLine":13,"endColumn":19},{"ruleId":"232","severity":1,"message":"238","line":14,"column":8,"nodeType":"234","messageId":"235","endLine":14,"endColumn":25},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"232","severity":1,"message":"243","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":17},{"ruleId":"232","severity":1,"message":"244","line":5,"column":17,"nodeType":"234","messageId":"235","endLine":5,"endColumn":23},{"ruleId":"232","severity":1,"message":"245","line":5,"column":25,"nodeType":"234","messageId":"235","endLine":5,"endColumn":31},{"ruleId":"232","severity":1,"message":"246","line":13,"column":12,"nodeType":"234","messageId":"235","endLine":13,"endColumn":19},{"ruleId":"232","severity":1,"message":"247","line":13,"column":21,"nodeType":"234","messageId":"235","endLine":13,"endColumn":31},{"ruleId":"232","severity":1,"message":"248","line":14,"column":21,"nodeType":"234","messageId":"235","endLine":14,"endColumn":31},{"ruleId":"232","severity":1,"message":"249","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":21},{"ruleId":"232","severity":1,"message":"250","line":5,"column":31,"nodeType":"234","messageId":"235","endLine":5,"endColumn":39},{"ruleId":"232","severity":1,"message":"251","line":5,"column":41,"nodeType":"234","messageId":"235","endLine":5,"endColumn":46},{"ruleId":"232","severity":1,"message":"252","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":25},{"ruleId":"232","severity":1,"message":"250","line":5,"column":31,"nodeType":"234","messageId":"235","endLine":5,"endColumn":39},{"ruleId":"232","severity":1,"message":"253","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":26},{"ruleId":"232","severity":1,"message":"254","line":2,"column":16,"nodeType":"234","messageId":"235","endLine":2,"endColumn":23},{"ruleId":"232","severity":1,"message":"255","line":2,"column":33,"nodeType":"234","messageId":"235","endLine":2,"endColumn":37},{"ruleId":"232","severity":1,"message":"256","line":2,"column":54,"nodeType":"234","messageId":"235","endLine":2,"endColumn":59},{"ruleId":"232","severity":1,"message":"236","line":3,"column":21,"nodeType":"234","messageId":"235","endLine":3,"endColumn":25},{"ruleId":"232","severity":1,"message":"257","line":18,"column":14,"nodeType":"234","messageId":"235","endLine":18,"endColumn":22},{"ruleId":"232","severity":1,"message":"258","line":8,"column":8,"nodeType":"234","messageId":"235","endLine":8,"endColumn":34},{"ruleId":"232","severity":1,"message":"259","line":9,"column":8,"nodeType":"234","messageId":"235","endLine":9,"endColumn":19},{"ruleId":"232","severity":1,"message":"260","line":3,"column":16,"nodeType":"234","messageId":"235","endLine":3,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":35,"column":9,"nodeType":"263","messageId":"264","endLine":36,"endColumn":26},{"ruleId":"232","severity":1,"message":"249","line":1,"column":10,"nodeType":"234","messageId":"235","endLine":1,"endColumn":21},{"ruleId":"232","severity":1,"message":"265","line":16,"column":12,"nodeType":"234","messageId":"235","endLine":16,"endColumn":21},{"ruleId":"232","severity":1,"message":"266","line":16,"column":23,"nodeType":"234","messageId":"235","endLine":16,"endColumn":35},{"ruleId":"232","severity":1,"message":"267","line":17,"column":11,"nodeType":"234","messageId":"235","endLine":17,"endColumn":23},{"ruleId":"232","severity":1,"message":"268","line":38,"column":17,"nodeType":"234","messageId":"235","endLine":38,"endColumn":22},{"ruleId":"232","severity":1,"message":"269","line":38,"column":24,"nodeType":"234","messageId":"235","endLine":38,"endColumn":27},{"ruleId":"232","severity":1,"message":"270","line":11,"column":19,"nodeType":"234","messageId":"235","endLine":11,"endColumn":26},{"ruleId":"232","severity":1,"message":"271","line":11,"column":28,"nodeType":"234","messageId":"235","endLine":11,"endColumn":35},{"ruleId":"232","severity":1,"message":"253","line":1,"column":27,"nodeType":"234","messageId":"235","endLine":1,"endColumn":36},{"ruleId":"232","severity":1,"message":"272","line":2,"column":37,"nodeType":"234","messageId":"235","endLine":2,"endColumn":41},{"ruleId":"232","severity":1,"message":"273","line":2,"column":43,"nodeType":"234","messageId":"235","endLine":2,"endColumn":49},{"ruleId":"232","severity":1,"message":"274","line":2,"column":67,"nodeType":"234","messageId":"235","endLine":2,"endColumn":71},{"ruleId":"275","severity":1,"message":"276","line":38,"column":8,"nodeType":"277","endLine":38,"endColumn":15,"suggestions":"278"},{"ruleId":"275","severity":1,"message":"279","line":56,"column":8,"nodeType":"277","endLine":56,"endColumn":16,"suggestions":"280"},{"ruleId":"232","severity":1,"message":"252","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":25},{"ruleId":"232","severity":1,"message":"281","line":2,"column":20,"nodeType":"234","messageId":"235","endLine":2,"endColumn":26},{"ruleId":"232","severity":1,"message":"282","line":22,"column":9,"nodeType":"234","messageId":"235","endLine":22,"endColumn":27},{"ruleId":"232","severity":1,"message":"283","line":2,"column":48,"nodeType":"234","messageId":"235","endLine":2,"endColumn":58},{"ruleId":"232","severity":1,"message":"250","line":2,"column":68,"nodeType":"234","messageId":"235","endLine":2,"endColumn":76},{"ruleId":"232","severity":1,"message":"284","line":13,"column":12,"nodeType":"234","messageId":"235","endLine":13,"endColumn":21},{"ruleId":"232","severity":1,"message":"285","line":19,"column":11,"nodeType":"234","messageId":"235","endLine":19,"endColumn":17},{"ruleId":"232","severity":1,"message":"286","line":49,"column":11,"nodeType":"234","messageId":"235","endLine":49,"endColumn":34},{"ruleId":"232","severity":1,"message":"287","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":14},{"ruleId":"232","severity":1,"message":"288","line":2,"column":32,"nodeType":"234","messageId":"235","endLine":2,"endColumn":39},{"ruleId":"275","severity":1,"message":"289","line":16,"column":8,"nodeType":"277","endLine":16,"endColumn":17,"suggestions":"290"},{"ruleId":"232","severity":1,"message":"291","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":22},{"ruleId":"232","severity":1,"message":"260","line":3,"column":24,"nodeType":"234","messageId":"235","endLine":3,"endColumn":29},{"ruleId":"232","severity":1,"message":"292","line":3,"column":31,"nodeType":"234","messageId":"235","endLine":3,"endColumn":35},{"ruleId":"232","severity":1,"message":"254","line":3,"column":51,"nodeType":"234","messageId":"235","endLine":3,"endColumn":58},{"ruleId":"232","severity":1,"message":"244","line":2,"column":18,"nodeType":"234","messageId":"235","endLine":2,"endColumn":24},{"ruleId":"232","severity":1,"message":"293","line":3,"column":25,"nodeType":"234","messageId":"235","endLine":3,"endColumn":39},{"ruleId":"232","severity":1,"message":"294","line":19,"column":12,"nodeType":"234","messageId":"235","endLine":19,"endColumn":28},{"ruleId":"232","severity":1,"message":"295","line":19,"column":30,"nodeType":"234","messageId":"235","endLine":19,"endColumn":49},{"ruleId":"296","severity":1,"message":"297","line":36,"column":9,"nodeType":"298","messageId":"299","endLine":47,"endColumn":10},{"ruleId":"232","severity":1,"message":"300","line":2,"column":8,"nodeType":"234","messageId":"235","endLine":2,"endColumn":11},"no-unused-vars","'AuthorizedSection' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NewPassword' is defined but never used.","'ViewGroupsDetails' is defined but never used.","no-native-reassign",["301"],"no-negated-in-lhs",["302"],"'connect' is defined but never used.","'Button' is defined but never used.","'Layout' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'useSelector' is defined but never used.","'Checkbox' is defined but never used.","'Alert' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'message' is defined but never used.","'Spin' is defined but never used.","'Modal' is defined but never used.","'navigate' is defined but never used.","'UploadImageToS3WithReactS3' is defined but never used.","'UploadFiles' is defined but never used.","'Input' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'eventList' is assigned a value but never used.","'setEventList' is assigned a value but never used.","'myEventsList' is assigned a value but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.","'layerId' is assigned a value but never used.","'gradeId' is assigned a value but never used.","'Tabs' is defined but never used.","'Drawer' is defined but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initStudentList' and 'initTeacherList'. Either include them or remove the dependency array.","ArrayExpression",["303"],"React Hook useEffect has a missing dependency: 'history.location.state.hierarchyItem._id'. Either include it or remove the dependency array.",["304"],"'Select' is defined but never used.","'tailFormItemLayout' is assigned a value but never used.","'TimePicker' is defined but never used.","'startDate' is assigned a value but never used.","'format' is assigned a value but never used.","'handleSatartDateChanged' is assigned a value but never used.","'List' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'initLessons'. Either include it or remove the dependency array.",["305"],"'AutoComplete' is defined but never used.","'Form' is defined but never used.","'UploadOutlined' is defined but never used.","'selectedFileList' is assigned a value but never used.","'setSelectedFileList' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'api' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},"Update the dependencies array to be: [group, initStudentList, initTeacherList]",{"range":"312","text":"313"},"Update the dependencies array to be: [history.location.state.hierarchyItem._id, layers]",{"range":"314","text":"315"},"Update the dependencies array to be: [initLessons, lessons]",{"range":"316","text":"317"},[1510,1517],"[group, initStudentList, initTeacherList]",[2141,2149],"[history.location.state.hierarchyItem._id, layers]",[458,467],"[initLessons, lessons]"]