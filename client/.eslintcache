[{"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js":"1","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js":"2","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js":"3","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Library.js":"4","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js":"5","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js":"6","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js":"7","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\message.reducer.js":"8","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js":"9","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js":"10","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\books.service.js":"11","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\message.action.js":"12","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js":"13","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js":"14","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js":"15","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js":"16","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js":"17","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js":"18","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js":"19","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\SetUserRole.js":"20","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\layer.reducer.js":"21","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\layer.actions.js":"22","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\layer.service.js":"23","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\AttendanceJournal.js":"24","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchyListView.js":"25","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\CreateHierarchy.js":"26","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\ViewGroupsDetails.js":"27","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AffiliationToGroup.js":"28","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\NewPassword.js":"29","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\NavBar.js":"30","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\hooks\\stringToColor.js":"31","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadImageToS3WithReactS3.js":"32","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AddLessonToGroup.js":"33","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\LessonsInGroup.js":"34","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\GroupDetails.js":"35","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadFiles.js":"36"},{"size":539,"mtime":1615064757361,"results":"37","hashOfConfig":"38"},{"size":5258,"mtime":1615060642173,"results":"39","hashOfConfig":"38"},{"size":926,"mtime":1615219815967,"results":"40","hashOfConfig":"38"},{"size":905,"mtime":1614713941797,"results":"41","hashOfConfig":"38"},{"size":1132,"mtime":1615052376891,"results":"42","hashOfConfig":"38"},{"size":700,"mtime":1614450758516,"results":"43","hashOfConfig":"38"},{"size":1452,"mtime":1612639730024,"results":"44","hashOfConfig":"38"},{"size":402,"mtime":1610218247338,"results":"45","hashOfConfig":"38"},{"size":575,"mtime":1610234410977,"results":"46","hashOfConfig":"38"},{"size":1846,"mtime":1614717753108,"results":"47","hashOfConfig":"38"},{"size":366,"mtime":1609658093287,"results":"48","hashOfConfig":"38"},{"size":250,"mtime":1609963332060,"results":"49","hashOfConfig":"38"},{"size":2905,"mtime":1614717706877,"results":"50","hashOfConfig":"38"},{"size":3112,"mtime":1614717855782,"results":"51","hashOfConfig":"38"},{"size":2839,"mtime":1615063869136,"results":"52","hashOfConfig":"38"},{"size":390,"mtime":1610830596948,"results":"53","hashOfConfig":"38"},{"size":6295,"mtime":1615395563987,"results":"54","hashOfConfig":"38"},{"size":607,"mtime":1614713941805,"results":"55","hashOfConfig":"38"},{"size":335,"mtime":1610828754796,"results":"56","hashOfConfig":"38"},{"size":1622,"mtime":1615057780412,"results":"57","hashOfConfig":"38"},{"size":1395,"mtime":1615070159033,"results":"58","hashOfConfig":"38"},{"size":3435,"mtime":1615120178062,"results":"59","hashOfConfig":"38"},{"size":858,"mtime":1615119921659,"results":"60","hashOfConfig":"38"},{"size":3360,"mtime":1615077737077,"results":"61","hashOfConfig":"38"},{"size":4189,"mtime":1615076296716,"results":"62","hashOfConfig":"38"},{"size":4121,"mtime":1613922016611,"results":"63","hashOfConfig":"38"},{"size":504,"mtime":1614799631630,"results":"64","hashOfConfig":"38"},{"size":9606,"mtime":1615221452695,"results":"65","hashOfConfig":"38"},{"size":2101,"mtime":1614713941770,"results":"66","hashOfConfig":"38"},{"size":2548,"mtime":1615067081615,"results":"67","hashOfConfig":"38"},{"size":502,"mtime":1615220273442,"results":"68","hashOfConfig":"38"},{"size":971,"mtime":1615222979855,"results":"69","hashOfConfig":"38"},{"size":5120,"mtime":1615220146123,"results":"70","hashOfConfig":"38"},{"size":2732,"mtime":1615220729352,"results":"71","hashOfConfig":"38"},{"size":1883,"mtime":1615221447444,"results":"72","hashOfConfig":"38"},{"size":2211,"mtime":1615395632981,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1a2415e",{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js",[],["162","163"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js",["164","165","166","167"],"import React, { useEffect, useState } from 'react';\r\nimport Library from './pages/Library';\r\nimport Home from './pages/Home';\r\nimport ViewUsers from './components/users/ViewUsers';\r\nimport HierarchyListView from './components/layers/HierarchyListView';\r\nimport api from './services/user.service';\r\nimport { useSelector } from 'react-redux';\r\nimport { PermissionsProvider, AuthorizedRoute, AuthorizedSection } from '@tshio/react-router-permissions';\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport UserDetails from './components/users/UserDetails';\r\nimport CreateLesson from './components/lessonsAndTasks/CreateLesson';\r\nimport AttendanceJournal from './components/users/AttendanceJournal';\r\nimport NewPassword from './components/users/NewPassword';\r\nimport ViewGroupsDetails from './components/layers/ViewGroupsDetails';\r\nimport AffiliationToGroup from './components/groups/AffiliationToGroup';\r\nimport NavBar from './components/home/NavBar';\r\nimport '../src/css/App.css';\r\n\r\nconst permissionsStrategy = (currentRole, requirement) => {\r\n    return requirement.find(role => role === currentRole);\r\n};\r\n\r\nfunction App (props) {\r\n\r\n    const { user } = useSelector(state => state.userReducer);\r\n    const [userList, setUserList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        api.getAllUsers().then(users => {\r\n            setUserList(users.data.data);\r\n        }, [])\r\n    }, []);\r\n\r\n    // const getRoles =() =>{\r\n    //     return user ? [user.role] : 'guest';\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <PermissionsProvider\r\n                permissions={user ? user.role : 'guest'}\r\n                authorizationStrategy={permissionsStrategy}\r\n            >\r\n                <Router>\r\n                    <NavBar/>\r\n\r\n                    <Switch>\r\n                        <AuthorizedRoute path=\"/lessons/add\"  requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <CreateLesson /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/library\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <Library /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/users/:id\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <UserDetails /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/users\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <ViewUsers title=\"User List\" userList={userList} showSetRole={true} />: <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/layers\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"layer\" nextHierarchy=\"grade\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/grade\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"grade\" nextHierarchy=\"level\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/level\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"level\" nextHierarchy=\"group\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/group\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"group\" nextHierarchy=\"viewGroupDetails\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        {/* <AuthorizedRoute path=\"/viewGroupDetails\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <ViewGroupsDetails/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute> */}\r\n                        <AuthorizedRoute path=\"/viewGroupDetails\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <AffiliationToGroup mode=\"read\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        {/* <AuthorizedRoute path=\"/newPassword\" >\r\n                            {({ isAuthorized }) => (isAuthorized ? <NewPassword/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute> */}\r\n                        <AuthorizedRoute path=\"/attendanceJournal\"  requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <AttendanceJournal /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <Route path=\"/\" component={Home}>\r\n                            <Home />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </PermissionsProvider>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Library.js",["168"],"import React, { useEffect, useState } from 'react';\r\nimport { useBarcode } from 'react-barcodes';\r\nimport api from '../services/books.service';\r\nimport { Table } from 'antd';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Barcode',\r\n        dataIndex: 'barcode'\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name'\r\n    },\r\n    {\r\n        title: 'Writer',\r\n        dataIndex: 'writer'\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status'\r\n    }\r\n];\r\n\r\n\r\n\r\nconst Library = () => {\r\n\r\n    const [tableData, setTableData] = useState([]);\r\n\r\n    // const { inputRef } = useBarcode({\r\n    //     value: '',\r\n    // })\r\n\r\n    //  [\r\n    //     {\r\n    //         key: <svg ref={inputRef} />,\r\n    //         name: <ul>{bookList.map((book, index) => <li key={index}>{book.bookName}</li>)}</ul>,\r\n    //         writer: '',\r\n    //         status: ''\r\n    //     }\r\n    // ];\r\n\r\n    useEffect(() => {\r\n        api.getAllBooks().then(response => response.data.data).then(books => {\r\n            let data = books.map(book => ({...book, key: book._id}));\r\n            setTableData(data);\r\n        }, [])\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Table columns={columns} dataSource={tableData} bordered />\r\n        </>\r\n    )\r\n}\r\nexport default Library;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\message.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js",["169","170","171","172","173","174"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../components/sign-in/Login';\r\nimport Register from '../components/sign-in/Register';\r\nimport { Modal, Button, Layout, Tabs } from 'antd';\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nfunction SignIn(props) {\r\n\r\n    const {hideSignIn} = props;\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [visible, setVisible] = useState(true);\r\n\r\n    //   const showModal = () => {\r\n    //     setVisible(true);\r\n    //   };\r\n\r\n    const hideModal = () => {\r\n        hideSignIn();\r\n    }\r\n\r\n    const handleOk = () => {\r\n        // setLoading(true);\r\n        // setTimeout(() => {\r\n        //   setVisible(false);\r\n        //   setLoading(false);\r\n        // }, 3000);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        // hideSignIn();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* <Button type=\"primary\" onClick={showModal}>Sign in</Button> */}\r\n            <Modal\r\n                title=\"Login/Register\"\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                visible={visible}\r\n                closable={false}\r\n                footer={[\r\n                    // <Button key=\"back\" onClick={handleCancel}> Return </Button>,\r\n                    // <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}> Submit</Button>\r\n                ]}\r\n            >\r\n                {/* <Layout theme=\"light\"> */}\r\n                <Tabs defaultActiveKey=\"1\" size=\"large\">\r\n                    <TabPane tab=\"Login\" key=\"1\"><Login hideModal={hideModal} /></TabPane>\r\n                    <TabPane tab=\"Register\" key=\"2\"><Register hideModal={hideModal} /></TabPane>\r\n\r\n                </Tabs>\r\n                {/* </Layout> */}\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\books.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\message.action.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js",["175"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createUser } from '../../redux/actions/user.actions';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const {hideModal} = props;\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const save = (values) => {\r\n        console.log('Success:', values); \r\n        dispatch(createUser(values)).then(res => {\r\n            hideModal();\r\n        });       \r\n    }\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        hideModal();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form {...layout} name=\"login\" initialValues={{ remember: true }} onFinish={save} onFinishFailed={onFinishFailed} >\r\n                <Form.Item\r\n                    label=\"first name\"\r\n                    name=\"firstName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern:\"(^[a-zA-Z]+$)\",\r\n                            min:2,\r\n                            message: 'first name is required and must be at least 2 chars',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"last name\"\r\n                    name=\"lastName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern:\"(^[a-zA-Z]+$)\",\r\n                            min:2,\r\n                            message: 'first name is required and must be at least 2 chars',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                \r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your email!',\r\n                            type: 'email'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                    <Checkbox>Remember me</Checkbox>\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button type=\"default\" htmlType=\"button\" onClick={handleCancel}>\r\n                        Cancel\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js",["176","177","178","179","180"],"import React, { useEffect, useState } from 'react';\r\nimport { List, message, Avatar, Spin, Card, Button , Modal} from 'antd';\r\nimport { useHistory,Link } from 'react-router-dom';\r\nimport SetUserRole from './SetUserRole';\r\nimport stringToColor from '../../hooks/stringToColor';\r\n\r\nconst ViewUsers = (props) => {\r\n\r\n    const {userList, showSetRole, title, showRemove, removeStudent} = props;\r\n    const [selectUser, setSelectdUser] = useState(null);\r\n    \r\n    const history = useHistory();\r\n\r\n    function getRandomColor(userName) {\r\n        return stringToColor(userName);\r\n    }\r\n\r\n    function navigate(user) {\r\n        history.push({\r\n            pathname: `/users/${user._id}`,\r\n            state: { user },\r\n        });\r\n    }\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = (e, userId) => {\r\n        e.stopPropagation();\r\n        e.nativeEvent.stopImmediatePropagation();\r\n        setSelectdUser(userId);\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card type=\"inner\" title={title}>\r\n                <List\r\n                    dataSource={userList}\r\n                    renderItem={item => (\r\n                        // <List.Item key={item._id} onClick={()=> navigate(item)}>\r\n                        <List.Item key={item._id}>\r\n                            <List.Item.Meta \r\n                                avatar={\r\n                                    <Avatar style={{ backgroundColor: getRandomColor(item.firstName),textTransform: 'uppercase', verticalAlign: 'middle' }} size=\"large\">\r\n                                        {item.firstName.charAt(0)}\r\n                                    </Avatar>\r\n                                }\r\n                                title={`${item.firstName} ${item.lastName}`}\r\n                                description={item.email}\r\n\r\n                                />\r\n                                {showSetRole && \r\n                                    <Button type=\"primary\" onClick={(e) =>showModal(e,item._id)}>Set User Role</Button>\r\n                                }\r\n                                {showRemove && \r\n                                    <Button type=\"primary\" onClick={()=>removeStudent(item._id)}>Remove Student</Button>\r\n                                }\r\n                        </List.Item>\r\n                    )}\r\n                >\r\n                </List>\r\n            </Card>\r\n            <Modal title=\"Set Role\" visible={isModalVisible}>\r\n                <SetUserRole id={selectUser} handleOk={handleOk} handleCancel={handleCancel}></SetUserRole>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default ViewUsers;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js",["181","182","183","184","185","186","187","188","189","190","191","192"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\SetUserRole.js",["193"],"import React, { useState } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { Form, Input, Radio, Button } from 'antd';\r\nimport {setUserRole} from '../../redux/actions/user.actions';\r\n\r\n\r\nconst SetUserRole = (props) => {\r\n\r\n  const { id, handleOk, handleCancel } = props;\r\n\r\n  const { user } = useSelector(state => state.userReducer);\r\n    \r\n  const [role, setRole] = useState();\r\n\r\n  const onChange = e => {\r\n    console.log('radio checked', e.target.value);\r\n    setRole(e.target.value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n    \r\n  const save = () => {\r\n      dispatch(setUserRole(id, role));    \r\n      handleOk();   \r\n  }\r\n  const cancel = () => {\r\n    handleCancel();\r\n  }\r\n\r\n  const onFinishFailed = () => {\r\n    alert('Failed to set user role');\r\n  }\r\n\r\n    return (\r\n      <>\r\n      <Form onFinish={save} onFinishFailed={onFinishFailed} >\r\n\r\n      <Form.Item>\r\n        <Radio.Group onChange={onChange}>\r\n        <Radio value={'student'}>student</Radio>\r\n        <br />\r\n        <Radio value={'teacher'}>teacher</Radio>\r\n        <br />\r\n        <Radio value={'secretary'}>secretary</Radio>\r\n        <br />\r\n        { user.role === 'admin' && \r\n          <Radio value={'admin'}>admin</Radio>\r\n        }\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n          </Button>\r\n          <Button type=\"default\" htmlType=\"submit\" onClick={()=> cancel()}>\r\n              cancel\r\n          </Button>\r\n\r\n      </Form.Item>\r\n      </Form>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SetUserRole;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\layer.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\layer.actions.js",["194"],"import { useSelector } from 'react-redux';\r\nimport {getAllLayers, \r\n        addNewLayer, \r\n        addNewGrade, \r\n        addNewLevel, \r\n        addNewGroup,\r\n        updateGroupDetails,\r\n        updateGroupLessons\r\n} from '../../services/layer.service';\r\n\r\nexport const SET_LAYERS = 'SET LAYERS';\r\nexport const ADD_LAYER = 'ADD LAYER';\r\nexport const UPDATE_GROUP = 'UPDATE GROUP';\r\n\r\nexport const setLayers = (layersList) => {\r\n    return {\r\n        type: SET_LAYERS,\r\n        payload: layersList\r\n    };\r\n};\r\nexport const setLayer = (layer) => {\r\n    return {\r\n        type: ADD_LAYER,\r\n        payload: layer\r\n    };\r\n};\r\nexport const setUpdatedGroup = (group) => {\r\n    return {\r\n        type: UPDATE_GROUP,\r\n        payload: group\r\n    };\r\n};\r\n\r\n\r\nexport const getLayers = () => {\r\n    return (dispatch) => {\r\n        getAllLayers().then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayers(response.data));\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const addLayer = (layer) => {\r\n    return dispatch => {\r\n        return addNewLayer(layer).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\n\r\nexport const addGrade = (params) => {\r\n    return dispatch => {\r\n        return addNewGrade(params).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const addLevel = (params) => {\r\n   \r\n    return dispatch => {\r\n        return addNewLevel(params).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\nexport const addGroup = (params) => {\r\n   \r\n    return dispatch => {\r\n        return addNewGroup(params).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\nexport const updateGroup = (group) => {\r\n   \r\n    return dispatch => {\r\n        return updateGroupDetails(group).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setUpdatedGroup(response.group));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\nexport const updateLessonsInGroup = (data) => {\r\n   \r\n    return dispatch => {\r\n        return updateGroupLessons(data).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                debugger;\r\n                dispatch(setUpdatedGroup(response.group));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\layer.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\AttendanceJournal.js",["195","196","197"],"import React, { useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\n\r\nconst AttendanceJournal = (props) => {\r\n\r\n    const {lessons} = props;\r\n\r\n    // const [eventList, setEventList] = useState([]);\r\n    // const myEventsList = [\r\n    //     {\r\n    //         start: moment().toDate(),\r\n    //         end: moment()\r\n    //             .add(1, \"days\")\r\n    //             .toDate(),\r\n    //         title: \"Some title\"\r\n    //     }\r\n    // ];\r\n\r\n    const getEventsList = () => {\r\n        if(lessons === null)\r\n            return [];\r\n        return lessons.map(lesson => ({\r\n            start: lesson.fromAnHour,\r\n            end: lesson.toAnHour,\r\n            title: lesson.Code\r\n        }))\r\n    }\r\n\r\n    const onEventResize = (data) => {\r\n        const { start, end } = data;\r\n\r\n        // this.setState((state) => {\r\n        //   state.myEventsList[0].start = start;\r\n        //   state.myEventsList[0].end = end;\r\n        //   return { myEventsList: [...state.events] };\r\n        // });\r\n    };\r\n\r\n    const onEventDrop = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                \r\n                <DnDCalendar\r\n                    localizer={localizer}\r\n                    events={getEventsList}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    defaultDate={new Date()}\r\n                    defaultView=\"month\"\r\n                    onEventDrop={onEventDrop}\r\n                    onEventResize={onEventResize}\r\n                    resizable\r\n                    style={{ height: \"100vh\" }}\r\n\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AttendanceJournal;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import {useSelector} from 'react-redux';\r\n// import { Table,Input, AutoComplete } from 'antd';\r\n// import { AudioOutlined } from '@ant-design/icons';\r\n// import { $CombinedState } from 'redux';\r\n\r\n\r\n\r\n\r\n// const columns = [\r\n//   {\r\n//     title: 'Name',\r\n//     dataIndex: 'name'\r\n//   }\r\n// ];\r\n\r\n\r\n// const AttendanceJournal = (props) => {\r\n\r\n//   const {id}=props;\r\n\r\n// const { user } = useSelector(state => state.userReducer);\r\n\r\n//   const data = [\r\n//   {\r\n//     key:user._id ,\r\n//     name: user.name\r\n//   }\r\n//  ];\r\n\r\n\r\n//   const [students,setStudents] = useState();\r\n\r\n//     const rowSelection = {\r\n//     onChange: (selectedRowKeys, selectedRows) => {\r\n//         console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n//     },\r\n//     getCheckboxProps: record => ({\r\n//         disabled: record.name === 'Disabled User', \r\n//         name: record.name,\r\n//     }),\r\n//     };\r\n\r\n//   return (\r\n//     <>\r\n//         <Table\r\n//           rowSelection={{\r\n//             type: 'checkbox',\r\n//             ...rowSelection,\r\n//           }}\r\n//           columns={columns}\r\n//           dataSource={data}\r\n\r\n//         />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default AttendanceJournal;\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchyListView.js",["198","199"],"import React, {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {getLayers} from '../../redux/actions/layer.actions';\r\nimport { Button, Card, Col, Row, Breadcrumb } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport CreateHierarchy from './CreateHierarchy';\r\n\r\nconst HierarchyListView = (props) => {\r\n\r\n    const { type, layerId, gradeId, nextHierarchy } = props;\r\n    const [showAddNewHierarchy, setshowAddNewHierarchy] = useState(false);\r\n    const  { layers } = useSelector(state => state.layerReducer);\r\n    const history = useHistory();\r\n    // const {hierarchyItem} = history.location.state;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(layers == null){\r\n            dispatch(getLayers());\r\n        }\r\n    }, [dispatch, layers]);\r\n\r\n    const getHierarchyItemId = () => {\r\n        if(history.location.state)\r\n            return history.location.state.hierarchyItem._id;\r\n        return null;\r\n    }\r\n\r\n    const getData = () => {\r\n        let data;\r\n        switch (type) {\r\n            case 'layer':\r\n                data = layers;\r\n                break;\r\n            case 'grade':\r\n                data =  layers.find(layer => layer._id === getHierarchyItemId()).grades;\r\n                break;\r\n            case 'level':\r\n                data =  layers.find(layers => layers.grades.find(grade => \r\n                    grade._id === getHierarchyItemId())\r\n                ).grades.find(grade => \r\n                    grade._id === getHierarchyItemId()\r\n                ).levels;\r\n                break;\r\n            case 'group':\r\n                layers.forEach(layer => {\r\n                    layer.grades.forEach(grade => {\r\n                        grade.levels.forEach(level => {\r\n                            if(level._id === getHierarchyItemId())\r\n                                data = level.groups;\r\n                        })\r\n                    })\r\n                })\r\n                break;\r\n            default:\r\n                return [];\r\n        }\r\n        return data ? data : [];\r\n    }\r\n\r\n    const showDetails = (item) => {\r\n        history.push({\r\n            pathname: `/${nextHierarchy}`,\r\n            state: { hierarchyItem: item },\r\n        });\r\n    }\r\n\r\n    const handleAddNewLayer = () => {\r\n        setshowAddNewHierarchy(true);\r\n    }\r\n\r\n    const hideCreateHierarchy = () => {\r\n        setshowAddNewHierarchy(false);\r\n    }\r\n\r\n    return (\r\n        <>      \r\n        \r\n            <div className=\"hierarchy-header\">\r\n                <Breadcrumb>\r\n                    {['layer', 'grade', 'level', 'group' ].includes(type) && <Breadcrumb.Item>Layers</Breadcrumb.Item>}\r\n                    {['grade', 'level', 'group' ].includes(type) && <Breadcrumb.Item>Grades</Breadcrumb.Item>}\r\n                    {['level', 'group' ].includes(type) && <Breadcrumb.Item>Levels</Breadcrumb.Item>}\r\n                    {['group' ].includes(type) && <Breadcrumb.Item>Groups</Breadcrumb.Item>}\r\n                </Breadcrumb>\r\n\r\n                <Button htmlType=\"submit\" type=\"primary\" onClick={handleAddNewLayer}>{`add new ${type}`}</Button>\r\n            </div>\r\n            {showAddNewHierarchy && \r\n                <CreateHierarchy \r\n                    hideCreateHierarchy={hideCreateHierarchy} \r\n                    type={type} \r\n                    layerId={getHierarchyItemId()}\r\n                    gradeId={getHierarchyItemId()}\r\n                    levelId={getHierarchyItemId()}\r\n                />}\r\n               <div>\r\n                <div className=\"site-card-wrapper\">\r\n                    <Row gutter={16}>\r\n                        {getData().map(item =>\r\n                            <Col key={item._id} span={8}>\r\n                                <Card  title={item.name} bordered={true} >\r\n                                    <Button type=\"primary\" onClick={() => showDetails(item)}>view details</Button>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </div>\r\n               </div>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HierarchyListView;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\CreateHierarchy.js",["200"],"import React, { useState, useEffect }  from 'react';\r\nimport { Form, Input, Button, Alert, message } from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addLayer, addGrade, addLevel, addGroup} from '../../redux/actions/layer.actions';\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst CreateHierarchy = (props) => {\r\n\r\n    const {hideCreateHierarchy , type, layerId, gradeId , levelId} = props;\r\n    const { layers } = useSelector(state => state.layerReducer);\r\n\r\n    // const gradeByLevel = getGradeId(levelId);\r\n    // const layerByGrade = getLayerId(gradeByLevel);\r\n\r\n    // const  { message } = useSelector(state => state.messageReducer);\r\n    const [messageText, setMessageText] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getLayerId = (gradeId) => {\r\n        \r\n        if(!gradeId)\r\n            return null;\r\n        return layers.find(layers => layers.grades.find(grade => grade._id === gradeId))._id;\r\n    }\r\n    \r\n    const getGradeId = (levelId) => {\r\n        \r\n        if(!levelId)\r\n            return null;\r\n    \r\n        let result;\r\n        layers.forEach(layer => {\r\n            layer.grades.forEach(grade => {\r\n                let data = grade.levels.find(level => level._id === levelId)\r\n                if (data) {\r\n                    result = grade;\r\n                    return;\r\n                }\r\n            });\r\n    \r\n        });\r\n        return result._id;\r\n    }\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n        let {name} = values;\r\n        let func;\r\n        let params;\r\n        switch (type) {\r\n            case 'layer':\r\n                func = addLayer;\r\n                params = name;\r\n                break;\r\n            case 'grade':\r\n                func = addGrade;\r\n                params = {layerId : layerId , gradeName: name };\r\n                break;\r\n            case 'level':\r\n                func = addLevel;\r\n                params = {gradeId: gradeId, levelName: name, layerId: getLayerId(gradeId) };\r\n                break;\r\n            case 'group':\r\n                func = addGroup;\r\n                params = {\r\n                    gradeId: getGradeId(levelId), \r\n                    groupName: name, \r\n                    layerId: getLayerId(getGradeId(levelId)), \r\n                    levelId: levelId\r\n                };\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n        dispatch(func(params)).then((response) => {\r\n            setLoading(false);\r\n            if(response.success){\r\n                form.resetFields()\r\n                message.success(`${type} created sucessfuly`);\r\n                hideCreateHierarchy();\r\n            }\r\n            else {\r\n                setMessageText(response.error.response.data.error);\r\n            }\r\n        }).catch(error => {\r\n            setMessageText(`Filed to create ${type}`);\r\n        });  \r\n    }\r\n\r\n    return (\r\n    <>\r\n        {messageText && <Alert\r\n            message=\"Error\"\r\n            description={messageText}\r\n            type=\"error\"\r\n            showIcon\r\n        />}\r\n        <Form {...layout} form={form} name={`Add ${type}`} initialValues={{ remember: true }} onFinish={save} >\r\n            <Form.Item\r\n                label={`${type} Name`}\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `Please input ${type} name !`\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\"  loading={loading}>\r\n                    add\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </>\r\n)\r\n   \r\n}\r\n\r\nexport default CreateHierarchy;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\ViewGroupsDetails.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AffiliationToGroup.js",["201","202","203","204","205"],"import React, { useEffect, useState } from 'react';\r\nimport { AutoComplete, Input, Form, Tabs, Drawer ,message,Button, Card } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getTeachers, getStudents } from '../../services/user.service';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {updateGroup} from '../../redux/actions/layer.actions';\r\nimport ViewUsers from '../../components/users/ViewUsers';\r\nimport GroupDetails from './GroupDetails';\r\n\r\n\r\n\r\nconst AffiliationToGroup = (props) => {\r\n\r\n    const {mode} = props;\r\n    const history = useHistory();\r\n    const [group, setGroup] = useState(history.location.state.hierarchyItem);\r\n    const [teacherList, setTeacherList] = useState([]);\r\n    const [studentList, setStudentList] = useState();\r\n    const [groupName, setGroupName] = useState(group.name);\r\n    const [selectedTeacher, setSelectedTeacher] = useState(group.teacherCode);\r\n    const [selectedStudents, setSelectedStudents] = useState([]);\r\n    const [currentStudent, setCurrentStudent] = useState(null);\r\n    // const [selectStudent, setSelectStudent] = useState(group.StudentsInTheGroup.studentCode);\r\n    const [teacherDefaultValue, setTeacherDefaultValue] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [viewMode, setViewMode] = useState(mode);\r\n    // const { layers } = useSelector(state => state.layerReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        initTeacherList();\r\n        initStudentList();\r\n    }, []);\r\n\r\n    const initTeacherList = () => {\r\n        getTeachers().then(resopnse => resopnse.data).then(response => {\r\n            if (response.success) {\r\n                let result = response.data.map(teacher => {\r\n                    if(group.teacherCode && teacher._id === group.teacherCode) {\r\n                        setTeacherDefaultValue(`${teacher.firstName} ${teacher.lastName}`);\r\n                        setSelectedTeacher(teacher._id);\r\n                    }\r\n                    return ({ ...teacher, key:teacher._id, value:`${teacher.firstName} ${teacher.lastName}` })\r\n                })\r\n                setTeacherList(result);\r\n            }\r\n            else {\r\n                message.error('Faild to load teacher list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load teacher list'));\r\n    }\r\n    const getPicklistItem = (student) => {\r\n        let value = `${student.firstName} ${student.lastName}`;\r\n        return (\r\n            <div value={value}>\r\n                <h3>{value}</h3>\r\n                <label>{student.email}</label>\r\n            </div>\r\n        )\r\n    }\r\n    const initStudentList = () => {\r\n        getStudents().then(resopnse => resopnse.data).then(response => {\r\n            if (response.success) {\r\n                debugger\r\n                let result = response.data.map(student => \r\n                    ({...student,\r\n                        key:student._id, \r\n                        value: `${student.firstName} ${student.lastName}`,\r\n                        label : getPicklistItem(student)\r\n                    }\r\n                ));\r\n                let studentsIds = group.StudentsInTheGroup.map(studentInGroup => studentInGroup.studentCode);\r\n                let existStudents = result.filter(student => studentsIds.includes(student._id));\r\n                let notExistStudents = result.filter(student => !studentsIds.includes(student._id));\r\n                setStudentList(notExistStudents);\r\n                setSelectedStudents(existStudents); \r\n            }\r\n            \r\n            else {\r\n                message.error('Faild to load student list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load student list'));\r\n    }\r\n\r\n    const handleSelectTeacher = (value, teacher) => {\r\n        setSelectedTeacher(teacher._id);\r\n        setTeacherDefaultValue(`${teacher.firstName} ${teacher.lastName}`)\r\n    }\r\n    const handleSelectStudent = (value, student) => {\r\n        setCurrentStudent(student);\r\n    }\r\n\r\n    const addNewStudentToList = (event) => {\r\n        setSelectedStudents([...selectedStudents, currentStudent]);\r\n        let students = studentList.filter(student => student._id !== currentStudent._id);\r\n        setStudentList(students);\r\n        setCurrentStudent(null)\r\n    }\r\n\r\n    const filterAutoComplete  = (inputValue, option) => {\r\n        return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n    }\r\n\r\n    const save = () => {\r\n        setLoading(true);\r\n        let data = {\r\n            groupId: group._id,\r\n            name:groupName,\r\n            teacherCode: selectedTeacher,\r\n            StudentsInTheGroup: selectedStudents.map(student => \r\n                ({studentCode: student._id})\r\n            )\r\n        }\r\n\r\n        dispatch(updateGroup(data)).then((response) => {\r\n            setLoading(false);\r\n            if(response.success){\r\n                debugger\r\n                setGroup(response.group);\r\n                message.success(`group updated sucessfuly`);\r\n            }\r\n            setViewMode('read');\r\n        }).catch(error => {\r\n            message.error(`Filed to update group`);\r\n        });  \r\n    }\r\n    const removeStudent = (studentId) => {\r\n        let student = selectedStudents.find(student => student._id === studentId);\r\n        let selectedList = selectedStudents.filter(student => student._id !== studentId)\r\n        setSelectedStudents(selectedList);\r\n        setStudentList([...studentList, student]);\r\n    }\r\n\r\n    const editGroup = () => {\r\n        setViewMode('edit');\r\n    }\r\n\r\n    const style = {\r\n        display : \"flex\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n    const style2 = {\r\n        width: \"-webkit-fill-available\"\r\n    }\r\n\r\n    const openLessonTimes = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            <div style={style2}>\r\n                {viewMode === 'edit' && \r\n                    <>\r\n                        <Form\r\n                            layout=\"vertical\"\r\n                        >\r\n                            <Form.Item\r\n                                label=\"group name\"\r\n                                name=\"group name\"\r\n                                onChange={(e) => {setGroupName(e.target.value)}}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: `Please input group name!`\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input defaultValue={groupName}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"teacher name\" name=\"teacher name\">     \r\n                                <AutoComplete\r\n                                    style={{\r\n                                        width: 200,\r\n                                    }}\r\n                                    options={teacherList}\r\n                                    defaultValue={teacherDefaultValue}\r\n                                    placeholder=\"teacher name\"\r\n                                    onSelect={handleSelectTeacher}\r\n                                    filterOption={filterAutoComplete}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label=\"add a new student\" name=\"add a new student\"> \r\n                            <AutoComplete\r\n                                style={{width: 200}}\r\n                                options={studentList}\r\n                                placeholder=\"add student\"\r\n                                onSelect={handleSelectStudent}\r\n                                filterOption={filterAutoComplete}\r\n                                notFoundContent=\"No student found\"\r\n                                value={currentStudent !== null? `${currentStudent.firstName} ${currentStudent.lastName}` : \"\"}\r\n                            />\r\n                            <Button onClick={addNewStudentToList}>Add Student</Button>\r\n                            </Form.Item>\r\n                        <div>\r\n                        </div>\r\n\r\n                        </Form>\r\n                        <ViewUsers \r\n                            title=\"Student In Group:\" \r\n                            userList={selectedStudents} \r\n                            showSetRole={false}\r\n                            showRemove={true}\r\n                            removeStudent={removeStudent}\r\n                        /> \r\n                    </>\r\n                }\r\n                    \r\n                {viewMode === 'read' &&\r\n                    <GroupDetails \r\n                        group={group} \r\n                        teacherName={teacherDefaultValue} \r\n                        studentsInGroup={selectedStudents}\r\n                    />\r\n                }\r\n          \r\n            </div>\r\n            <div>\r\n                {viewMode === 'edit' && <Button loading={loading} onClick={save}>Save Changes</Button>}\r\n                {viewMode === 'read' && \r\n                    <>\r\n                        <Button loading={loading} onClick={openLessonTimes}>Set Lessons Times</Button>\r\n                        <Button loading={loading} onClick={editGroup}>Edit</Button>\r\n                    </>\r\n                }\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default AffiliationToGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\NewPassword.js",["206","207","208"],"import React, { useState } from 'react';\r\nimport {Form,Input,Select,Button,} from 'antd';\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: {\r\n        span: 24,\r\n      },\r\n      sm: {\r\n        span: 8,\r\n      },\r\n    },\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n      },\r\n    },\r\n  };\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n  \r\n\r\n\r\nconst NewPassword = () => { \r\n   const RegistrationForm = () => {\r\n    const [form] = Form.useForm();\r\n  \r\n    const onFinish = (values) => {\r\n      console.log('Received values of form: ', values);\r\n    };\r\n    return (\r\n        <>\r\n               <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n  \r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject('The two passwords that you entered do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          save\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    <RegistrationForm />\r\n        </>\r\n    )\r\n    }\r\n}\r\nexport default NewPassword;\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\NavBar.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\hooks\\stringToColor.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadImageToS3WithReactS3.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AddLessonToGroup.js",["209","210","211","212","213"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button,Space, DatePicker,TimePicker, message,Checkbox,AutoComplete } from 'antd';\r\nimport {getLessons} from '../../services/lesson.service';\r\nimport {updateLessonsInGroup} from '../../redux/actions/layer.actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddLessonsToGroup = (props) => {\r\n    const {groupId, setViewDrawer} = props;\r\n    const [startDate, setStartDate] = useState();\r\n    // const [startDate, setStartDate] = useState();\r\n    const [lessons, setLessons] = useState([]);\r\n    const [selectedLesson, setSelectedLesson] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const format = 'HH:mm';\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        initLessons();\r\n    }, []);\r\n\r\n    const initLessons = () => {\r\n        getLessons().then(response => {\r\n            debugger\r\n            if (response.success) {\r\n                debugger\r\n                let result = response.data.map(lesson => \r\n                    ({...lesson,\r\n                        key:lesson._id, \r\n                        value: lesson.lessonSubject,\r\n                        label : lesson.lessonSubject\r\n                    }\r\n                ));\r\n                setLessons(result);\r\n            }\r\n            else {\r\n                message.error('Faild to load teacher list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load teacher list'));\r\n    }\r\n\r\n\r\n    const handleSatartDateChanged = (date, dateString) => {\r\n        setStartDate(date);\r\n    }\r\n\r\n    // Code: { type: ObjectId, required: true },\r\n    // remarks: { type: String, required: false },\r\n    // // date: { type: Date, required: true },\r\n    // comments: { type: Date, required: true },\r\n    // toAnHour: { type: Date, required: true },\r\n    // comments: { type: String, required: false },\r\n\r\n    const filterAutoComplete = (inputValue, option) => {\r\n        return option.lessonSubject.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1  \r\n    }\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n        let lesson = {\r\n            Code: selectedLesson._id,\r\n            fromDateTime:values[\"lesson time\"][0],\r\n            toDateTime:values[\"lesson time\"][1],\r\n            comments: values[\"comments\"]\r\n        }\r\n        let data = {groupId: groupId, lessons: [lesson]};\r\n        dispatch(updateLessonsInGroup(data)).then(res => {\r\n            if(res.success){\r\n                setLoading(false);\r\n                message.success(\"lesson created successfuly\")\r\n                setViewDrawer(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        console.log(\"cancel\");\r\n    }\r\n\r\n    const handleSelectLesson = (value, lesson) => {\r\n        setSelectedLesson(lesson);\r\n    }\r\n\r\n    const style = { \r\n        display: \"grid\"\r\n    }\r\n    return (\r\n        <>\r\n        <Space>\r\n        <Form layout=\"vertical\" style={style} initialValues={{ remember: true }} onFinish={save}>\r\n            <Form.Item \r\n                label=\"lesson time\" \r\n                name=\"lesson time\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'please set lesson hours!'\r\n                    },\r\n                ]}\r\n            >\r\n                <RangePicker\r\n                    ranges={{\r\n                        Today: [moment(), moment()],\r\n                        'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n                    }}\r\n                    showTime\r\n                    format=\"YYYY/MM/DD HH:mm\"\r\n                />\r\n\r\n            </Form.Item>\r\n            <Form.Item \r\n                label=\"select lesson\" \r\n                name=\"select lesson\" \r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'please select lesson!'                    },\r\n                ]}\r\n            \r\n            >     \r\n                <AutoComplete\r\n                    style={{\r\n                        width: 200,\r\n                    }}\r\n                    options={lessons}\r\n                    placeholder=\"select lesson\"\r\n                    onSelect={handleSelectLesson}\r\n                    filterOption={filterAutoComplete}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                    label=\"comments\"\r\n                    name=\"comments\"\r\n                >\r\n                    <Input />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                        Save\r\n                    </Button>\r\n                    <Button type=\"default\" htmlType=\"button\" onClick={handleCancel}>\r\n                        Cancel\r\n                    </Button>\r\n            </Form.Item>\r\n        </Form>\r\n        </Space>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddLessonsToGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\LessonsInGroup.js",["214","215","216","217"],"import React, {useEffect, useState} from 'react';\r\nimport { List, message, Steps, Divider, Popover } from 'antd';\r\nimport {getLessons} from '../../services/lesson.service';\r\n\r\nconst { Step } = Steps;\r\n\r\n\r\nconst LessonsInGroup = (props) => {\r\n\r\n    const {group} = props;\r\n    const [lessons, setLessons] = useState([]);\r\n\r\n    useEffect(() => {\r\n        initLessons();\r\n    }, []);\r\n\r\n    const initLessons = () => {\r\n        getLessons().then(response => {\r\n            debugger\r\n            if (response.success) {\r\n                debugger\r\n                var lessonsMap = Object.assign({}, ...group.lessons.map(lesson => ({[lesson.Code]: lesson})));\r\n                let result = response.data.map(lesson => {\r\n                        if(lessonsMap[lesson._id] !== undefined) {\r\n                            lessonsMap[lesson._id] = Object.assign({}, lessonsMap[lesson._id], { lessonObject: lesson })\r\n                        }\r\n                    }\r\n                );\r\n                setLessons(Object.values(lessonsMap));\r\n            }\r\n            else {\r\n                message.error('Faild to load teacher list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load teacher list'));\r\n    }\r\n\r\n    const customDot = (dot, { status, index }) => (\r\n        <Popover\r\n          content={\r\n            <span>\r\n              step {index} status: {status}\r\n            </span>\r\n          }\r\n        >\r\n          {dot}\r\n        </Popover>\r\n      );\r\n\r\n    const getFilteredLessons = () => {\r\n        return lessons.sort((a, b) => new Date(a.fromDateTime) - new Date(b.fromDateTime))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <List\r\n                dataSource={lessons}\r\n                renderItem={item => (\r\n                    // <List.Item key={item._id} onClick={()=> navigate(item)}>\r\n                    <List.Item key={item._id}>\r\n                        <List.Item.Meta \r\n                            title={`${item.lessonObject.lessonSubject}`}\r\n                            description={item.fromDateTime}\r\n\r\n                            />\r\n                    </List.Item>\r\n                )}\r\n            >\r\n        </List>\r\n\r\n                {lessons.length && \r\n                    <Steps progressDot={customDot} current={1} direction=\"vertical\">\r\n                \r\n                        {getFilteredLessons().map(lesson => \r\n                            <Step key={lesson._id} title={lesson.lessonObject.lessonSubject} \r\n                                  description={lesson.fromDateTime}\r\n                            />\r\n                        )}\r\n                    </Steps>\r\n                }  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default LessonsInGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\GroupDetails.js",["218","219","220","221"],"import React, {useState} from 'react';\r\nimport ViewUsers from '../../components/users/ViewUsers';\r\nimport { AutoComplete, Input, Form, Tabs, Drawer ,message,Button, Card } from 'antd';\r\nimport LessonsInGroup from './LessonsInGroup';\r\nimport AddLessonsToGroup from './AddLessonToGroup';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst GroupDetails = (props) => {\r\n\r\n    const {group, teacherName, studentsInGroup} = props;\r\n    const [viewDrawer, setViewDrawer] = useState(false);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card title={`Group name: ${group.name}`} style={{ width: 300 }} bordered={false}>\r\n                        <p>Teacher name: {teacherName}</p>\r\n            </Card>\r\n\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"Student In Group\" key=\"1\">\r\n                    <ViewUsers \r\n                        title=\"Student In Group:\" \r\n                        userList={studentsInGroup} \r\n                        showSetRole={false}\r\n                        showRemove={false}\r\n                    /> \r\n                </TabPane>\r\n                <TabPane tab=\"Group Lessons\" key=\"2\">\r\n                    <>\r\n                    <LessonsInGroup group={group}/>\r\n                        <Button onClick={()=>{setViewDrawer(true)}}>Add new lesson to group</Button>\r\n                        <Drawer\r\n                            title=\"Add new lesson\"\r\n                            placement=\"right\"\r\n                            closable={()=>{setViewDrawer(true)}}\r\n                            visible={viewDrawer}\r\n                            key=\"right\"\r\n                            >\r\n                            <AddLessonsToGroup setViewDrawer={setViewDrawer} groupId={group._id}/>\r\n                        </Drawer>\r\n                    </>\r\n                </TabPane>\r\n            </Tabs>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupDetails;\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadFiles.js",["222","223","224","225","226"],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":8,"column":48,"nodeType":"233","messageId":"234","endLine":8,"endColumn":65},{"ruleId":"231","severity":1,"message":"235","line":9,"column":50,"nodeType":"233","messageId":"234","endLine":9,"endColumn":54},{"ruleId":"231","severity":1,"message":"236","line":13,"column":8,"nodeType":"233","messageId":"234","endLine":13,"endColumn":19},{"ruleId":"231","severity":1,"message":"237","line":14,"column":8,"nodeType":"233","messageId":"234","endLine":14,"endColumn":25},{"ruleId":"231","severity":1,"message":"238","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":20},{"ruleId":"231","severity":1,"message":"239","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":17},{"ruleId":"231","severity":1,"message":"240","line":5,"column":17,"nodeType":"233","messageId":"234","endLine":5,"endColumn":23},{"ruleId":"231","severity":1,"message":"241","line":5,"column":25,"nodeType":"233","messageId":"234","endLine":5,"endColumn":31},{"ruleId":"231","severity":1,"message":"242","line":13,"column":12,"nodeType":"233","messageId":"234","endLine":13,"endColumn":19},{"ruleId":"231","severity":1,"message":"243","line":13,"column":21,"nodeType":"233","messageId":"234","endLine":13,"endColumn":31},{"ruleId":"231","severity":1,"message":"244","line":14,"column":21,"nodeType":"233","messageId":"234","endLine":14,"endColumn":31},{"ruleId":"231","severity":1,"message":"245","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"246","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":26},{"ruleId":"231","severity":1,"message":"247","line":2,"column":16,"nodeType":"233","messageId":"234","endLine":2,"endColumn":23},{"ruleId":"231","severity":1,"message":"248","line":2,"column":33,"nodeType":"233","messageId":"234","endLine":2,"endColumn":37},{"ruleId":"231","severity":1,"message":"235","line":3,"column":21,"nodeType":"233","messageId":"234","endLine":3,"endColumn":25},{"ruleId":"231","severity":1,"message":"249","line":18,"column":14,"nodeType":"233","messageId":"234","endLine":18,"endColumn":22},{"ruleId":"231","severity":1,"message":"250","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"251","line":2,"column":16,"nodeType":"233","messageId":"234","endLine":2,"endColumn":21},{"ruleId":"231","severity":1,"message":"240","line":2,"column":23,"nodeType":"233","messageId":"234","endLine":2,"endColumn":29},{"ruleId":"231","severity":1,"message":"252","line":2,"column":53,"nodeType":"233","messageId":"234","endLine":2,"endColumn":56},{"ruleId":"231","severity":1,"message":"253","line":6,"column":10,"nodeType":"233","messageId":"234","endLine":6,"endColumn":23},{"ruleId":"231","severity":1,"message":"254","line":6,"column":25,"nodeType":"233","messageId":"234","endLine":6,"endColumn":39},{"ruleId":"231","severity":1,"message":"255","line":8,"column":8,"nodeType":"233","messageId":"234","endLine":8,"endColumn":34},{"ruleId":"231","severity":1,"message":"256","line":12,"column":7,"nodeType":"233","messageId":"234","endLine":12,"endColumn":13},{"ruleId":"231","severity":1,"message":"257","line":25,"column":13,"nodeType":"233","messageId":"234","endLine":25,"endColumn":20},{"ruleId":"231","severity":1,"message":"258","line":27,"column":11,"nodeType":"233","messageId":"234","endLine":27,"endColumn":16},{"ruleId":"231","severity":1,"message":"259","line":44,"column":11,"nodeType":"233","messageId":"234","endLine":44,"endColumn":15},{"ruleId":"231","severity":1,"message":"260","line":49,"column":11,"nodeType":"233","messageId":"234","endLine":49,"endColumn":25},{"ruleId":"231","severity":1,"message":"251","line":3,"column":16,"nodeType":"233","messageId":"234","endLine":3,"endColumn":21},{"ruleId":"231","severity":1,"message":"261","line":1,"column":10,"nodeType":"233","messageId":"234","endLine":1,"endColumn":21},{"ruleId":"231","severity":1,"message":"245","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"262","line":38,"column":17,"nodeType":"233","messageId":"234","endLine":38,"endColumn":22},{"ruleId":"231","severity":1,"message":"263","line":38,"column":24,"nodeType":"233","messageId":"234","endLine":38,"endColumn":27},{"ruleId":"231","severity":1,"message":"264","line":11,"column":19,"nodeType":"233","messageId":"234","endLine":11,"endColumn":26},{"ruleId":"231","severity":1,"message":"265","line":11,"column":28,"nodeType":"233","messageId":"234","endLine":11,"endColumn":35},{"ruleId":"231","severity":1,"message":"246","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"266","line":2,"column":37,"nodeType":"233","messageId":"234","endLine":2,"endColumn":41},{"ruleId":"231","severity":1,"message":"267","line":2,"column":43,"nodeType":"233","messageId":"234","endLine":2,"endColumn":49},{"ruleId":"231","severity":1,"message":"268","line":2,"column":67,"nodeType":"233","messageId":"234","endLine":2,"endColumn":71},{"ruleId":"231","severity":1,"message":"261","line":5,"column":9,"nodeType":"233","messageId":"234","endLine":5,"endColumn":20},{"ruleId":"269","severity":1,"message":"270","line":36,"column":8,"nodeType":"271","endLine":36,"endColumn":10,"suggestions":"272"},{"ruleId":"231","severity":1,"message":"245","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"273","line":2,"column":20,"nodeType":"233","messageId":"234","endLine":2,"endColumn":26},{"ruleId":"231","severity":1,"message":"274","line":22,"column":9,"nodeType":"233","messageId":"234","endLine":22,"endColumn":27},{"ruleId":"231","severity":1,"message":"275","line":2,"column":48,"nodeType":"233","messageId":"234","endLine":2,"endColumn":58},{"ruleId":"231","severity":1,"message":"276","line":2,"column":68,"nodeType":"233","messageId":"234","endLine":2,"endColumn":76},{"ruleId":"231","severity":1,"message":"277","line":13,"column":12,"nodeType":"233","messageId":"234","endLine":13,"endColumn":21},{"ruleId":"231","severity":1,"message":"278","line":18,"column":11,"nodeType":"233","messageId":"234","endLine":18,"endColumn":17},{"ruleId":"231","severity":1,"message":"279","line":48,"column":11,"nodeType":"233","messageId":"234","endLine":48,"endColumn":34},{"ruleId":"231","severity":1,"message":"280","line":2,"column":32,"nodeType":"233","messageId":"234","endLine":2,"endColumn":39},{"ruleId":"269","severity":1,"message":"281","line":15,"column":8,"nodeType":"271","endLine":15,"endColumn":10,"suggestions":"282"},{"ruleId":"231","severity":1,"message":"283","line":23,"column":21,"nodeType":"233","messageId":"234","endLine":23,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":23,"column":55,"nodeType":"286","messageId":"287","endLine":23,"endColumn":57},{"ruleId":"231","severity":1,"message":"288","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":22},{"ruleId":"231","severity":1,"message":"251","line":3,"column":24,"nodeType":"233","messageId":"234","endLine":3,"endColumn":29},{"ruleId":"231","severity":1,"message":"250","line":3,"column":31,"nodeType":"233","messageId":"234","endLine":3,"endColumn":35},{"ruleId":"231","severity":1,"message":"247","line":3,"column":51,"nodeType":"233","messageId":"234","endLine":3,"endColumn":58},{"ruleId":"231","severity":1,"message":"240","line":2,"column":18,"nodeType":"233","messageId":"234","endLine":2,"endColumn":24},{"ruleId":"231","severity":1,"message":"254","line":3,"column":25,"nodeType":"233","messageId":"234","endLine":3,"endColumn":39},{"ruleId":"231","severity":1,"message":"289","line":19,"column":12,"nodeType":"233","messageId":"234","endLine":19,"endColumn":28},{"ruleId":"231","severity":1,"message":"290","line":19,"column":30,"nodeType":"233","messageId":"234","endLine":19,"endColumn":49},{"ruleId":"291","severity":1,"message":"292","line":37,"column":9,"nodeType":"293","messageId":"294","endLine":48,"endColumn":10},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],"no-unused-vars","'AuthorizedSection' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NewPassword' is defined but never used.","'ViewGroupsDetails' is defined but never used.","'useBarcode' is defined but never used.","'connect' is defined but never used.","'Button' is defined but never used.","'Layout' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'message' is defined but never used.","'Spin' is defined but never used.","'navigate' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Col' is defined but never used.","'InboxOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'UploadImageToS3WithReactS3' is defined but never used.","'layout' is assigned a value but never used.","'Dragger' is assigned a value but never used.","'props' is assigned a value but never used.","'save' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","'useSelector' is defined but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.","'layerId' is assigned a value but never used.","'gradeId' is assigned a value but never used.","'Tabs' is defined but never used.","'Drawer' is defined but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initStudentList' and 'initTeacherList'. Either include them or remove the dependency array.","ArrayExpression",["297"],"'Select' is defined but never used.","'tailFormItemLayout' is assigned a value but never used.","'TimePicker' is defined but never used.","'Checkbox' is defined but never used.","'startDate' is assigned a value but never used.","'format' is assigned a value but never used.","'handleSatartDateChanged' is assigned a value but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'initLessons'. Either include it or remove the dependency array.",["298"],"'result' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'AutoComplete' is defined but never used.","'selectedFileList' is assigned a value but never used.","'setSelectedFileList' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},"Update the dependencies array to be: [initStudentList, initTeacherList]",{"range":"303","text":"304"},"Update the dependencies array to be: [initLessons]",{"range":"305","text":"306"},[1532,1534],"[initStudentList, initTeacherList]",[377,379],"[initLessons]"]