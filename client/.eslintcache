[{"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js":"1","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js":"2","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js":"3","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js":"4","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js":"5","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\Library.js":"6","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\NewPassword.js":"7","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js":"8","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\general\\CalendarView.js":"9","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchyListView.js":"10","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js":"11","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AffiliationToGroup.js":"12","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js":"13","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js":"14","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\book.reducer.js":"15","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\layer.reducer.js":"16","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\NavBar.js":"17","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\SetUserRole.js":"18","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\GroupDetails.js":"19","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\ViewFileCopy2.js":"20","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\ViewFileCopy.js":"21","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\hooks\\stringToColor.js":"22","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js":"23","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\ViewFile.js":"24","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadFiles.js":"25","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\layer.actions.js":"26","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\book.actions.js":"27","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js":"28","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadImageToS3WithReactS3.js":"29","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AddLessonToGroup.js":"30","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\book.service.js":"31","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\layer.service.js":"32","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js":"33","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js":"34","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\LessonsInGroup.js":"35","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js":"36","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js":"37","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\CreateHierarchy.js":"38","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\general\\CalendarFilters.js":"39","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\CreateNewBook.js":"40","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\MenuItem.js":"41","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\google-calendar.service.js":"42","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\BookList.js":"43","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\CreateBorrow.js":"44","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\messages\\AddMessage.js":"45","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ManageUsers.js":"46","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\BorrowBookList.js":"47","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchySelectTree.js":"48","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\EditorialBoard.js":"49","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\LessonView.js":"50","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\messages\\ListMassage.js":"51","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\BookStatistic.js":"52","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\Attendance.js":"53","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\LessonAndTasks.js":"54","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\AttedanceStatistic.js":"55"},{"size":612,"mtime":1620336337719,"results":"56","hashOfConfig":"57"},{"size":5878,"mtime":1620503091019,"results":"58","hashOfConfig":"57"},{"size":912,"mtime":1620336295022,"results":"59","hashOfConfig":"57"},{"size":1690,"mtime":1620501693997,"results":"60","hashOfConfig":"57"},{"size":1058,"mtime":1620343619164,"results":"61","hashOfConfig":"57"},{"size":3341,"mtime":1620326269914,"results":"62","hashOfConfig":"57"},{"size":2101,"mtime":1614713941770,"results":"63","hashOfConfig":"57"},{"size":390,"mtime":1610830596948,"results":"64","hashOfConfig":"57"},{"size":5467,"mtime":1619028771812,"results":"65","hashOfConfig":"57"},{"size":6017,"mtime":1620503068450,"results":"66","hashOfConfig":"57"},{"size":6382,"mtime":1620392335802,"results":"67","hashOfConfig":"57"},{"size":10333,"mtime":1620392283156,"results":"68","hashOfConfig":"57"},{"size":2568,"mtime":1620376561504,"results":"69","hashOfConfig":"57"},{"size":488,"mtime":1620336866831,"results":"70","hashOfConfig":"57"},{"size":498,"mtime":1618501136727,"results":"71","hashOfConfig":"57"},{"size":1304,"mtime":1620245487675,"results":"72","hashOfConfig":"57"},{"size":5002,"mtime":1620392283162,"results":"73","hashOfConfig":"57"},{"size":2194,"mtime":1620110502102,"results":"74","hashOfConfig":"57"},{"size":2225,"mtime":1620501195668,"results":"75","hashOfConfig":"57"},{"size":1163,"mtime":1620392335808,"results":"76","hashOfConfig":"57"},{"size":1618,"mtime":1620392335806,"results":"77","hashOfConfig":"57"},{"size":502,"mtime":1619037516020,"results":"78","hashOfConfig":"57"},{"size":1813,"mtime":1620501456070,"results":"79","hashOfConfig":"57"},{"size":1316,"mtime":1618501136703,"results":"80","hashOfConfig":"57"},{"size":2774,"mtime":1620259007599,"results":"81","hashOfConfig":"57"},{"size":3435,"mtime":1615120178062,"results":"82","hashOfConfig":"57"},{"size":1404,"mtime":1620065702913,"results":"83","hashOfConfig":"57"},{"size":1217,"mtime":1620339261843,"results":"84","hashOfConfig":"57"},{"size":971,"mtime":1617834267533,"results":"85","hashOfConfig":"57"},{"size":4887,"mtime":1620392283154,"results":"86","hashOfConfig":"57"},{"size":641,"mtime":1620153973971,"results":"87","hashOfConfig":"57"},{"size":1065,"mtime":1620502154185,"results":"88","hashOfConfig":"57"},{"size":3262,"mtime":1620155826580,"results":"89","hashOfConfig":"57"},{"size":2952,"mtime":1620065406039,"results":"90","hashOfConfig":"57"},{"size":2435,"mtime":1618501136677,"results":"91","hashOfConfig":"57"},{"size":358,"mtime":1620244515493,"results":"92","hashOfConfig":"57"},{"size":1067,"mtime":1620311148720,"results":"93","hashOfConfig":"57"},{"size":4057,"mtime":1620392283165,"results":"94","hashOfConfig":"57"},{"size":1915,"mtime":1618957038091,"results":"95","hashOfConfig":"57"},{"size":2214,"mtime":1620501186954,"results":"96","hashOfConfig":"57"},{"size":912,"mtime":1620376561490,"results":"97","hashOfConfig":"57"},{"size":571,"mtime":1619029189472,"results":"98","hashOfConfig":"57"},{"size":1420,"mtime":1620328607251,"results":"99","hashOfConfig":"57"},{"size":5416,"mtime":1620311148717,"results":"100","hashOfConfig":"57"},{"size":2591,"mtime":1620333489481,"results":"101","hashOfConfig":"57"},{"size":1278,"mtime":1620501186959,"results":"102","hashOfConfig":"57"},{"size":5429,"mtime":1620232234173,"results":"103","hashOfConfig":"57"},{"size":2126,"mtime":1620242105033,"results":"104","hashOfConfig":"57"},{"size":1453,"mtime":1620501195670,"results":"105","hashOfConfig":"57"},{"size":5410,"mtime":1620501195674,"results":"106","hashOfConfig":"57"},{"size":2291,"mtime":1620392283171,"results":"107","hashOfConfig":"57"},{"size":1656,"mtime":1620501186949,"results":"108","hashOfConfig":"57"},{"size":1831,"mtime":1620501195676,"results":"109","hashOfConfig":"57"},{"size":2103,"mtime":1620501195672,"results":"110","hashOfConfig":"57"},{"size":1939,"mtime":1620505479585,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},"12s4mj8",{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"115"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"115"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"115"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"115"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"115"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"115"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"115"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"115"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"115"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"115"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"115"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"115"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"115"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"115"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"115"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"115"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"115"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"115"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"115"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"115"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"115"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"115"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"115"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"115"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"115"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"115"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"115"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"115"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"115"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"115"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"115"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"115"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js",["256","257"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ConfigProvider } from 'antd';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport {store,persistor} from '../src/redux/store';\r\nimport '../src/css/App.less';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={persistor}> */}\r\n        <ConfigProvider direction=\"rtl\">\r\n          <App />\r\n        </ConfigProvider>\r\n      {/* </PersistGate> */}\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n",["258","259"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js",["260","261","262","263","264","265"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js",["266"],"import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport thunk from 'redux-thunk';\r\nimport userReducer from './reducers/user.reducer';\r\nimport layerReducer from './reducers/layer.reducer';\r\nimport bookReducer from './reducers/book.reducer';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n  }\r\n   \r\n\r\nconst rootReducer = combineReducers({\r\n    userReducer,\r\n    layerReducer,\r\n    bookReducer\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(...middlewares),\r\n    )\r\n);\r\nconst persistor = persistStore(store)\r\n\r\n\r\nexport {store, persistor};\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\Library.js",["267","268","269","270"],"import React from 'react';\r\nimport { Menu,Layout } from 'antd';\r\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport '../../css/Library.css';\r\nimport { AlignRightOutlined, ReadOutlined, BarChartOutlined } from '@ant-design/icons';\r\nimport BookList from './BookList';\r\nimport CreateBorrow from './CreateBorrow';\r\nimport CreateNewBook from './CreateNewBook';\r\nimport BorrowBookList from './BorrowBookList';\r\nimport BookStatistic from './BookStatistic';\r\nimport { Route, Link} from \"react-router-dom\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n\r\nconst rootSubmenuKeys = ['borrows', 'books', 'statistics'];\r\n\r\n\r\nconst Library = () => {\r\n\r\n    const [openKeys, setOpenKeys] = React.useState(['borrows', 'books', 'statistics']);\r\n\r\n    const onOpenChange = keys => {\r\n      const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\r\n      if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n        setOpenKeys(keys);\r\n      } else {\r\n        setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\r\n      }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <Sider width={200} theme=\"light\">\r\n                    <Menu mode=\"inline\" style={{float: 'right'}} openKeys={openKeys} onOpenChange={onOpenChange}>\r\n                        <SubMenu key=\"borrows\" icon={<AlignRightOutlined />} title=\"השאלת ספרים\">\r\n                            <Menu.Item key=\"borrowing books\">\r\n                                <Link to='/library/borrows'>רשימת השאלות</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"add new borrow\">\r\n                                <Link to='/library/borrows/add'>הוספת השאלה חדשה</Link>\r\n                            </Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"books\" icon={<ReadOutlined />} title=\"ספרים\">\r\n                            <Menu.Item key=\"book list\">\r\n                                <Link to='/library/books'>רשימת ספרים</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"add new book\">\r\n                                <Link to='/library/books/add'>הוספת ספר חדש</Link>\r\n                            </Menu.Item>\r\n                        </SubMenu>\r\n                        <Menu.Item key=\"statistics\" icon={<BarChartOutlined />}>\r\n                            <Link to='/library/statistics'>סטטיסטיקה</Link>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Content style={{float: 'right', background: 'transparent', padding: '30px'}}>\r\n\r\n                        <Route path='/library/books' component={BookList} exact />\r\n                        <Route path='/library/books/add' component={CreateNewBook} exact />\r\n                        <Route path='/library/borrows' component={BorrowBookList} exact/>\r\n                        <Route path='/library/borrows/add' component={CreateBorrow} exact/>\r\n                        <Route path='/library/statistics' component={BookStatistic} exact/>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default Library;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\NewPassword.js",["271","272","273"],"import React, { useState } from 'react';\r\nimport {Form,Input,Select,Button,} from 'antd';\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: {\r\n        span: 24,\r\n      },\r\n      sm: {\r\n        span: 8,\r\n      },\r\n    },\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n      },\r\n    },\r\n  };\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n  \r\n\r\n\r\nconst NewPassword = () => { \r\n   const RegistrationForm = () => {\r\n    const [form] = Form.useForm();\r\n  \r\n    const onFinish = (values) => {\r\n      console.log('Received values of form: ', values);\r\n    };\r\n    return (\r\n        <>\r\n               <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n  \r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject('The two passwords that you entered do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          save\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    <RegistrationForm />\r\n        </>\r\n    )\r\n    }\r\n}\r\nexport default NewPassword;\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\general\\CalendarView.js",["274","275","276"],"import React, { useState,useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { CaretRightOutlined, CaretLeftOutlined } from '@ant-design/icons';\r\nimport { Button, Radio, Tooltip } from 'antd';\r\nimport { getLessons } from '../../services/layer.service';\r\nimport { useSelector } from 'react-redux';\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/he';\r\n\r\nimport CalendarFilters from './CalendarFilters';\r\nimport { getEvents } from '../../services/google-calendar.service';\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport '../../css/CalendarView.css';\r\n\r\nmoment.locale(\"he-IL\");\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\nconst formats = {\r\n    weekdayFormat: (date, culture, localizer) => localizer.format(date, 'dddd', culture),\r\n}\r\n\r\nconst CalendarView = (props) => {\r\n\r\n    const { user } = useSelector(state => state.userReducer);\r\n    const [filterValues, setFilterValues] = useState({\r\n        groupIds: null, \r\n        userId: user._id, \r\n        getAll: false\r\n    });\r\n    const [eventList, setEventList] = useState([]);\r\n    const [defaultView, setDefaultView] = useState('month');\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        getEvents();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getLessonsEvents();\r\n    }, [filterValues]);\r\n    \r\n    useEffect(() => {\r\n        console.log(selectedDate)\r\n    }, [selectedDate]);\r\n\r\n    const getLessonsEvents = () => {\r\n      getLessons(filterValues.groupIds, filterValues.userId, filterValues.getAll)\r\n        .then(response => response.data).then(response => {\r\n            if(response.success) {\r\n                let events = response.lessons.map(lesson => ({\r\n                    start: new Date(lesson.fromDateTime),\r\n                    end: new Date(lesson.toDateTime),\r\n                    title: `${lesson.lessonId.lessonSubject} - קבוצת  ${lesson.groupName}`\r\n                }))\r\n                setEventList(events);\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n    const updateFilters = (filterProps) => {\r\n      setFilterValues({...filterProps});\r\n    }\r\n\r\n    const onEventResize = (data) => {\r\n        const { start, end } = data;\r\n    };\r\n\r\n    const onEventDrop = (data) => {\r\n        console.log(data);\r\n    };\r\n    \r\n    const changeTime = e => {\r\n        let selectedValue = e.target.value;\r\n        let newDate = new Date(selectedDate);\r\n        if(selectedValue === 'today') {\r\n            setSelectedDate(new Date());\r\n            return;\r\n        }\r\n        let timeDiff = selectedValue === 'next' ? 1 : -1;\r\n        switch (defaultView) {\r\n            case 'month':\r\n                newDate.setMonth(newDate.getMonth() + timeDiff); \r\n                break;\r\n            case 'week':\r\n                newDate.setDate(newDate.getDate() + timeDiff * 7); \r\n                break;\r\n            case 'day':\r\n                newDate.setDate(newDate.getDate() + timeDiff); \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setSelectedDate(newDate);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <CalendarFilters updateFilters={updateFilters} filterValues={filterValues}/>\r\n                <div>\r\n                    <Radio.Group value={defaultView} onChange={(e)=>{setDefaultView(e.target.value);}}>\r\n                        <Radio.Button value=\"day\">יום</Radio.Button>\r\n                        <Radio.Button value=\"week\">שבוע</Radio.Button>\r\n                        <Radio.Button value=\"month\">חודש</Radio.Button>\r\n                        <Radio.Button value=\"agenda\">תקציר</Radio.Button>\r\n                    </Radio.Group>\r\n\r\n                    <Tooltip title=\"הקודם\">\r\n                        <Button value=\"back\" onClick={changeTime} shape=\"circle\" icon={<CaretLeftOutlined />} />\r\n                    </Tooltip>\r\n                    <Tooltip title=\"הבא\">\r\n                        <Button value=\"next\" onClick={changeTime} shape=\"circle\" icon={<CaretRightOutlined />} />\r\n                    </Tooltip>\r\n                    <Radio.Group>\r\n                        {/* <Radio.Button onClick={changeTime} value=\"next\">next</Radio.Button>\r\n                        <Radio.Button onClick={changeTime} value=\"back\">back</Radio.Button> */}\r\n                        <Radio.Button onClick={changeTime} value=\"today\">today</Radio.Button>\r\n                    </Radio.Group>\r\n                </div>\r\n                <DnDCalendar\r\n                    formats={formats}\r\n                    localizer={localizer}\r\n                    events={eventList}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    calendarType=\"Hebrew\"\r\n                    date={selectedDate}\r\n                    view={defaultView}\r\n                    onSelectEvent={(e)=>{console.log(e)}}\r\n                    onEventDrop={onEventDrop}\r\n                    onEventResize={onEventResize}\r\n                    style={{ height: \"100vh\", direction:'rtl'}}\r\n                    onNavigate={(e)=>{console.log(e)}}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default CalendarView;\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchyListView.js",["277","278","279"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js",["280","281","282","283","284","285","286","287","288","289","290","291"],"import React, {useState} from 'react';\r\nimport { Steps, Divider, Form, Input, Button, Upload, message, Row, Col, TreeSelect } from 'antd';\r\nimport { SnippetsOutlined, DiffOutlined, FormOutlined} from '@ant-design/icons';\r\nimport HierarchySelectTree from '../layers/HierarchySelectTree';\r\nimport {addLesson} from '../../services/lesson.service';\r\n\r\n\r\n\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { createLesson } from '../../redux/actions/lesson.actions';\r\nimport { InboxOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport '../../css/Lessons.css';\r\nimport UploadImageToS3WithReactS3 from './UploadImageToS3WithReactS3';\r\nimport UploadFiles from './UploadFiles';\r\nimport ViewFile from './ViewFile';\r\nimport ViewFileCopy from './ViewFileCopy';\r\nimport ViewFileCopy2 from './ViewFileCopy2';\r\n\r\nconst { SHOW_PARENT } = TreeSelect;\r\n\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n    {\r\n      title: 'פרטי השיעור',\r\n      content: 'First-content',\r\n    },\r\n    {\r\n      title: 'קבצי השיעור',\r\n      content: 'Second-content',\r\n    },\r\n    {\r\n      title: 'קבצי שיעורי בית',\r\n      content: 'Last-content',\r\n    },\r\n];\r\n\r\nconst CreateLesson = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [form] = Form.useForm();\r\n\r\n    const {layers} = useSelector(store => store.layerReducer);\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n    const [lesson, setLesson] = useState({\r\n        lessonSubject: '',\r\n        filesToLesson: [],\r\n        taskToLesson: []\r\n    });\r\n    const [levelIds, setLevelIds] = useState([]);\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const next = () => {\r\n        form.submit();\r\n        debugger\r\n        if(form.isFieldValidating()){\r\n            setCurrentStep(currentStep + 1);\r\n        }\r\n    };\r\n    \r\n    const prev = () => {\r\n        setCurrentStep(currentStep - 1);\r\n    };\r\n\r\n\r\n    const updateSelectedLevels = (hirarchyIds) => {\r\n        let result = [];\r\n        if(layers != null) {\r\n            layers.forEach(layer => {\r\n                layer.grades.forEach(grade => {\r\n                    grade.levels.forEach(level => {\r\n                        if(hirarchyIds.includes(level._id) || hirarchyIds.includes(grade._id) || hirarchyIds.includes(layer._id)){\r\n                            result.push(level._id);\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            setLevelIds(result);\r\n        }\r\n    }\r\n\r\n    const updateLessonSubject = (e) => {\r\n        setLesson({...lesson, lessonSubject: e.target.value})\r\n    }\r\n\r\n    const addFileToLesson = (linkToFile, fileName) => {\r\n        setLesson({...lesson, filesToLesson: [...lesson.filesToLesson, {linkToFile,fileName}]})\r\n    }\r\n\r\n    const addFileToTask = (linkToTask, taskName) => {\r\n        setLesson({...lesson, taskToLesson: [...lesson.taskToLesson, {linkToTask,taskName}]})\r\n    }\r\n\r\n    const save = () => {\r\n        addLesson(lesson, levelIds)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                message.success('השיעור נוסף בהצלחה');\r\n            })\r\n        .catch(error => {\r\n            message.error('שיעור');\r\n        });\r\n    }\r\n\r\n\r\n    const LessonDeltailsForm = (\r\n        <Form \r\n            id='lessonDatailsForm'\r\n            onFinishFailed={onFinishFailed}\r\n            form={form}\r\n        >\r\n            <label>נושא השיעור:</label>\r\n            <Form.Item\r\n                name=\"lessonSubject\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        pattern: \"(^[a-zA-Z \\u0590-\\u05fe]+$)\",\r\n                        min: 2,\r\n                        message: 'שדה חובה',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input onChange={updateLessonSubject}/>\r\n            </Form.Item>\r\n            <label>בחר לאילו רמות יתווסף השיעור:</label>\r\n            <Form.Item\r\n                name=\"lessonSubject\"\r\n                rules={[\r\n                    {\r\n                        required: true\r\n                    },\r\n                ]}\r\n            >\r\n                <HierarchySelectTree updateHierarchySelection={updateSelectedLevels}/>\r\n            </Form.Item>\r\n            \r\n        </Form>\r\n    );\r\n    \r\n\r\n    const uploadLessonFiles = (\r\n        <UploadFiles actionOnUploadCompleted={addFileToLesson}/>\r\n    );\r\n\r\n    const uploadTaskFiles = (\r\n        <UploadFiles actionOnUploadCompleted={addFileToTask}/>\r\n    )\r\n\r\n    return (\r\n        <>\r\n        <br/>\r\n        <br/>\r\n            <Row>\r\n                <Col span={12} offset={6}>\r\n                    <Steps current={currentStep}>\r\n                        <Step title=\"פרטי השיעור\" icon={<FormOutlined />}/>\r\n                        <Step title=\"קבצי השיעור\" icon={<DiffOutlined />}/>\r\n                        <Step title=\"קבצי שיעורי בית\" icon={<SnippetsOutlined />}/>\r\n                    </Steps>\r\n\r\n                    {currentStep === 0 && LessonDeltailsForm}\r\n                    {currentStep === 1 && uploadLessonFiles}\r\n                    {currentStep === 2 && uploadTaskFiles}\r\n                    \r\n                    <div className=\"steps-action\">\r\n                        {currentStep > 0 && (\r\n                            <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                                הקודם\r\n                            </Button>\r\n                        )}\r\n                        {currentStep === 2 && (\r\n                            <Button type=\"primary\" onClick={save}>\r\n                                שמירה\r\n                            </Button>\r\n                        )}\r\n                        {currentStep < 2 && (\r\n                            <Button onClick={() => next()}>\r\n                                הבא\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateLesson;\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AffiliationToGroup.js",["292","293","294","295","296"],"import React, { useEffect, useState } from 'react';\r\nimport { AutoComplete, Input, Form, Tabs, Drawer ,message,Button, Card } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getTeachers, getStudents } from '../../services/user.service';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {updateGroup} from '../../redux/actions/layer.actions';\r\nimport ViewUsers from '../../components/users/ViewUsers';\r\nimport GroupDetails from './GroupDetails';\r\n\r\n\r\n\r\nconst AffiliationToGroup = (props) => {\r\n\r\n    const {mode} = props;\r\n    const history = useHistory();\r\n    const [group, setGroup] = useState();\r\n    const [teacherList, setTeacherList] = useState([]);\r\n    const [studentList, setStudentList] = useState();\r\n    const [groupName, setGroupName] = useState('');\r\n    const [selectedTeacher, setSelectedTeacher] = useState('');\r\n    const [selectedStudents, setSelectedStudents] = useState([]);\r\n    const [currentStudent, setCurrentStudent] = useState(null);\r\n    const [teacherDefaultValue, setTeacherDefaultValue] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [viewMode, setViewMode] = useState(mode);\r\n    const { layers } = useSelector(state => state.layerReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(group) {\r\n            initTeacherList();\r\n            initStudentList();\r\n        }\r\n    }, [group]);\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        for(let layer of layers) {\r\n            for(let grade of layer.grades) {\r\n                for(let level of grade.levels) {\r\n                    for(let group of level.groups) {\r\n                        if(group._id === history.location.state.hierarchyItem._id) {\r\n                            setGroup(group);\r\n                            setGroupName(group.name)\r\n                            setSelectedTeacher(group.teacherCode)\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [layers]);\r\n\r\n    const initTeacherList = () => {\r\n        getTeachers().then(resopnse => resopnse.data).then(response => {\r\n            if (response.success) {\r\n                let result = response.data.map(teacher => {\r\n                    if(group.teacherCode && teacher._id === group.teacherCode) {\r\n                        setTeacherDefaultValue(`${teacher.firstName} ${teacher.lastName}`);\r\n                        setSelectedTeacher(teacher._id);\r\n                    }\r\n                    return ({ ...teacher, key:teacher._id, value:`${teacher.firstName} ${teacher.lastName}` })\r\n                })\r\n                setTeacherList(result);\r\n            }\r\n            else {\r\n                message.error('Faild to load teacher list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load teacher list'));\r\n    }\r\n    const getPicklistItem = (student) => {\r\n        let value = `${student.firstName} ${student.lastName}`;\r\n        return (\r\n            <div value={value}>\r\n                <h3>{value}</h3>\r\n                <label>{student.email}</label>\r\n            </div>\r\n        )\r\n    }\r\n    const initStudentList = () => {\r\n        getStudents().then(resopnse => resopnse.data).then(response => {\r\n            if (response.success) {\r\n                debugger\r\n                let result = response.data.map(student => \r\n                    ({...student,\r\n                        key:student._id, \r\n                        value: `${student.firstName} ${student.lastName}`,\r\n                        label : getPicklistItem(student)\r\n                    }\r\n                ));\r\n                let studentsIds = group.StudentsInTheGroup.map(studentInGroup => studentInGroup.studentCode);\r\n                let existStudents = result.filter(student => studentsIds.includes(student._id));\r\n                let notExistStudents = result.filter(student => !studentsIds.includes(student._id));\r\n                setStudentList(notExistStudents);\r\n                setSelectedStudents(existStudents); \r\n            }\r\n            \r\n            else {\r\n                message.error('Faild to load student list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load student list'));\r\n    }\r\n\r\n    const handleSelectTeacher = (value, teacher) => {\r\n        setSelectedTeacher(teacher._id);\r\n        setTeacherDefaultValue(`${teacher.firstName} ${teacher.lastName}`)\r\n    }\r\n    const handleSelectStudent = (value, student) => {\r\n        setCurrentStudent(student);\r\n    }\r\n\r\n    const addNewStudentToList = (event) => {\r\n        setSelectedStudents([...selectedStudents, currentStudent]);\r\n        let students = studentList.filter(student => student._id !== currentStudent._id);\r\n        setStudentList(students);\r\n        setCurrentStudent(null)\r\n    }\r\n\r\n    const filterAutoComplete  = (inputValue, option) => {\r\n        return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n    }\r\n\r\n    const save = () => {\r\n        setLoading(true);\r\n        let data = {\r\n            groupId: group._id,\r\n            name:groupName,\r\n            teacherCode: selectedTeacher,\r\n            StudentsInTheGroup: selectedStudents.map(student => \r\n                ({studentCode: student._id})\r\n            )\r\n        }\r\n\r\n        dispatch(updateGroup(data)).then((response) => {\r\n            setLoading(false);\r\n            if(response.success){\r\n                debugger\r\n                setGroup(response.group);\r\n                message.success(`group updated sucessfuly`);\r\n            }\r\n            setViewMode('read');\r\n        }).catch(error => {\r\n            message.error(`Filed to update group`);\r\n        });  \r\n    }\r\n    const removeStudent = (studentId) => {\r\n        let student = selectedStudents.find(student => student._id === studentId);\r\n        let selectedList = selectedStudents.filter(student => student._id !== studentId)\r\n        setSelectedStudents(selectedList);\r\n        setStudentList([...studentList, student]);\r\n    }\r\n\r\n    const editGroup = () => {\r\n        setViewMode('edit');\r\n    }\r\n\r\n    const style = {\r\n        display : \"flex\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n    const style2 = {\r\n        width: \"-webkit-fill-available\"\r\n    }\r\n\r\n    return (\r\n        \r\n       \r\n        <div style={style}>\r\n        {group &&\r\n            <>\r\n            <div style={style2}>\r\n                {viewMode === 'edit' && \r\n                    <>\r\n                        <Form\r\n                            layout=\"vertical\"\r\n                        >\r\n                            <Form.Item\r\n                                label=\"group name\"\r\n                                name=\"group name\"\r\n                                onChange={(e) => {setGroupName(e.target.value)}}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: `Please input group name!`\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input defaultValue={groupName}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"teacher name\" name=\"teacher name\">     \r\n                                <AutoComplete\r\n                                    style={{\r\n                                        width: 200,\r\n                                    }}\r\n                                    options={teacherList}\r\n                                    defaultValue={teacherDefaultValue}\r\n                                    placeholder=\"teacher name\"\r\n                                    onSelect={handleSelectTeacher}\r\n                                    filterOption={filterAutoComplete}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label=\"add a new student\" name=\"add a new student\"> \r\n                            <AutoComplete\r\n                                style={{width: 200}}\r\n                                options={studentList}\r\n                                placeholder=\"add student\"\r\n                                onSelect={handleSelectStudent}\r\n                                filterOption={filterAutoComplete}\r\n                                notFoundContent=\"No student found\"\r\n                                value={currentStudent !== null? `${currentStudent.firstName} ${currentStudent.lastName}` : \"\"}\r\n                            />\r\n                            <Button disabled={currentStudent=== null} onClick={addNewStudentToList}>Add Student</Button>\r\n                            </Form.Item>\r\n                        <div>\r\n                        </div>\r\n\r\n                        </Form>\r\n                        <ViewUsers \r\n                            title=\"תלמידים בקבוצה:\" \r\n                            userList={selectedStudents} \r\n                            showSetRole={false}\r\n                            showRemove={true}\r\n                            removeStudent={removeStudent}\r\n                        /> \r\n                    </>\r\n                }\r\n                    \r\n                {viewMode === 'read' &&\r\n                    <GroupDetails \r\n                        group={group} \r\n                        teacherName={teacherDefaultValue} \r\n                        studentsInGroup={selectedStudents}\r\n                    />\r\n                }\r\n          \r\n            </div>\r\n            <div>\r\n                {viewMode === 'edit' && <Button loading={loading} onClick={save}>שמור שינויים</Button>}\r\n                {viewMode === 'read' && \r\n                    <>\r\n                        <Button loading={loading} onClick={editGroup}>יציאה</Button>\r\n                    </>\r\n                }\r\n                \r\n            </div>\r\n            </>\r\n        }\r\n        </div>\r\n    )\r\n}\r\nexport default AffiliationToGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\book.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\layer.reducer.js",["297"],"import {SET_LAYERS, ADD_LAYER, UPDATE_GROUP} from '../actions/layer.actions';\r\nimport produce from \"immer\"\r\n\r\n\r\nconst InitialSatate = {\r\n    layers: null\r\n}\r\n\r\nexport default produce((state = InitialSatate, action) => {\r\n    switch (action.type) {\r\n        case SET_LAYERS:\r\n            return {...state, \r\n                layers : action.payload\r\n            };\r\n        case ADD_LAYER:\r\n            let newLayer = action.payload;\r\n            let layers = [];\r\n            if(state.layers != null) {\r\n                layers = state.layers.filter(layer => layer._id !== newLayer._id);\r\n            }\r\n            layers = [...layers, newLayer];\r\n            state.layers = layers;\r\n            return state;\r\n\r\n        case UPDATE_GROUP:\r\n            for(let layer of state.layers) {\r\n                for(let grade of layer.grades) {\r\n                    for(let level of grade.levels) {\r\n                        for(let group of level.groups) {\r\n                            if(group._id === action.payload._id) {\r\n                                group = Object.assign(group, action.payload);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n})","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\NavBar.js",["298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"import React, { useState, useEffect } from 'react';\r\nimport { Menu,Avatar, Badge } from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../redux/actions/user.actions';\r\nimport SignIn from '../../pages/SignIn';\r\nimport MenuItem from './MenuItem';\r\nimport '../../css/Home.css';\r\nimport { \r\n    MailOutlined, \r\n    AppstoreOutlined, \r\n    SettingOutlined, \r\n    ApartmentOutlined,\r\n    HomeOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    UsergroupAddOutlined,\r\n    ReadOutlined,\r\n    MessageOutlined,\r\n    WechatOutlined,\r\n    IdcardOutlined,\r\n    LogoutOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst pathPermissions = new Map([\r\n    ['/', new Array('guest','admin','secretary','teacher', 'student')],\r\n    ['/library', new Array('admin','secretary','teacher', 'student')],\r\n    ['/users', new Array('admin','secretary')],\r\n    ['/users/:id', new Array('admin','secretary','teacher', 'student')],\r\n    ['/lessons/add', new Array('admin')],\r\n    ['/lessons', new Array('admin','secretary','teacher')],\r\n    ['/layers', new Array('admin','secretary','teacher')],\r\n    ['/calendar', new Array('admin','secretary','teacher', 'student')],\r\n    ['/grade', new Array('admin','secretary','teacher')],\r\n    ['/level', new Array('admin','secretary','teacher')],\r\n    ['/group', new Array('admin','secretary','teacher')],\r\n    ['/viewGroupDetails', new Array('admin','secretary','teacher', 'student')],\r\n    ['/viewGroupDetails', new Array('admin','secretary','teacher', 'student')]\r\n]);\r\n\r\nconst navBarItems = new Map([\r\n    ['/','בית'],\r\n    ['/library','ספריה'],\r\n    ['/users','משתמשים'],\r\n    ['/users/:id','פרטי משתמש'],\r\n    ['/lessons/add','הוספת שיעור חדש'],\r\n    ['/lessons','מערכי שיעורים'],\r\n    ['/layers','שכבות'],\r\n    ['/calendar','לוח שנה']\r\n]);\r\n\r\n\r\nconst NavBar = (props) => {\r\n\r\n    const [current, setCurrent] = useState('/');\r\n    const { user } = useSelector(state => state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const [showSignIn, setShowSignIn] = useState(false);\r\n    const [userRole, setUserRole] = useState(user && user.role ? user.role : 'guest');\r\n\r\n    useEffect(() => {\r\n        if(user != null ){\r\n            hideSignIn();\r\n        }\r\n    }, [user]);\r\n\r\n    const handleClick = e => {\r\n        setCurrent(e.key);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('access-token');\r\n        dispatch(logout());\r\n    };\r\n\r\n    const handleShowSignIn = () => {\r\n        setShowSignIn(true);\r\n    }\r\n    const hideSignIn = () => {\r\n        setShowSignIn(false);\r\n    }\r\n    const getMessagesCount = () => {\r\n        return user && user.message ? user.messages.filter(message => !message.isRead).length : 0 ;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n            <MenuItem route=\"/\" key='/' icon={<HomeOutlined />}>בית</MenuItem>\r\n            <MenuItem route=\"/layers\" key='/layers' roles={['admin','secretary','teacher']} icon={<ApartmentOutlined />}>קבוצות</MenuItem>\r\n            <SubMenu key=\"lessons and tasks\" roles={['admin','secretary','teacher']} icon={<ReadOutlined />} title=\"שיעורים ומשימות\">\r\n            <Menu.ItemGroup>\r\n                <Menu.Item key=\"/lessons/add\" role={['admin']}>\r\n                    <Link to=\"/lessons/add\">הוספת שיעור חדש</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/lessons\" role={['admin','secretary','teacher']}>\r\n                       <Link to=\"/lessons\">מערכי שיעורים</Link> \r\n                </Menu.Item>\r\n            </Menu.ItemGroup>\r\n            </SubMenu>\r\n            <MenuItem route=\"/calendar\" key='/calendar' roles={['admin','secretary','teacher', 'student']} icon={<CalendarOutlined />}>לוח שנה</MenuItem>\r\n            <MenuItem route=\"/library\" key='/library' roles={['admin','teacher']} icon={<CalendarOutlined />}>ספריה</MenuItem>\r\n            <MenuItem route=\"/users\" key='/users' roles={['admin','secretary']} icon={<UsergroupAddOutlined />}>ניהול משתמשים</MenuItem>\r\n\r\n        {user && \r\n            <SubMenu \r\n                style={{float: 'left'}} \r\n                key=\"user\" \r\n                icon={\r\n                    <Badge style={{float: 'right'}} count={getMessagesCount()}>\r\n                        <Avatar icon={<UserOutlined />} />\r\n                    </Badge> \r\n                }>\r\n                <Menu.ItemGroup>\r\n                    <Menu.Item key=\"messeges\" icon={<WechatOutlined />}><Link to=\"/messages\">הודעות</Link></Menu.Item>\r\n                    <Menu.Item key=\"profile\" icon={<IdcardOutlined />}>פרופיל</Menu.Item>\r\n                    <Menu.Item key=\"logout\" icon={<LogoutOutlined />} onClick={handleLogout}>יציאה</Menu.Item>\r\n                </Menu.ItemGroup>\r\n            </SubMenu>\r\n        }\r\n\r\n        {user == null &&\r\n            <Menu.Item\r\n                    style={{float: 'left'}} \r\n                    key=\"signIn\" \r\n                    onClick={handleShowSignIn}\r\n            >\r\n                <span style={{padding:\"8px\"}}>כניסה/הרשמה</span> \r\n                <LogoutOutlined />\r\n            </Menu.Item>\r\n        }\r\n      </Menu>\r\n      {showSignIn && <SignIn hideSignIn={hideSignIn}/>}\r\n\r\n      </>\r\n    )\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\SetUserRole.js",["318"],"import React, { useState } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { Form, Input, Radio, Button, Modal, message } from 'antd';\r\nimport {setUserRole} from '../../redux/actions/user.actions';\r\n\r\n\r\nconst SetUserRole = (props) => {\r\n\r\n  const { id, handleOk, handleCancel } = props;\r\n\r\n  const { user } = useSelector(state => state.userReducer);\r\n    \r\n  const [role, setRole] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onChange = e => {\r\n    console.log('radio checked', e.target.value);\r\n    setRole(e.target.value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n    \r\n  const save = () => {\r\n      setLoading(true);\r\n      dispatch(setUserRole(id, role)).then(response => {\r\n        message.success('role was set successfully');\r\n        setLoading(false);\r\n      }).catch(error => {\r\n        setLoading(false);\r\n        message.error('set user role failed');\r\n      });    \r\n      handleOk();   \r\n  }\r\n  const cancel = () => {\r\n    handleCancel();\r\n  }\r\n\r\n  const onFinishFailed = () => {\r\n    alert('Failed to set user role');\r\n  }\r\n\r\n    return (\r\n      <>\r\n        <Modal title=\"הגדרת תפקיד משתמש\" visible={true} footer={\r\n          <>\r\n              <Button onClick={cancel} style={{ marginRight: 8 }}>\r\n                ביטול\r\n              </Button>\r\n              <Button loading={loading}  type=\"primary\" htmlType=\"submit\" form=\"newBookForm\" key=\"submit\">\r\n                שמור\r\n              </Button>\r\n            </>\r\n          }>\r\n          <Form id=\"newBookForm\" onFinish={save} onFinishFailed={onFinishFailed} >\r\n\r\n          <Form.Item id=\"roleForm\">\r\n            <Radio.Group onChange={onChange}>\r\n            <Radio value={'student'}>תלמיד/ה</Radio>\r\n            <br />\r\n            <Radio value={'teacher'}>מורה</Radio>\r\n            <br />\r\n            <Radio value={'secretary'}>מזכיר/ה</Radio>\r\n            <br />\r\n            { user.role === 'admin' && \r\n              <Radio value={'admin'}>מנהל</Radio>\r\n            }\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SetUserRole;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\GroupDetails.js",["319","320"],"import React, {useState} from 'react';\r\nimport ViewUsers from '../../components/users/ViewUsers';\r\nimport {Tabs, Drawer ,Button, Card,Radio } from 'antd';\r\nimport LessonsInGroup from './LessonsInGroup';\r\nimport AddLessonsToGroup from './AddLessonToGroup';\r\nimport Attendance from '../users/Attendance';\r\nimport {updateAttendance} from '../../redux/actions/user.actions';\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst GroupDetails = (props) => {\r\n\r\n    const {group, teacherName, studentsInGroup} = props;\r\n    const [viewDrawer, setViewDrawer] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Card title={`שם קבוצה: ${group.name}`} style={{ width: 300 }} bordered={false}>\r\n                        <p>שם מורה: {teacherName}</p>\r\n            </Card>\r\n\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"תלמידים בקבוצה\" key=\"1\">\r\n                    <ViewUsers \r\n                        title=\"תלמידים בקבוצה:\" \r\n                        userList={studentsInGroup} \r\n                        showSetRole={false}\r\n                        showRemove={false}\r\n                    /> \r\n                </TabPane>\r\n                <TabPane tab=\"שיעורים בקבוצה\" key=\"2\">\r\n                    <>\r\n                    <LessonsInGroup lessons={group.lessons}/>\r\n                        <Button onClick={()=>{setViewDrawer(true)}}>הוספת שיעור לקבוצה</Button>\r\n                        <Drawer\r\n                            title=\"הוספת שיעור לקבוצה\"\r\n                            placement=\"right\"\r\n                            closable={()=>{setViewDrawer(true)}}\r\n                            visible={viewDrawer}\r\n                            key=\"right\"\r\n                            >\r\n                            <AddLessonsToGroup setViewDrawer={setViewDrawer} groupId={group._id}/>\r\n                        </Drawer>\r\n                    </>\r\n                </TabPane>\r\n                <TabPane tab=\"נוכחות\" key=\"3\">\r\n                       <Attendance studentsInGroup={studentsInGroup}/>\r\n                </TabPane>\r\n            </Tabs>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupDetails;\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\ViewFileCopy2.js",["321","322","323"],"import React, {useRef, useEffect} from 'react';\r\nimport DocViewer,  { DocViewerRenderers }  from \"react-doc-viewer\";\r\n\r\n\r\nconst ViewFileCopy2  = (props) => {\r\n\r\n    const docs = [\r\n        { uri: \"https://lessons-files.s3.amazonaws.com/workFileExample.docx\" },\r\n        { uri: \"https://lessons-files.s3.eu-west-3.amazonaws.com/bg1a.jpg\" },\r\n        { uri: \"https://lessons-files.s3.amazonaws.com/testPDF.pdf\" },\r\n        { uri: \"https://lessons-files.s3.eu-west-3.amazonaws.com/%D7%97%D7%99%D7%99%D7%9D+%D7%90%D7%9C%D7%98%D7%9E%D7%9F+-+%D7%99%D7%A8%D7%90%D7%AA+%D7%94%D7%A9%D7%9D+(1).mp3\" },\r\n        { uri: \"https://lessons-files.s3.amazonaws.com/VID-20201207-WA0004.mp4\" },\r\n    ];\r\n    return <DocViewer \r\n                pluginRenderers={DocViewerRenderers} \r\n                documents={docs} \r\n            />\r\n}\r\n\r\nexport default ViewFileCopy2;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\ViewFileCopy.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\hooks\\stringToColor.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js",["324","325","326","327","328","329"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\ViewFile.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadFiles.js",["330","331","332","333","334"],"import React, {useState} from  'react';\r\nimport { Upload, Button, message } from \"antd\";\r\nimport { InboxOutlined, UploadOutlined,PlusOutlined  } from '@ant-design/icons';\r\nimport { uploadFile } from 'react-s3';\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst config = {\r\n    bucketName: process.env.REACT_APP_S3_BUCKET,\r\n    region: process.env.REACT_APP_S3_REGION,\r\n    accessKeyId: process.env.REACT_APP_S3_ACCESS_KEY,\r\n    secretAccessKey: process.env.REACT_APP_S3_SECRET_ACCESS_KEY,\r\n}\r\n\r\nconst UploadFiles  = (props) => {\r\n\r\n    const { actionOnUploadCompleted } = props;\r\n    const [selectedFileList, setSelectedFileList] = useState([]);\r\n\r\n    const uploadFileToS3 = ({ file, onSuccess, onError }) => {\r\n        uploadFile(file, config).then(data => {\r\n            console.log(data.location);\r\n            debugger\r\n            actionOnUploadCompleted(data.location, data.key);\r\n            onSuccess(\"ok\")\r\n        }).catch(error => {\r\n            console.error(error);\r\n            onError({error});\r\n        })\r\n    }\r\n    \r\n    //TODO : delete files: https://www.npmjs.com/package/react-s3\r\n\r\n    const upload = info => {\r\n        debugger;\r\n\r\n        switch (info.file.status) {\r\n            // case \"uploading\":\r\n            //     nextState.selectedFileList = [info.file];\r\n            //     break;\r\n            case \"done\":\r\n                message.success(`${info.file.name} file uploaded successfully.`);\r\n                break;\r\n\r\n            case \"error\":\r\n                message.error(`${info.file.name} file upload failed.`);\r\n                break;\r\n\r\n            default: return;\r\n        }\r\n    }\r\n\r\n    const daraggerProps = {\r\n        name: 'file',\r\n        multiple: true,\r\n        customRequest: uploadFileToS3,\r\n        onChange : upload\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Dragger {...daraggerProps}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">לחץ / גרור קובץ לאיזור זה כדי להעלות אותו</p>\r\n            <p className=\"ant-upload-hint\">\r\n            ניתן לעלות קובץ בודד או קבצים מרובים\r\n            </p>\r\n        </Dragger>\r\n\r\n        {/* <Upload\r\n            // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            listType=\"picture-card\"\r\n            fileList={selectedFileList}\r\n            customRequest={uploadFileToS3}\r\n            onChange={upload}\r\n        >\r\n          {selectedFileList.length >= 8 ? null : uploadButton}\r\n        </Upload> */}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default UploadFiles;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\layer.actions.js",["335"],"import { useSelector } from 'react-redux';\r\nimport {getAllLayers, \r\n        addNewLayer, \r\n        addNewGrade, \r\n        addNewLevel, \r\n        addNewGroup,\r\n        updateGroupDetails,\r\n        updateGroupLessons\r\n} from '../../services/layer.service';\r\n\r\nexport const SET_LAYERS = 'SET LAYERS';\r\nexport const ADD_LAYER = 'ADD LAYER';\r\nexport const UPDATE_GROUP = 'UPDATE GROUP';\r\n\r\nexport const setLayers = (layersList) => {\r\n    return {\r\n        type: SET_LAYERS,\r\n        payload: layersList\r\n    };\r\n};\r\nexport const setLayer = (layer) => {\r\n    return {\r\n        type: ADD_LAYER,\r\n        payload: layer\r\n    };\r\n};\r\nexport const setUpdatedGroup = (group) => {\r\n    return {\r\n        type: UPDATE_GROUP,\r\n        payload: group\r\n    };\r\n};\r\n\r\n\r\nexport const getLayers = () => {\r\n    return (dispatch) => {\r\n        getAllLayers().then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayers(response.data));\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const addLayer = (layer) => {\r\n    return dispatch => {\r\n        return addNewLayer(layer).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\n\r\nexport const addGrade = (params) => {\r\n    return dispatch => {\r\n        return addNewGrade(params).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const addLevel = (params) => {\r\n   \r\n    return dispatch => {\r\n        return addNewLevel(params).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\nexport const addGroup = (params) => {\r\n   \r\n    return dispatch => {\r\n        return addNewGroup(params).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\nexport const updateGroup = (group) => {\r\n   \r\n    return dispatch => {\r\n        return updateGroupDetails(group).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setUpdatedGroup(response.group));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\nexport const updateLessonsInGroup = (data) => {\r\n   \r\n    return dispatch => {\r\n        return updateGroupLessons(data).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                debugger;\r\n                dispatch(setUpdatedGroup(response.group));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\book.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadImageToS3WithReactS3.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AddLessonToGroup.js",["336","337","338","339","340"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button,Space, DatePicker,TimePicker, message,Checkbox,AutoComplete } from 'antd';\r\nimport {getLessons} from '../../services/lesson.service';\r\nimport {updateLessonsInGroup} from '../../redux/actions/layer.actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddLessonsToGroup = (props) => {\r\n    const {groupId, setViewDrawer} = props;\r\n    const [startDate, setStartDate] = useState();\r\n    const [lessons, setLessons] = useState([]);\r\n    const [selectedLesson, setSelectedLesson] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [key, setKey] = useState(new Date());\r\n    const format = 'HH:mm';\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        initLessons();\r\n    }, []);\r\n\r\n    const initLessons = () => {\r\n        getLessons().then(response => {\r\n            debugger\r\n            if (response.success) {\r\n                debugger\r\n                let result = response.data.map(lesson => \r\n                    ({...lesson,\r\n                        key:lesson._id, \r\n                        value: lesson.lessonSubject,\r\n                        label : lesson.lessonSubject\r\n                    }\r\n                ));\r\n                setLessons(result);\r\n            }\r\n            else {\r\n                message.error('Faild to load teacher list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load teacher list'));\r\n    }\r\n\r\n\r\n    const handleSatartDateChanged = (date, dateString) => {\r\n        setStartDate(date);\r\n    }\r\n\r\n    // lessonId: { type: ObjectId, required: true },\r\n    // remarks: { type: String, required: false },\r\n    // // date: { type: Date, required: true },\r\n    // comments: { type: Date, required: true },\r\n    // toAnHour: { type: Date, required: true },\r\n    // comments: { type: String, required: false },\r\n\r\n    const filterAutoComplete = (inputValue, option) => {\r\n        return option.lessonSubject.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1  \r\n    }\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n        let lesson = {\r\n            lessonId: selectedLesson._id,\r\n            fromDateTime:values[\"lesson time\"][0],\r\n            toDateTime:values[\"lesson time\"][1],\r\n            comments: values[\"comments\"]\r\n        }\r\n        let data = {groupId: groupId, lessons: [lesson]};\r\n        dispatch(updateLessonsInGroup(data)).then(res => {\r\n            if(res.success){\r\n                setLoading(false);\r\n                message.success(\"lesson created successfuly\")\r\n                setViewDrawer(false);\r\n                setKey(new Date());\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        console.log(\"cancel\");\r\n    }\r\n\r\n    const handleSelectLesson = (value, lesson) => {\r\n        setSelectedLesson(lesson);\r\n    }\r\n\r\n    const style = { \r\n        display: \"grid\"\r\n    }\r\n    return (\r\n        <>\r\n        <Space>\r\n        <Form key={key} layout=\"vertical\" style={style} initialValues={{ remember: true }} onFinish={save}>\r\n            <Form.Item \r\n                label=\"זמן השיעור\" \r\n                name=\"lesson time\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'please set lesson hours!'\r\n                    },\r\n                ]}\r\n            >\r\n                <RangePicker\r\n                    ranges={{\r\n                        Today: [moment(), moment()],\r\n                        'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n                    }}\r\n                    showTime\r\n                    format=\"YYYY/MM/DD HH:mm\"\r\n                />\r\n\r\n            </Form.Item>\r\n            <Form.Item \r\n                label=\"נושא השיעור\" \r\n                name=\"select lesson\" \r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'please select lesson!'\r\n                    },\r\n                ]}\r\n            \r\n            >     \r\n                <AutoComplete\r\n                    style={{\r\n                        width: 200,\r\n                    }}\r\n                    options={lessons}\r\n                    placeholder=\"select lesson\"\r\n                    onSelect={handleSelectLesson}\r\n                    filterOption={filterAutoComplete}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                    label=\"הערות\"\r\n                    name=\"comments\"\r\n                >\r\n                    <Input />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                        שמור\r\n                    </Button>\r\n                    <Button type=\"default\" htmlType=\"button\" onClick={handleCancel}>\r\n                        ביטול\r\n                    </Button>\r\n            </Form.Item>\r\n        </Form>\r\n        </Space>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddLessonsToGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\book.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\layer.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js",["341","342","343"],"import React, { useState } from 'react';\r\nimport { enterUser } from '../../redux/actions/user.actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Form, Input, Button, Checkbox, Alert, message } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst Login = (props) => {\r\n\r\n    const {hideModal} = props;\r\n\r\n    // const { message } = useSelector(state => state.messageReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n\r\n        dispatch(enterUser(values.email, values.password))\r\n            .then((response)=>{\r\n                setLoading(false);\r\n                if(response.data){\r\n                    hideModal();\r\n                    return;\r\n                }\r\n                switch (response.request.status) {\r\n                    case 404:\r\n                        message.error('שגיאה: שם משתמש או סיסמה לא קיימים');\r\n                        break;\r\n                    default:\r\n                        message.error('שגיאה');\r\n                        break;\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setLoading(false);\r\n                message.error('שגיאה')\r\n            });\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        hideModal();\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* {message && <Alert\r\n                message=\"Error\"\r\n                description={message}\r\n                type=\"error\"\r\n                showIcon\r\n            />} */}\r\n            <Form {...layout} name=\"login\" onFinish={save} onFinishFailed={onFinishFailed} >\r\n                <Form.Item\r\n                    label=\"מייל\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your email!',\r\n                            type: 'email'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"סיסמא\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                        שלח\r\n                    </Button>\r\n                    <Button type=\"default\" htmlType=\"button\" onClick={handleCancel}>\r\n                        ביטול\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js",["344","345"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createUser } from '../../redux/actions/user.actions';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const {hideModal} = props;\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const save = (values) => {\r\n        console.log('Success:', values); \r\n        dispatch(createUser(values)).then(res => {\r\n            hideModal();\r\n        });       \r\n    }\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        hideModal();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form {...layout} name=\"login\" onFinish={save} onFinishFailed={onFinishFailed} >\r\n                <Form.Item\r\n                    label=\"שם פרטי\"\r\n                    name=\"firstName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern:\"(^[a-zA-Z\\u0590-\\u05fe]+$)\",\r\n                            min:2,\r\n                            message: 'first name is required and must be at least 2 chars',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"שם משפחה\"\r\n                    name=\"lastName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern:\"(^[a-zA-Z\\u0590-\\u05fe]+$)\",\r\n                            min:2,\r\n                            message: 'first name is required and must be at least 2 chars',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                \r\n                <Form.Item\r\n                    label=\"מייל\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your email!',\r\n                            type: 'email'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        שמור\r\n                    </Button>\r\n                    <Button type=\"default\" htmlType=\"button\" onClick={handleCancel}>\r\n                        ביטול\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\LessonsInGroup.js",["346","347","348"],"import React, {useEffect, useState} from 'react';\r\nimport { List, message, Steps, Divider, Popover } from 'antd';\r\nimport {getLessons} from '../../services/lesson.service';\r\n\r\nconst { Step } = Steps;\r\n\r\n\r\nconst LessonsInGroup = (props) => {\r\n\r\n    const {lessons} = props;\r\n    const [groupLessons, setGroupLessons] = useState([]);\r\n    const [currentLessonIndex, setCurrentLessonIndex] = useState();\r\n\r\n    useEffect(() => {\r\n        initLessons();\r\n    }, [lessons]);\r\n    \r\n    \r\n    useEffect(() => {\r\n        let index = groupLessons.findIndex(lesson => new Date(lesson.fromDateTime) > new Date());\r\n        setCurrentLessonIndex(index);\r\n        // groupLessons.forEach((lesson, index) => {\r\n        //     if(new Date(lesson.fromDateTime) > new Date()){\r\n        //         setCurrentLessonIndex(index);\r\n        //         return;\r\n        //     }\r\n        // });\r\n    }, [groupLessons]);\r\n\r\n    const initLessons = () => {\r\n        getLessons().then(response => {\r\n\r\n            if (response.success) {\r\n                let lessonsMap = Object.assign({}, ...response.data.map(lesson => ({[lesson._id]: lesson})));\r\n                let result = Object.values(lessons.map(lesson => ({...lesson, lessonObject: lessonsMap[lesson.lessonId]})));\r\n                let filterdList = result.sort((a, b) => new Date(a.fromDateTime) - new Date(b.fromDateTime))\r\n                setGroupLessons(filterdList);\r\n            }\r\n            else {\r\n                message.error('Faild to load lessons list')\r\n            }\r\n            console.log(response);\r\n        })\r\n        .catch(error => message.error('Faild to load lessons list'));\r\n    }\r\n\r\n    const customDot = (dot, { status, index }) => (\r\n        <Popover\r\n          content={\r\n            <span>\r\n              step {index} status: {status}\r\n            </span>\r\n          }\r\n        >\r\n          {dot}\r\n        </Popover>\r\n      );\r\n\r\n\r\n    return (\r\n        <>\r\n            {groupLessons.length && \r\n                <Steps progressDot={customDot} current={currentLessonIndex} direction=\"vertical\">\r\n            \r\n                    {groupLessons.map(lesson => \r\n                        <Step key={lesson._id} title={lesson.lessonObject.lessonSubject} \r\n                                description={lesson.fromDateTime}\r\n                        />\r\n                    )}\r\n                </Steps>\r\n            }  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default LessonsInGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\CreateHierarchy.js",["349"],"import React, { useState, useEffect }  from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addLayer, addGrade, addLevel, addGroup} from '../../redux/actions/layer.actions';\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst hierarchyNames = new Map([\r\n    ['layer', 'שכבה'],\r\n    ['grade', 'כתה'],\r\n    ['level', 'רמת למידה'],\r\n    ['group', 'קבוצה'],\r\n])\r\n\r\nconst CreateHierarchy = (props) => {\r\n\r\n    const {hideCreateHierarchy , type, layerId, gradeId , levelId} = props;\r\n    const { layers } = useSelector(state => state.layerReducer);\r\n    const [loading, setLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getLayerId = (gradeId) => {\r\n        \r\n        if(!gradeId)\r\n            return null;\r\n        return layers.find(layers => layers.grades.find(grade => grade._id === gradeId))._id;\r\n    }\r\n    \r\n    const getGradeId = (levelId) => {\r\n        \r\n        if(!levelId)\r\n            return null;\r\n    \r\n        let result;\r\n        layers.forEach(layer => {\r\n            layer.grades.forEach(grade => {\r\n                let data = grade.levels.find(level => level._id === levelId)\r\n                if (data) {\r\n                    result = grade;\r\n                    return;\r\n                }\r\n            });\r\n    \r\n        });\r\n        return result._id;\r\n    }\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n        let {name} = values;\r\n        let func;\r\n        let params;\r\n        switch (type) {\r\n            case 'layer':\r\n                func = addLayer;\r\n                params = name;\r\n                break;\r\n            case 'grade':\r\n                func = addGrade;\r\n                params = {layerId : layerId , gradeName: name };\r\n                break;\r\n            case 'level':\r\n                func = addLevel;\r\n                params = {gradeId: gradeId, levelName: name, layerId: getLayerId(gradeId) };\r\n                break;\r\n            case 'group':\r\n                func = addGroup;\r\n                params = {\r\n                    gradeId: getGradeId(levelId), \r\n                    groupName: name, \r\n                    layerId: getLayerId(getGradeId(levelId)), \r\n                    levelId: levelId\r\n                };\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n        dispatch(func(params)).then((response) => {\r\n            setLoading(false);\r\n            if(response.success){\r\n                form.resetFields()\r\n                message.success(`ה${hierarchyNames.get(type)} נוצרה בהצלחה!`);\r\n                hideCreateHierarchy();\r\n            }\r\n            else {\r\n                message.error(response.error.response.data.error);\r\n            }\r\n        }).catch(error => {\r\n            message.error(`נפל ביצירת ה${hierarchyNames.get(type)}, הודעת שגיאה: ${error}`);\r\n        });  \r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Form {...layout} form={form} name={`הוסף ${hierarchyNames.get(type)}`} initialValues={{ remember: true }} onFinish={save} >\r\n            <Form.Item\r\n                label={` שם ${hierarchyNames.get(type)}`}\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `הכנס שם ${hierarchyNames.get(type)}!`\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\"  loading={loading}>\r\n                    הוסף\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </>\r\n)\r\n   \r\n}\r\n\r\nexport default CreateHierarchy;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\general\\CalendarFilters.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\CreateNewBook.js",["350"],"import React, { useState } from 'react';\r\nimport {setNewBook} from '../../redux/actions/book.actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport { Drawer, Form, Button, Input, Select ,message} from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst CreateNewBook = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const save = (book) => {\r\n      setLoading(true)\r\n      dispatch(setNewBook(book)).then(response => {\r\n        setLoading(false);\r\n        message.success('הספר נוסף בהצלחה!');\r\n      }).catch(error => {\r\n        message.error('יצירת הספר נכשלה');\r\n        setLoading(false);\r\n      });    \r\n    }\r\n  \r\n    return (\r\n        <>\r\n        {/* <Drawer\r\n          title=\"Create a new book\"\r\n          onClose={onClose}\r\n          visible={true}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n          footer={\r\n            <div\r\n              style={{\r\n                textAlign: 'right',\r\n              }}\r\n            >\r\n              <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n                Cancel\r\n              </Button>\r\n              <Button loading={loading}  type=\"primary\" htmlType=\"submit\" form=\"newBookForm\" key=\"submit\">\r\n                Save\r\n              </Button>\r\n            </div>\r\n          }\r\n        > */}\r\n          <Form id=\"newBookForm\" layout=\"vertical\" hideRequiredMark onFinish={save}>\r\n\r\n                <Form.Item\r\n                  name=\"barcode\"\r\n                  label=\"ברקוד\"\r\n                  rules={[{ required: true, message: 'Please enter a barcode' }]}\r\n                >\r\n                  <Input placeholder=\"Please enter a barcode\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  label=\"שם\"\r\n                  rules={[{ required: true, message: 'Please enter book name' }]}\r\n                >\r\n                  <Input placeholder=\"Please enter book name\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"writer\"\r\n                  label=\"סופר/ת\"\r\n                  rules={[{ required: true, message: 'Please enter writer name' }]}\r\n                >\r\n                  <Input placeholder=\"Please enter writer name\" />\r\n                </Form.Item>\r\n         \r\n                <Form.Item\r\n                  name=\"status\"\r\n                  label=\"סטטוס\"\r\n                  rules={[{ required: true, message: 'Please select status' }]}\r\n                >\r\n                  <Select placeholder=\"Please select status book\">\r\n                    <Option value=\"not borrowed\">לא מושאל</Option>\r\n                    <Option value=\"borrowed\">מושאל</Option>\r\n                    <Option value=\"in binding\">בתיקון</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button loading={loading} type=\"primary\" htmlType=\"submit\">\r\n                    שמור\r\n                  </Button>\r\n                </Form.Item>\r\n          </Form>\r\n        {/* </Drawer> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateNewBook;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\MenuItem.js",["351","352","353"],"import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Menu,Avatar, Badge } from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\nimport Icon from '@ant-design/icons';\r\n\r\n\r\nconst MenuItem = ({key, route, icon, children, roles, ...props}) => {\r\n    const { user } = useSelector(state => state.userReducer);\r\n    const [userRole, setUserRole] = useState(user && user.role ? user.role : 'guest');\r\n    \r\n    useEffect(() => {\r\n        setUserRole(user && user.role ? user.role : 'guest');\r\n    },[user])\r\n    \r\n    \r\n    return (\r\n        <>\r\n            {(!roles || roles.includes(userRole)) &&\r\n                <Menu.Item key={key} {...props}> \r\n                    {icon}\r\n                    {route && <Link to={route}></Link>}\r\n                    {children}\r\n                </Menu.Item>\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default MenuItem;\r\n// const MenuItem = (props) => {\r\n//     const {roles, children} = props;\r\n//     const { user } = useSelector(state => state.userReducer);\r\n//     const [userRole, setUserRole] = useState(user && user.role ? user.role : 'guest');\r\n\r\n//     debugger;\r\n//     return (!roles || roles.includes(userRole)) ? children : <></>;\r\n// }\r\n\r\n// export default MenuItem;\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\google-calendar.service.js",["354"],"import axios from 'axios';\r\n\r\nconst CALENDAR_ID = 'iw.jewish#holiday@group.v.calendar.google.com';\r\nconst API_KEY = 'AIzaSyDUzmVNt2tsB6Ltqk9vhz8r_W55W0cSsBA';\r\nconst GOOGLE_CALENDAR_URL = `https://www.googleapis.com/calendar/v3/calendars/iw.jewish%23holiday%40group.v.calendar.google.com/events?key=${API_KEY}`;\r\n\r\nconst api = axios.create({\r\n    baseURL: GOOGLE_CALENDAR_URL\r\n})\r\n\r\nexport const getEvents = () => api.get()\r\n            .then(res => {\r\n              debugger\r\n              console.log(res)\r\n            })\r\n            .catch(err => {console.log(err)});","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\BookList.js",["355","356","357"],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, message } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getBooks} from '../../redux/actions/book.actions'\r\n\r\nconst columns = [\r\n    {\r\n        title: 'ברקוד',\r\n        dataIndex: 'barcode'\r\n    },\r\n    {\r\n        title: 'שם',\r\n        dataIndex: 'name'\r\n    },\r\n    {\r\n        title: 'סופר/ת',\r\n        dataIndex: 'writer'\r\n    },\r\n    {\r\n        title: 'סטטוס',\r\n        dataIndex: 'status'\r\n    }\r\n];\r\n\r\n\r\n\r\nconst BookList = () => {\r\n\r\n    const [tableData, setTableData] = useState([]);\r\n    const [viewDrawer, setViewDrawer] = useState(false);\r\n    const { books } = useSelector(state => state.bookReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const setViewAddBook = (value) => {\r\n        setViewDrawer(value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(books == null) {\r\n            dispatch(getBooks())\r\n            .catch(error => {\r\n                console.log(error);\r\n                message.error('טעינת הספרים נכשלה')\r\n            });\r\n        }\r\n        else {\r\n             let data = books.map(book => ({...book, key: book._id}));\r\n            setTableData(data);\r\n        }\r\n    }, [books, dispatch]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Table columns={columns} dataSource={tableData} bordered />\r\n        </>\r\n    )\r\n}\r\nexport default BookList;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\CreateBorrow.js",["358"],"import React, { useEffect, useState } from 'react';\r\nimport { setNewBorrow } from '../../redux/actions/book.actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getStudents } from '../../services/user.service';\r\nimport { getAllBooks } from '../../services/book.service';\r\nimport { Popover, Form, Button, Input, message, DatePicker, AutoComplete } from 'antd';\r\nimport {\r\n    PhoneOutlined,\r\n    MailOutlined,\r\n    HomeOutlined, \r\n  } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nconst CreateBorrow = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [bookList, setBookList] = useState([]);\r\n    const [studentOptions, setStudentOptions] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getStudents()\r\n            .then(resopnse => resopnse.data)\r\n            .then(resopnse => resopnse.data)\r\n            .then(resopnse => {\r\n                setStudentList(resopnse);\r\n            });\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getAllBooks()\r\n            .then(resopnse => resopnse.data)\r\n            .then(resopnse => resopnse.data)\r\n            .then(resopnse => {\r\n                setBookList(resopnse);\r\n            });\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let options = studentList.map(student => ({\r\n            value: student._id,\r\n            label: (\r\n                <Popover placement=\"left\" content={getStudentDetails(student)} title={`${student.firstName} ${student.lastName}`} trigger=\"hover\">\r\n                    <div style={{ float: 'left', textAlign:'right', width:\"100%\"}}>\r\n                        <label>{student.firstName} {student.lastName}</label>\r\n                    </div>\r\n                </Popover>\r\n            ),\r\n        }));\r\n        setStudentOptions(options);\r\n\r\n    }, [studentList])\r\n\r\n    const getStudentDetails = (student) => {\r\n        return (\r\n            <>\r\n                <div><PhoneOutlined /> {student.cellPhone}</div>\r\n                <div><MailOutlined /> {student.email}</div>\r\n                <div><HomeOutlined /> {student.address}</div>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const save = (borrow) => {\r\n        debugger\r\n        let newBorrow = {...borrow, endDate: moment(borrow.endDate).format('YYYY/MM/DD')};\r\n        setLoading(true)\r\n        dispatch(setNewBorrow(newBorrow)).then(response => {\r\n            debugger\r\n            setLoading(false);\r\n            message.success('ההשאלה נשמרה בהצלחה');\r\n            history.push({\r\n                pathname: `/library/borrows`,\r\n            });\r\n        }).catch(error => {\r\n            message.error('שגיאה ביצירת השאלה, אנא נסה שנית');\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const getBarcode= () =>{\r\n        return bookList.filter(book => book.status === 'not borrowed').map(book => ({value: book.barcode  }))\r\n    } \r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>הוספת השאלה חדשה</h1>\r\n            <Form id=\"newBorrowForm\" layout=\"vertical\" hideRequiredMark onFinish={save}>\r\n\r\n                <Form.Item\r\n                    name=\"barcode\"\r\n                    label=\"ברקוד\"\r\n                    rules={[{ required: true, message: 'Please enter a barcode' }]}\r\n                >\r\n                     <AutoComplete\r\n                        style={{\r\n                            width: 200,\r\n                        }}\r\n                        options={getBarcode()}\r\n                        showSearch={ true }\r\n                        placeholder=\"ברקוד\"\r\n                        filterOption={(inputValue, option) =>\r\n                            option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                        }\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"studentId\"\r\n                    label=\"שם תלמיד\"\r\n                    rules={[{ required: true, message: 'Please enter user name' }]}\r\n                >\r\n                    <AutoComplete\r\n                        style={{\r\n                            width: 200,\r\n                        }}\r\n                        options={studentOptions}\r\n                        showSearch={ true }\r\n                        optionFilterProp=\"label\"\r\n                        placeholder=\"שם תלמיד\"\r\n                        filterOption={(inputValue, option) =>\r\n                            option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                        }\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item \r\n                    name=\"endDate\"\r\n                    label=\"זמן סיום השאלה\"\r\n                    rules={[{ required: true, message: 'Please enter date borrow finished' }]}\r\n                >\r\n                    <DatePicker renderExtraFooter={() => 'extra footer'}\r\n                        format=\"YYYY/MM/DD\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button loading={loading} type=\"primary\" htmlType=\"submit\">\r\n                        שמור\r\n                  </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\nexport default CreateBorrow;\r\n\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\messages\\AddMessage.js",["359"],"import React, { useEffect, useState } from \"react\";\r\nimport { PageHeader, Form, Button, Input, message} from 'antd';\r\nimport { useSelector } from \"react-redux\";\r\nimport {createMessage} from '../../services/user.service';\r\nimport { MessageOutlined } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\nconst AddMessage = (props) => {\r\n\r\n    const history = useHistory();\r\n    const {toUsers, sentToAlias = 'משתמש'} = history.location.state;\r\n    const [loading, setLoading] = useState(false);\r\n    const {user} = useSelector(state => state.userReducer);\r\n\r\n\r\n    const save = ({subject,messageContent}) => {\r\n        setLoading(true);\r\n        debugger\r\n        let newMessage = {\r\n            subject,\r\n            messageContent,\r\n            publisher: user.userId\r\n        }\r\n\r\n        createMessage(newMessage, toUsers).then(response => {\r\n            message.success('ההודעה נשלחה');\r\n            debugger\r\n            setLoading(false);\r\n            history.goBack();\r\n        }).catch(e=> {\r\n            setLoading(false);\r\n            message.error('ההודעה לא נשלחה, נסה שנית')\r\n        });\r\n\r\n    }\r\n    \r\n    const onClose = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <PageHeader\r\n            className=\"site-page-header\"\r\n            title={`שליחת הודעה ל${sentToAlias}`}\r\n            backIcon={<MessageOutlined />}\r\n            onBack={()=>null}\r\n        />\r\n        <br/>\r\n            <Form id=\"newBorrowForm\" layout=\"vertical\" onFinish={save}>\r\n\r\n            <Form.Item\r\n                name=\"subject\"\r\n                label=\"נושא\"\r\n                rules={[{ required: true, message: 'יש לציין את נושא ההודעה' }]}\r\n            >\r\n                <Input placeholder=\"נושא ההודעה\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item \r\n                name=\"messageContent\"\r\n                label=\"תוכן ההודעה\"\r\n                rules={[{ required: true, message: 'יש לציין את תוכן ההודעה' }]}\r\n            > \r\n                <TextArea rows={5} placeholder=\"תוכן ההודעה\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n                    ביטול\r\n            </Button>\r\n                <Button loading={loading} type=\"primary\" htmlType=\"submit\">\r\n                    שליחה\r\n            </Button>\r\n            </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddMessage;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ManageUsers.js",["360","361","362","363","364"],"import React, { useEffect, useState } from 'react';\r\nimport ViewUsers from './ViewUsers';\r\nimport {getAllUsers, getTeachers, getStudents} from '../../services/user.service';\r\nimport { Tabs } from 'antd';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nconst ManageUsers = () => {\r\n\r\n    const [userList, setUserList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAllUsers().then(users => {\r\n            setUserList(users.data.data);\r\n        }, [])\r\n    }, []);\r\n\r\n    const getStudents = () => {\r\n        \r\n    }\r\n\r\n    const getStaff = () => {\r\n\r\n    }\r\n\r\n    const getNewUsers = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Tabs defaultActiveKey=\"1\">\r\n            <TabPane tab=\"תלמידים\" key=\"students\">\r\n                <ViewUsers title=\"תלמידים\" userList={userList}/>\r\n            </TabPane>\r\n            <TabPane tab=\"מורים\" key=\"staff\">\r\n                <ViewUsers title=\"מורים\" userList={userList}/>\r\n            </TabPane>\r\n            <TabPane tab=\"מצטרפים חדשים\" key=\"newUsers\">\r\n                <ViewUsers title=\"מצטרפים חדשים\" userList={userList} showSetRole={true} />\r\n            </TabPane>\r\n        </Tabs>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ManageUsers;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\BorrowBookList.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchySelectTree.js",["365","366"],"import React, { useEffect, useState } from 'react';\r\nimport { TreeSelect } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getLayers} from '../../redux/actions/layer.actions';\r\n\r\n\r\nconst { SHOW_PARENT } = TreeSelect;\r\n\r\n\r\nconst HierarchySelectTree = (props) => {\r\n\r\n    const {updateHierarchySelection} = props;\r\n    const [treeData, setTreeData] = useState([]);\r\n    const {layers} = useSelector(store => store.layerReducer);\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n    const [selectedIds , setSelectedIds] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        if(layers == null){\r\n            dispatch(getLayers());\r\n        }\r\n        else {\r\n            //TODO: remove options from data-tree when there are no level under group/layer\r\n            let data = layers.map(layer => ({\r\n                title:layer.name, \r\n                value: layer.name,\r\n                key:layer._id,\r\n                children : layer.grades.map(grade => ({\r\n                    title:grade.name, \r\n                    value: grade.name,\r\n                    key:grade._id,\r\n                    children : grade.levels.map(level => ({\r\n                        title:level.name, \r\n                        value: level.name,\r\n                        key:level._id\r\n                    }))\r\n                }))\r\n            }));\r\n            setTreeData(data);\r\n        }\r\n    },[layers])\r\n\r\n    useEffect(()=>{\r\n        updateHierarchySelection(selectedIds);\r\n    }, [selectedIds])\r\n\r\n    const onChangeHandler = (values, option, data) => {\r\n        setSelectedValues(values);\r\n        setSelectedIds(data.allCheckedNodes.map(item => item.node.key));\r\n    };\r\n\r\n\r\n    const tProps = {\r\n        treeData,\r\n        value: selectedValues,\r\n        onChange: onChangeHandler,\r\n        treeCheckable: true,\r\n        showCheckedStrategy: SHOW_PARENT,\r\n        placeholder: 'בחר רמות',\r\n        style: {\r\n          width: '100%',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <TreeSelect {...tProps} />\r\n    )\r\n}\r\n\r\nexport default HierarchySelectTree;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\EditorialBoard.js",["367"],"import { message ,Card,List} from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {getAllLessns} from '../../redux/actions/lesson.actions';\r\nimport { useHistory} from 'react-router-dom';\r\nimport {getLessons} from '../../services/lesson.service';\r\n\r\n\r\nconst EditorialBoard = (props) => {\r\n\r\n    const { title } = props;\r\n    const [lessons,setLessons]=useState();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getLessons()\r\n            .then(resopnse => {\r\n                    debugger;\r\n                    setLessons(resopnse.data);\r\n            })\r\n            .catch(error=> message.error('שגיאה בהצגת השיעורים'));\r\n    }, []);\r\n\r\n    const navigate = (lesson) => {\r\n        history.push({\r\n            pathname: `/lesson/${lesson._id}`,\r\n            state: { lesson },\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <Card type=\"inner\" title={title}>\r\n                <List\r\n                    dataSource={lessons}\r\n                    renderItem={item => (\r\n                        <List.Item key={item._id} onClick={()=> navigate(item)}>\r\n                            <List.Item.Meta \r\n                                title={`${item.lessonSubject}`}\r\n                                />\r\n                        </List.Item>\r\n                    )}\r\n                >\r\n                </List>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nexport default EditorialBoard;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\LessonView.js",["368","369","370","371"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { Upload, Modal,Divider, Layout } from 'antd';\r\nimport ViewFileCopy2 from './ViewFileCopy2';\r\nimport {\r\n    LoadingOutlined,\r\n    PaperClipOutlined,\r\n    PictureTwoTone,\r\n    FilePdfTwoTone,\r\n    FileWordTwoTone,\r\n    FileExcelTwoTone,\r\n    PlusOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport '../../css/Lessons.css';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nconst fileSufIconList = [\r\n    { icon: <FilePdfTwoTone />, type: ['.pdf'] },\r\n    { icon: <FileExcelTwoTone />, type: ['.xlsx', '.xls', '.csv'] },\r\n    { icon: <FileWordTwoTone />, type: ['.doc', '.docx'] },\r\n    { icon: <PictureTwoTone />, type: ['.webp', '.svg', '.png', '.gif', '.jpg', '.jpeg', '.jfif', '.bmp', '.dpg'] },\r\n];\r\n\r\nconst LessonView = () => {\r\n\r\n    const history = useHistory();\r\n    const lesson = history.location.state.lesson;\r\n    const [taskFiles, setTaskFiles] = useState([]);\r\n    const [lessonFiles, setLessonFiles] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let filesOftasks = lesson.taskToLesson.map(file => ({\r\n            ...file,\r\n            name: file.taskName,\r\n            url: file.linkToTask,\r\n            status: 'done'\r\n        }));\r\n        setTaskFiles(filesOftasks);\r\n\r\n        let filesOfLesson = lesson.filesToLesson.map(file => ({\r\n            ...file,\r\n            name: file.fileName,\r\n            status: 'done',\r\n            url: file.linkToFile\r\n        }));\r\n        setLessonFiles(filesOfLesson);\r\n    }, [lesson])\r\n\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n    //TODO:...\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewVisible(true);\r\n    };\r\n\r\n    const handleIconRender = (file, listType) => {\r\n\r\n        let icon = file.status === 'uploading' ? <LoadingOutlined /> : <PaperClipOutlined />;\r\n\r\n        if (listType === 'picture-card' && file.status === 'uploading') {\r\n            icon = <LoadingOutlined />;\r\n        } \r\n\r\n        else {\r\n            fileSufIconList.forEach(item => {\r\n                if (item.type.includes(file.name.substr(file.name.lastIndexOf('.')))) {\r\n                    icon = item.icon;\r\n                }\r\n            });\r\n        }\r\n        return icon;\r\n    };\r\n\r\n    //TODO: student upload files\r\n\r\n    return (\r\n        <>\r\n\r\n        <Content style={{ padding: '50px 50px', textAlign:'right' }}>\r\n            <Divider orientation=\"right\">פרטי השיעור</Divider>\r\n            <label>:שם השיעור</label>\r\n            <h2>{lesson.lessonSubject}</h2>\r\n            <br/>\r\n\r\n\r\n            <Divider orientation=\"right\">קבצי השיעור</Divider>\r\n            <label>קבצים להצגה בשיעור</label>\r\n            <br/>\r\n            <br/>\r\n            <Upload\r\n                listType=\"picture-card\"\r\n                fileList={lessonFiles}\r\n                onPreview={handlePreview}\r\n                iconRender={handleIconRender}\r\n            >\r\n            </Upload>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n\r\n\r\n            <Divider orientation=\"right\">קבצי שיעורי בית</Divider>\r\n            <label>יש למלא את המשימות המצורפות ולהעלות את התשובות לבדיקה ע\"י המורה</label>\r\n            <br/>\r\n\r\n            <Upload\r\n                listType=\"picture-card\"\r\n                fileList={taskFiles}\r\n                onPreview={handlePreview}\r\n                iconRender={handleIconRender}\r\n            >\r\n            </Upload>\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n\r\n            <Divider orientation=\"right\">תשובות לשיעורי בית</Divider>\r\n            <label>צרף את התשובות לשיעורי הבית</label>\r\n            <br/>\r\n\r\n            <Upload\r\n                listType=\"picture-card\"\r\n                fileList={taskFiles}\r\n                onPreview={handlePreview}\r\n                iconRender={handleIconRender}\r\n            >\r\n            </Upload>\r\n\r\n            <br/>\r\n            <br/>\r\n\r\n        </Content>\r\n\r\n            <Modal \r\n                visible={previewVisible} \r\n                footer={null} \r\n                onCancel={handleCancel} \r\n                width='80vw'\r\n                bodyStyle={{minHeight: '250px'}} \r\n                style={{minHeight: '500px'}}\r\n            >\r\n                <ViewFileCopy2 key={Math.random()} url={previewImage}/>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default LessonView;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\messages\\ListMassage.js",["372"],"import React from 'react';\r\nimport {Card,List, Avatar} from 'antd';\r\nimport {useSelector} from 'react-redux';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport Moment from 'moment';\r\n\r\n\r\nconst ListMassage = () => {\r\n\r\n    const { user } = useSelector(state => state.userReducer);\r\n    \r\n    return (\r\n        <>\r\n            {/* <Card type=\"inner\"> */}\r\n                <List\r\n                    style={{margin: '25px'}}\r\n                    dataSource={user.messages}\r\n                    itemLayout=\"horizontal\"\r\n                    renderItem={item => (\r\n                        <List.Item key={item._id} style={{padding: '25px' , background:item.isRead? 'white': '#f6f6f6'}}>\r\n                                <List.Item.Meta\r\n                                    avatar={<Avatar icon={<MailOutlined />} />}\r\n                                    title={\r\n                                        <>\r\n                                            <label>הודעה מאת: {`${item.publisher.firstName} ${item.publisher.lastName}`}</label>\r\n                                            <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                                                <h3>{item.subject}</h3> \r\n                                                <label>{Moment(item.dateMessage).format('HH:MM DD/MM/YYYY')}</label>\r\n                                            </div>\r\n                                        </>\r\n                                    }\r\n                                    description={item.messageContent}\r\n                                    style={{width:'100%'}}\r\n                                    />\r\n                                \r\n                                    {/* <label>הודעה מאת: {`${item.publisher.firstName} ${item.publisher.lastName}`}</label>\r\n                                    <h3>{item.subject} {item.dateMessage}</h3>\r\n                                    <div>{item.messageContent}</div>\r\n                                    <div style={{fontSize:'small'}}>{item.publisher}</div> */}\r\n{/*                            \r\n                           <List.Item.Meta \r\n                                title={<div>{item.subject} {item.dateMessage}</div>}\r\n                                footer={item.publisher}\r\n                                dataSource={item.messageContent}\r\n                                style={ item.isRead ? {background:'gray'} : {background:'white'}}\r\n                                /> */}\r\n                        </List.Item>\r\n                    )}\r\n                >\r\n                </List>\r\n            {/* </Card> */}\r\n        </>\r\n    )\r\n}\r\nexport default ListMassage;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\BookStatistic.js",["373","374","375","376","377"],"// import React, { useState } from 'react';\r\n// import ReactApexCharts from 'react-apexcharts'\r\nimport React, { Component, useEffect, useState } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {message} from 'antd';\r\nimport _ from 'lodash';\r\nimport {getAllBorrows} from '../../services/book.service';\r\nimport {getBooks} from '../../redux/actions/book.actions'\r\n\r\n\r\nconst BookStatistic = () => {\r\n\r\n    const [options, setOptions] = useState({\r\n        chart: {\r\n            id: \"basic-bar\"\r\n        },\r\n        xaxis: {\r\n            categories: []\r\n        }\r\n    });\r\n\r\n    const [series, setSeries] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        getAllBorrows()\r\n            .then(response => response.data)\r\n            .then(response => response.data)\r\n            .then(borrows => {\r\n                calcStatistics(borrows);\r\n            }).catch(error => message.error('שגיאה'));\r\n\r\n    }, []);\r\n\r\n\r\n    const calcStatistics = (borrows) => {\r\n\r\n        let borrowsGroupedByBook = _.groupBy(borrows, 'bookId');\r\n        let sortedResult = Object.values(borrowsGroupedByBook).sort((a,b) => b.length-a.length);\r\n        let chartData = new Map(sortedResult.map(arr => [arr[0].bookName, arr.length]))\r\n\r\n        let newOptions = {...options, xaxis:{...options.xaxis, categories: [...chartData.keys()]}}\r\n\r\n        setOptions(newOptions);\r\n\r\n        let newSeries = [{data:[...chartData.values()] }]\r\n        setSeries(newSeries)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <h1>הספרים המושאלים בכמות הגבוהה ביותר</h1>\r\n              <Chart\r\n                options={options}\r\n                series={series}\r\n                type=\"bar\"\r\n                width=\"700\"\r\n              />\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default BookStatistic;\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\Attendance.js",["378","379"],"import React, { useState } from 'react';\r\nimport { useDispatch} from 'react-redux';\r\nimport { message, Checkbox, Form, Input, Button } from 'antd';\r\nimport {setAttendance} from '../../services/user.service'\r\nimport moment from 'moment';\r\nimport '../../css/Attendance.css';\r\n\r\n \r\nconst Attendance = (props) => {\r\n\r\n    const {studentsInGroup} = props;\r\n    const [loading, setLoading] = useState(false);\r\n    const [editable, setEditable] = useState(true);\r\n\r\n    const save=(values)=>{\r\n        debugger\r\n        setLoading(true);\r\n        setEditable(false);\r\n        let attendence =  Object.entries(values).map(item => ({studentId: item[0], present: !!item[1]}));\r\n\r\n        setAttendance(attendence).then(response => {\r\n            message.success('עודכן בהצלחה!')\r\n        })\r\n        .catch(error => {\r\n            setEditable(true);\r\n            message.error('שגיאה, נסה שנית');\r\n        })\r\n    }\r\n     return (\r\n\r\n         <>\r\n         <h3>{`סימון נוכחות לתאריך ${moment(new Date()).format('DD/MM/YYYY')}`}</h3>\r\n         <br/>\r\n         <Form\r\n            onFinish={save}\r\n        >\r\n            {studentsInGroup.map(student => \r\n                <Form.Item key={student._id} name={student._id} valuePropName=\"checked\">\r\n                  <Checkbox disabled={!editable}>{`${student.firstName} ${student.lastName}`}</Checkbox>\r\n                </Form.Item>\r\n            )}\r\n            {editable && \r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                    שמירה\r\n                    </Button>\r\n                </Form.Item>\r\n            }\r\n        </Form>\r\n             \r\n         </>\r\n     )\r\n }\r\nexport default Attendance;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\LessonAndTasks.js",["380"],"import React from 'react';\r\nimport EditorialBoard from './EditorialBoard';\r\nimport CreateLesson from './CreateLesson';\r\nimport { Menu,Layout } from 'antd';\r\nimport { DiffOutlined,SnippetsOutlined } from '@ant-design/icons';\r\nimport { Route, Link} from \"react-router-dom\";\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n\r\nconst rootSubmenuKeys = ['createLessons','EditorialBoard'];\r\n\r\nconst LessonAndTasks = () => {\r\n    \r\n    const [openKeys, setOpenKeys] = React.useState(['createLessons','EditorialBoard']);\r\n\r\n    const onOpenChange = keys => {\r\n      const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\r\n      if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n        setOpenKeys(keys);\r\n      } else {\r\n        setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\r\n      }\r\n    };\r\n\r\n    return (\r\n        <>\r\n              <Layout >\r\n                <Sider width={200} theme=\"light\" >\r\n                    <Menu mode=\"inline\" style={{float: 'right'}} openKeys={openKeys} onOpenChange={onOpenChange}>\r\n                            <Menu.Item key=\"createLessons\" icon={<DiffOutlined />}>\r\n                                  <Link to='/lessons/newlesson'>הוספת שיעור חדש</Link>\r\n                           </Menu.Item>\r\n                           <Menu.Item key=\"EditorialBoard\" icon={<SnippetsOutlined />}>\r\n                                  <Link to='/lessons/lessons'>מערכי שיעור</Link>\r\n                           </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Content style={{float: 'right', background: 'transparent', padding: '30px'}}>\r\n                        <Route path='/lessons/newlesson' component={CreateLesson} exact />\r\n                        <Route path='/lessons/lessons' component={EditorialBoard} exact />\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default LessonAndTasks;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\AttedanceStatistic.js",["381"],{"ruleId":"382","severity":1,"message":"383","line":6,"column":10,"nodeType":"384","messageId":"385","endLine":6,"endColumn":21},{"ruleId":"382","severity":1,"message":"386","line":7,"column":15,"nodeType":"384","messageId":"385","endLine":7,"endColumn":24},{"ruleId":"387","replacedBy":"388"},{"ruleId":"389","replacedBy":"390"},{"ruleId":"382","severity":1,"message":"391","line":7,"column":48,"nodeType":"384","messageId":"385","endLine":7,"endColumn":65},{"ruleId":"382","severity":1,"message":"392","line":8,"column":50,"nodeType":"384","messageId":"385","endLine":8,"endColumn":54},{"ruleId":"382","severity":1,"message":"393","line":15,"column":18,"nodeType":"384","messageId":"385","endLine":15,"endColumn":22},{"ruleId":"382","severity":1,"message":"394","line":15,"column":24,"nodeType":"384","messageId":"385","endLine":15,"endColumn":34},{"ruleId":"382","severity":1,"message":"395","line":21,"column":9,"nodeType":"384","messageId":"385","endLine":21,"endColumn":15},{"ruleId":"382","severity":1,"message":"396","line":21,"column":17,"nodeType":"384","messageId":"385","endLine":21,"endColumn":24},{"ruleId":"382","severity":1,"message":"397","line":25,"column":7,"nodeType":"384","messageId":"385","endLine":25,"endColumn":23},{"ruleId":"382","severity":1,"message":"398","line":3,"column":10,"nodeType":"384","messageId":"385","endLine":3,"endColumn":26},{"ruleId":"382","severity":1,"message":"399","line":3,"column":28,"nodeType":"384","messageId":"385","endLine":3,"endColumn":40},{"ruleId":"382","severity":1,"message":"400","line":3,"column":42,"nodeType":"384","messageId":"385","endLine":3,"endColumn":57},{"ruleId":"382","severity":1,"message":"395","line":14,"column":9,"nodeType":"384","messageId":"385","endLine":14,"endColumn":15},{"ruleId":"382","severity":1,"message":"401","line":1,"column":17,"nodeType":"384","messageId":"385","endLine":1,"endColumn":25},{"ruleId":"382","severity":1,"message":"402","line":2,"column":20,"nodeType":"384","messageId":"385","endLine":2,"endColumn":26},{"ruleId":"382","severity":1,"message":"403","line":22,"column":9,"nodeType":"384","messageId":"385","endLine":22,"endColumn":27},{"ruleId":"404","severity":1,"message":"405","line":47,"column":8,"nodeType":"406","endLine":47,"endColumn":22,"suggestions":"407"},{"ruleId":"382","severity":1,"message":"408","line":72,"column":17,"nodeType":"384","messageId":"385","endLine":72,"endColumn":22},{"ruleId":"382","severity":1,"message":"409","line":72,"column":24,"nodeType":"384","messageId":"385","endLine":72,"endColumn":27},{"ruleId":"382","severity":1,"message":"410","line":6,"column":8,"nodeType":"384","messageId":"385","endLine":6,"endColumn":26},{"ruleId":"382","severity":1,"message":"411","line":19,"column":19,"nodeType":"384","messageId":"385","endLine":19,"endColumn":26},{"ruleId":"382","severity":1,"message":"412","line":19,"column":28,"nodeType":"384","messageId":"385","endLine":19,"endColumn":35},{"ruleId":"382","severity":1,"message":"413","line":2,"column":17,"nodeType":"384","messageId":"385","endLine":2,"endColumn":24},{"ruleId":"382","severity":1,"message":"414","line":2,"column":47,"nodeType":"384","messageId":"385","endLine":2,"endColumn":53},{"ruleId":"382","severity":1,"message":"415","line":10,"column":10,"nodeType":"384","messageId":"385","endLine":10,"endColumn":22},{"ruleId":"382","severity":1,"message":"416","line":11,"column":10,"nodeType":"384","messageId":"385","endLine":11,"endColumn":23},{"ruleId":"382","severity":1,"message":"417","line":11,"column":25,"nodeType":"384","messageId":"385","endLine":11,"endColumn":39},{"ruleId":"382","severity":1,"message":"418","line":13,"column":8,"nodeType":"384","messageId":"385","endLine":13,"endColumn":34},{"ruleId":"382","severity":1,"message":"419","line":15,"column":8,"nodeType":"384","messageId":"385","endLine":15,"endColumn":16},{"ruleId":"382","severity":1,"message":"420","line":16,"column":8,"nodeType":"384","messageId":"385","endLine":16,"endColumn":20},{"ruleId":"382","severity":1,"message":"421","line":17,"column":8,"nodeType":"384","messageId":"385","endLine":17,"endColumn":21},{"ruleId":"382","severity":1,"message":"422","line":19,"column":9,"nodeType":"384","messageId":"385","endLine":19,"endColumn":20},{"ruleId":"382","severity":1,"message":"423","line":24,"column":7,"nodeType":"384","messageId":"385","endLine":24,"endColumn":12},{"ruleId":"382","severity":1,"message":"424","line":41,"column":11,"nodeType":"384","messageId":"385","endLine":41,"endColumn":19},{"ruleId":"382","severity":1,"message":"425","line":2,"column":37,"nodeType":"384","messageId":"385","endLine":2,"endColumn":41},{"ruleId":"382","severity":1,"message":"426","line":2,"column":43,"nodeType":"384","messageId":"385","endLine":2,"endColumn":49},{"ruleId":"382","severity":1,"message":"427","line":2,"column":67,"nodeType":"384","messageId":"385","endLine":2,"endColumn":71},{"ruleId":"404","severity":1,"message":"428","line":37,"column":8,"nodeType":"406","endLine":37,"endColumn":15,"suggestions":"429"},{"ruleId":"404","severity":1,"message":"430","line":55,"column":8,"nodeType":"406","endLine":55,"endColumn":16,"suggestions":"431"},{"ruleId":"432","severity":1,"message":"433","line":38,"column":9,"nodeType":"434","messageId":"435","endLine":39,"endColumn":26},{"ruleId":"382","severity":1,"message":"399","line":10,"column":5,"nodeType":"384","messageId":"385","endLine":10,"endColumn":17},{"ruleId":"382","severity":1,"message":"398","line":11,"column":5,"nodeType":"384","messageId":"385","endLine":11,"endColumn":21},{"ruleId":"382","severity":1,"message":"400","line":12,"column":5,"nodeType":"384","messageId":"385","endLine":12,"endColumn":20},{"ruleId":"382","severity":1,"message":"436","line":19,"column":5,"nodeType":"384","messageId":"385","endLine":19,"endColumn":20},{"ruleId":"382","severity":1,"message":"437","line":27,"column":7,"nodeType":"384","messageId":"385","endLine":27,"endColumn":22},{"ruleId":"438","severity":1,"message":"439","line":28,"column":11,"nodeType":"440","messageId":"441","endLine":28,"endColumn":70},{"ruleId":"438","severity":1,"message":"439","line":29,"column":18,"nodeType":"440","messageId":"441","endLine":29,"endColumn":69},{"ruleId":"438","severity":1,"message":"439","line":30,"column":16,"nodeType":"440","messageId":"441","endLine":30,"endColumn":46},{"ruleId":"438","severity":1,"message":"439","line":31,"column":20,"nodeType":"440","messageId":"441","endLine":31,"endColumn":71},{"ruleId":"438","severity":1,"message":"439","line":33,"column":18,"nodeType":"440","messageId":"441","endLine":33,"endColumn":58},{"ruleId":"438","severity":1,"message":"439","line":34,"column":17,"nodeType":"440","messageId":"441","endLine":34,"endColumn":57},{"ruleId":"438","severity":1,"message":"439","line":35,"column":19,"nodeType":"440","messageId":"441","endLine":35,"endColumn":70},{"ruleId":"438","severity":1,"message":"439","line":36,"column":16,"nodeType":"440","messageId":"441","endLine":36,"endColumn":56},{"ruleId":"438","severity":1,"message":"439","line":37,"column":16,"nodeType":"440","messageId":"441","endLine":37,"endColumn":56},{"ruleId":"438","severity":1,"message":"439","line":38,"column":16,"nodeType":"440","messageId":"441","endLine":38,"endColumn":56},{"ruleId":"438","severity":1,"message":"439","line":39,"column":27,"nodeType":"440","messageId":"441","endLine":39,"endColumn":78},{"ruleId":"438","severity":1,"message":"439","line":40,"column":27,"nodeType":"440","messageId":"441","endLine":40,"endColumn":78},{"ruleId":"382","severity":1,"message":"442","line":43,"column":7,"nodeType":"384","messageId":"385","endLine":43,"endColumn":18},{"ruleId":"382","severity":1,"message":"443","line":61,"column":12,"nodeType":"384","messageId":"385","endLine":61,"endColumn":20},{"ruleId":"382","severity":1,"message":"444","line":61,"column":22,"nodeType":"384","messageId":"385","endLine":61,"endColumn":33},{"ruleId":"382","severity":1,"message":"445","line":3,"column":16,"nodeType":"384","messageId":"385","endLine":3,"endColumn":21},{"ruleId":"382","severity":1,"message":"446","line":3,"column":36,"nodeType":"384","messageId":"385","endLine":3,"endColumn":41},{"ruleId":"382","severity":1,"message":"447","line":7,"column":9,"nodeType":"384","messageId":"385","endLine":7,"endColumn":25},{"ruleId":"382","severity":1,"message":"448","line":1,"column":16,"nodeType":"384","messageId":"385","endLine":1,"endColumn":22},{"ruleId":"382","severity":1,"message":"449","line":1,"column":24,"nodeType":"384","messageId":"385","endLine":1,"endColumn":33},{"ruleId":"382","severity":1,"message":"401","line":1,"column":35,"nodeType":"384","messageId":"385","endLine":1,"endColumn":43},{"ruleId":"382","severity":1,"message":"450","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":17},{"ruleId":"382","severity":1,"message":"451","line":5,"column":17,"nodeType":"384","messageId":"385","endLine":5,"endColumn":23},{"ruleId":"382","severity":1,"message":"452","line":5,"column":25,"nodeType":"384","messageId":"385","endLine":5,"endColumn":31},{"ruleId":"382","severity":1,"message":"453","line":13,"column":12,"nodeType":"384","messageId":"385","endLine":13,"endColumn":19},{"ruleId":"382","severity":1,"message":"454","line":13,"column":21,"nodeType":"384","messageId":"385","endLine":13,"endColumn":31},{"ruleId":"382","severity":1,"message":"455","line":14,"column":21,"nodeType":"384","messageId":"385","endLine":14,"endColumn":31},{"ruleId":"382","severity":1,"message":"451","line":2,"column":18,"nodeType":"384","messageId":"385","endLine":2,"endColumn":24},{"ruleId":"382","severity":1,"message":"417","line":3,"column":25,"nodeType":"384","messageId":"385","endLine":3,"endColumn":39},{"ruleId":"382","severity":1,"message":"456","line":19,"column":12,"nodeType":"384","messageId":"385","endLine":19,"endColumn":28},{"ruleId":"382","severity":1,"message":"457","line":19,"column":30,"nodeType":"384","messageId":"385","endLine":19,"endColumn":49},{"ruleId":"382","severity":1,"message":"458","line":61,"column":11,"nodeType":"384","messageId":"385","endLine":61,"endColumn":23},{"ruleId":"382","severity":1,"message":"459","line":1,"column":10,"nodeType":"384","messageId":"385","endLine":1,"endColumn":21},{"ruleId":"382","severity":1,"message":"460","line":2,"column":48,"nodeType":"384","messageId":"385","endLine":2,"endColumn":58},{"ruleId":"382","severity":1,"message":"461","line":2,"column":68,"nodeType":"384","messageId":"385","endLine":2,"endColumn":76},{"ruleId":"382","severity":1,"message":"462","line":13,"column":12,"nodeType":"384","messageId":"385","endLine":13,"endColumn":21},{"ruleId":"382","severity":1,"message":"463","line":18,"column":11,"nodeType":"384","messageId":"385","endLine":18,"endColumn":17},{"ruleId":"382","severity":1,"message":"464","line":48,"column":11,"nodeType":"384","messageId":"385","endLine":48,"endColumn":34},{"ruleId":"382","severity":1,"message":"459","line":3,"column":10,"nodeType":"384","messageId":"385","endLine":3,"endColumn":21},{"ruleId":"382","severity":1,"message":"461","line":5,"column":31,"nodeType":"384","messageId":"385","endLine":5,"endColumn":39},{"ruleId":"382","severity":1,"message":"465","line":5,"column":41,"nodeType":"384","messageId":"385","endLine":5,"endColumn":46},{"ruleId":"382","severity":1,"message":"401","line":1,"column":17,"nodeType":"384","messageId":"385","endLine":1,"endColumn":25},{"ruleId":"382","severity":1,"message":"461","line":5,"column":31,"nodeType":"384","messageId":"385","endLine":5,"endColumn":39},{"ruleId":"382","severity":1,"message":"466","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":14},{"ruleId":"382","severity":1,"message":"413","line":2,"column":32,"nodeType":"384","messageId":"385","endLine":2,"endColumn":39},{"ruleId":"404","severity":1,"message":"467","line":16,"column":8,"nodeType":"406","endLine":16,"endColumn":17,"suggestions":"468"},{"ruleId":"382","severity":1,"message":"449","line":1,"column":27,"nodeType":"384","messageId":"385","endLine":1,"endColumn":36},{"ruleId":"382","severity":1,"message":"426","line":4,"column":10,"nodeType":"384","messageId":"385","endLine":4,"endColumn":16},{"ruleId":"382","severity":1,"message":"469","line":3,"column":15,"nodeType":"384","messageId":"385","endLine":3,"endColumn":21},{"ruleId":"382","severity":1,"message":"470","line":3,"column":23,"nodeType":"384","messageId":"385","endLine":3,"endColumn":28},{"ruleId":"382","severity":1,"message":"471","line":5,"column":8,"nodeType":"384","messageId":"385","endLine":5,"endColumn":12},{"ruleId":"382","severity":1,"message":"472","line":3,"column":7,"nodeType":"384","messageId":"385","endLine":3,"endColumn":18},{"ruleId":"382","severity":1,"message":"451","line":2,"column":17,"nodeType":"384","messageId":"385","endLine":2,"endColumn":23},{"ruleId":"382","severity":1,"message":"473","line":30,"column":12,"nodeType":"384","messageId":"385","endLine":30,"endColumn":22},{"ruleId":"382","severity":1,"message":"474","line":34,"column":11,"nodeType":"384","messageId":"385","endLine":34,"endColumn":25},{"ruleId":"382","severity":1,"message":"445","line":6,"column":33,"nodeType":"384","messageId":"385","endLine":6,"endColumn":38},{"ruleId":"382","severity":1,"message":"449","line":1,"column":17,"nodeType":"384","messageId":"385","endLine":1,"endColumn":26},{"ruleId":"382","severity":1,"message":"475","line":3,"column":22,"nodeType":"384","messageId":"385","endLine":3,"endColumn":33},{"ruleId":"382","severity":1,"message":"476","line":3,"column":35,"nodeType":"384","messageId":"385","endLine":3,"endColumn":46},{"ruleId":"382","severity":1,"message":"477","line":19,"column":11,"nodeType":"384","messageId":"385","endLine":19,"endColumn":22},{"ruleId":"382","severity":1,"message":"478","line":23,"column":11,"nodeType":"384","messageId":"385","endLine":23,"endColumn":19},{"ruleId":"382","severity":1,"message":"479","line":27,"column":11,"nodeType":"384","messageId":"385","endLine":27,"endColumn":22},{"ruleId":"404","severity":1,"message":"480","line":43,"column":7,"nodeType":"406","endLine":43,"endColumn":15,"suggestions":"481"},{"ruleId":"404","severity":1,"message":"482","line":47,"column":8,"nodeType":"406","endLine":47,"endColumn":21,"suggestions":"483"},{"ruleId":"382","severity":1,"message":"484","line":3,"column":9,"nodeType":"384","messageId":"385","endLine":3,"endColumn":21},{"ruleId":"382","severity":1,"message":"485","line":12,"column":5,"nodeType":"384","messageId":"385","endLine":12,"endColumn":17},{"ruleId":"382","severity":1,"message":"395","line":17,"column":9,"nodeType":"384","messageId":"385","endLine":17,"endColumn":15},{"ruleId":"382","severity":1,"message":"486","line":17,"column":26,"nodeType":"384","messageId":"385","endLine":17,"endColumn":32},{"ruleId":"382","severity":1,"message":"487","line":93,"column":11,"nodeType":"384","messageId":"385","endLine":93,"endColumn":29},{"ruleId":"382","severity":1,"message":"427","line":2,"column":9,"nodeType":"384","messageId":"385","endLine":2,"endColumn":13},{"ruleId":"382","severity":1,"message":"488","line":3,"column":17,"nodeType":"384","messageId":"385","endLine":3,"endColumn":26},{"ruleId":"382","severity":1,"message":"489","line":5,"column":10,"nodeType":"384","messageId":"385","endLine":5,"endColumn":21},{"ruleId":"382","severity":1,"message":"459","line":5,"column":23,"nodeType":"384","messageId":"385","endLine":5,"endColumn":34},{"ruleId":"382","severity":1,"message":"490","line":9,"column":9,"nodeType":"384","messageId":"385","endLine":9,"endColumn":17},{"ruleId":"404","severity":1,"message":"491","line":34,"column":8,"nodeType":"406","endLine":34,"endColumn":10,"suggestions":"492"},{"ruleId":"382","severity":1,"message":"489","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":21},{"ruleId":"382","severity":1,"message":"445","line":3,"column":35,"nodeType":"384","messageId":"385","endLine":3,"endColumn":40},{"ruleId":"382","severity":1,"message":"395","line":9,"column":9,"nodeType":"384","messageId":"385","endLine":9,"endColumn":15},{"ruleId":"404","severity":1,"message":"491","line":40,"column":8,"nodeType":"406","endLine":40,"endColumn":10,"suggestions":"493"},"no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","'persistor' is defined but never used.","no-native-reassign",["494"],"no-negated-in-lhs",["495"],"'AuthorizedSection' is defined but never used.","'Link' is defined but never used.","'Menu' is defined but never used.","'Breadcrumb' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'persistedReducer' is assigned a value but never used.","'AppstoreOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'useState' is defined but never used.","'Select' is defined but never used.","'tailFormItemLayout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLessonsEvents'. Either include it or remove the dependency array.","ArrayExpression",["496"],"'start' is assigned a value but never used.","'end' is assigned a value but never used.","'AttedanceStatistic' is defined but never used.","'layerId' is assigned a value but never used.","'gradeId' is assigned a value but never used.","'Divider' is defined but never used.","'Upload' is defined but never used.","'createLesson' is defined but never used.","'InboxOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'UploadImageToS3WithReactS3' is defined but never used.","'ViewFile' is defined but never used.","'ViewFileCopy' is defined but never used.","'ViewFileCopy2' is defined but never used.","'SHOW_PARENT' is assigned a value but never used.","'steps' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Tabs' is defined but never used.","'Drawer' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'initStudentList' and 'initTeacherList'. Either include them or remove the dependency array.",["497"],"React Hook useEffect has a missing dependency: 'history.location.state.hierarchyItem._id'. Either include it or remove the dependency array.",["498"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'MessageOutlined' is defined but never used.","'pathPermissions' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'navBarItems' is assigned a value but never used.","'userRole' is assigned a value but never used.","'setUserRole' is assigned a value but never used.","'Input' is defined but never used.","'Radio' is defined but never used.","'updateAttendance' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'connect' is defined but never used.","'Button' is defined but never used.","'Layout' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'selectedFileList' is assigned a value but never used.","'setSelectedFileList' is assigned a value but never used.","'uploadButton' is assigned a value but never used.","'useSelector' is defined but never used.","'TimePicker' is defined but never used.","'Checkbox' is defined but never used.","'startDate' is assigned a value but never used.","'format' is assigned a value but never used.","'handleSatartDateChanged' is assigned a value but never used.","'Alert' is defined but never used.","'List' is defined but never used.","React Hook useEffect has a missing dependency: 'initLessons'. Either include it or remove the dependency array.",["499"],"'Avatar' is defined but never used.","'Badge' is defined but never used.","'Icon' is defined but never used.","'CALENDAR_ID' is assigned a value but never used.","'viewDrawer' is assigned a value but never used.","'setViewAddBook' is assigned a value but never used.","'getTeachers' is defined but never used.","'getStudents' is defined but never used.","'getStudents' is assigned a value but never used.","'getStaff' is assigned a value but never used.","'getNewUsers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["500"],"React Hook useEffect has a missing dependency: 'updateHierarchySelection'. Either include it or remove the dependency array.",["501"],"'getAllLessns' is defined but never used.","'PlusOutlined' is defined but never used.","'Footer' is assigned a value but never used.","'preventDownloading' is assigned a value but never used.","'Component' is defined but never used.","'useDispatch' is defined but never used.","'getBooks' is defined but never used.","React Hook useEffect has a missing dependency: 'calcStatistics'. Either include it or remove the dependency array.",["502"],["503"],"no-global-assign","no-unsafe-negation",{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"516","fix":"518"},"Update the dependencies array to be: [filterValues, getLessonsEvents]",{"range":"519","text":"520"},"Update the dependencies array to be: [group, initStudentList, initTeacherList]",{"range":"521","text":"522"},"Update the dependencies array to be: [history.location.state.hierarchyItem._id, layers]",{"range":"523","text":"524"},"Update the dependencies array to be: [initLessons, lessons]",{"range":"525","text":"526"},"Update the dependencies array to be: [dispatch, layers]",{"range":"527","text":"528"},"Update the dependencies array to be: [selectedIds, updateHierarchySelection]",{"range":"529","text":"530"},"Update the dependencies array to be: [calcStatistics]",{"range":"531","text":"532"},{"range":"533","text":"532"},[1566,1580],"[filterValues, getLessonsEvents]",[1412,1419],"[group, initStudentList, initTeacherList]",[2043,2051],"[history.location.state.hierarchyItem._id, layers]",[458,467],"[initLessons, lessons]",[1454,1462],"[dispatch, layers]",[1543,1556],"[selectedIds, updateHierarchySelection]",[971,973],"[calcStatistics]",[1068,1070]]