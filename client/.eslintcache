[{"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js":"1","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js":"2","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js":"3","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js":"4","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js":"5","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\Library.js":"6","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\NewPassword.js":"7","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js":"8","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\general\\CalendarView.js":"9","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchyListView.js":"10","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js":"11","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\ViewGroupsDetails.js":"12","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AffiliationToGroup.js":"13","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js":"14","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js":"15","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\book.reducer.js":"16","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\layer.reducer.js":"17","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\NavBar.js":"18","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\SetUserRole.js":"19","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\GroupDetails.js":"20","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\ViewFileCopy2.js":"21","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\ViewFileCopy.js":"22","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\hooks\\stringToColor.js":"23","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js":"24","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\ViewFile.js":"25","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadFiles.js":"26","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\layer.actions.js":"27","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\book.actions.js":"28","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js":"29","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadImageToS3WithReactS3.js":"30","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AddLessonToGroup.js":"31","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\book.service.js":"32","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\layer.service.js":"33","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js":"34","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js":"35","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\LessonsInGroup.js":"36","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js":"37","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js":"38","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\CreateHierarchy.js":"39","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\general\\CalendarFilters.js":"40","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\CreateNewBook.js":"41","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\MenuItem.js":"42","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\google-calendar.service.js":"43","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\BookList.js":"44"},{"size":596,"mtime":1619294900322,"results":"45","hashOfConfig":"46"},{"size":5272,"mtime":1619035477315,"results":"47","hashOfConfig":"46"},{"size":917,"mtime":1618082422443,"results":"48","hashOfConfig":"46"},{"size":3132,"mtime":1618844068760,"results":"49","hashOfConfig":"46"},{"size":700,"mtime":1614450758516,"results":"50","hashOfConfig":"46"},{"size":2990,"mtime":1619038823993,"results":"51","hashOfConfig":"46"},{"size":2101,"mtime":1614713941770,"results":"52","hashOfConfig":"46"},{"size":390,"mtime":1610830596948,"results":"53","hashOfConfig":"46"},{"size":5467,"mtime":1619028771812,"results":"54","hashOfConfig":"46"},{"size":4189,"mtime":1618080248864,"results":"55","hashOfConfig":"46"},{"size":7838,"mtime":1618501136695,"results":"56","hashOfConfig":"46"},{"size":504,"mtime":1614799631630,"results":"57","hashOfConfig":"46"},{"size":10183,"mtime":1617606028374,"results":"58","hashOfConfig":"46"},{"size":2791,"mtime":1619037678514,"results":"59","hashOfConfig":"46"},{"size":575,"mtime":1610234410977,"results":"60","hashOfConfig":"46"},{"size":498,"mtime":1618501136727,"results":"61","hashOfConfig":"46"},{"size":1219,"mtime":1617728815958,"results":"62","hashOfConfig":"46"},{"size":5215,"mtime":1619039340579,"results":"63","hashOfConfig":"46"},{"size":2186,"mtime":1618844143833,"results":"64","hashOfConfig":"46"},{"size":1898,"mtime":1617651045491,"results":"65","hashOfConfig":"46"},{"size":849,"mtime":1618501136706,"results":"66","hashOfConfig":"46"},{"size":1551,"mtime":1618501136704,"results":"67","hashOfConfig":"46"},{"size":502,"mtime":1619037516020,"results":"68","hashOfConfig":"46"},{"size":1847,"mtime":1617557509874,"results":"69","hashOfConfig":"46"},{"size":1316,"mtime":1618501136703,"results":"70","hashOfConfig":"46"},{"size":2752,"mtime":1618501136701,"results":"71","hashOfConfig":"46"},{"size":3435,"mtime":1615120178062,"results":"72","hashOfConfig":"46"},{"size":910,"mtime":1618084750382,"results":"73","hashOfConfig":"46"},{"size":1056,"mtime":1617731164544,"results":"74","hashOfConfig":"46"},{"size":971,"mtime":1617834267533,"results":"75","hashOfConfig":"46"},{"size":5226,"mtime":1618501136670,"results":"76","hashOfConfig":"46"},{"size":385,"mtime":1618081626084,"results":"77","hashOfConfig":"46"},{"size":1063,"mtime":1618856313371,"results":"78","hashOfConfig":"46"},{"size":3242,"mtime":1617731315728,"results":"79","hashOfConfig":"46"},{"size":2932,"mtime":1618501136712,"results":"80","hashOfConfig":"46"},{"size":2435,"mtime":1618501136677,"results":"81","hashOfConfig":"46"},{"size":335,"mtime":1610828754796,"results":"82","hashOfConfig":"46"},{"size":542,"mtime":1617729359590,"results":"83","hashOfConfig":"46"},{"size":3762,"mtime":1617728928207,"results":"84","hashOfConfig":"46"},{"size":1915,"mtime":1618957038091,"results":"85","hashOfConfig":"46"},{"size":3395,"mtime":1619038234668,"results":"86","hashOfConfig":"46"},{"size":1271,"mtime":1618844143822,"results":"87","hashOfConfig":"46"},{"size":571,"mtime":1619029189472,"results":"88","hashOfConfig":"46"},{"size":1691,"mtime":1619038603276,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12s4mj8",{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"95"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"95"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"95"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"95"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"95"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"95"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"95"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"95"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"95"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"95"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"95"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"95"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"95"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"95"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"95"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"95"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"95"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"95"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"95"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"95"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"95"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"95"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"95"},"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js",["205","206","207","208","209"],"import React, { useEffect, useState } from 'react';\r\nimport Library from './components/library/Library';\r\nimport Home from './pages/Home';\r\nimport ViewUsers from './components/users/ViewUsers';\r\nimport HierarchyListView from './components/layers/HierarchyListView';\r\nimport api from './services/user.service';\r\nimport { useSelector } from 'react-redux';\r\nimport { PermissionsProvider, AuthorizedRoute, AuthorizedSection } from '@tshio/react-router-permissions';\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport UserDetails from './components/users/UserDetails';\r\nimport CreateLesson from './components/lessonsAndTasks/CreateLesson';\r\nimport NewPassword from './components/users/NewPassword';\r\nimport ViewGroupsDetails from './components/layers/ViewGroupsDetails';\r\nimport AffiliationToGroup from './components/groups/AffiliationToGroup';\r\nimport CalendarView from './components/general/CalendarView';\r\nimport NavBar from './components/home/NavBar';\r\nimport BookList from './components/library/BookList';\r\n\r\nconst permissionsStrategy = (currentRole, requirement) => {\r\n    return requirement.find(role => role === currentRole);\r\n};\r\n\r\nfunction App (props) {\r\n\r\n    const { user } = useSelector(state => state.userReducer);\r\n    const [userList, setUserList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        api.getAllUsers().then(users => {\r\n            setUserList(users.data.data);\r\n        }, [])\r\n    }, []);\r\n\r\n    // const getRoles =() =>{\r\n    //     return user ? [user.role] : 'guest';\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <PermissionsProvider\r\n                permissions={user ? user.role : 'guest'}\r\n                authorizationStrategy={permissionsStrategy}\r\n            >\r\n                <Router>\r\n                    <NavBar/>\r\n\r\n                    <Switch>\r\n                        <AuthorizedRoute path=\"/lessons/add\"  requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <CreateLesson /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/library\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <Library />: <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/users/:id\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <UserDetails /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/users\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <ViewUsers title=\"User List\" userList={userList} showSetRole={true} />: <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/layers\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"layer\" nextHierarchy=\"grade\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/grade\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"grade\" nextHierarchy=\"level\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/level\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"level\" nextHierarchy=\"group\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/group\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"group\" nextHierarchy=\"viewGroupDetails\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        {/* <AuthorizedRoute path=\"/viewGroupDetails\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <ViewGroupsDetails/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute> */}\r\n                        <AuthorizedRoute path=\"/viewGroupDetails\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <AffiliationToGroup mode=\"read\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        {/* <AuthorizedRoute path=\"/newPassword\" >\r\n                            {({ isAuthorized }) => (isAuthorized ? <NewPassword/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute> */}\r\n                        <AuthorizedRoute path=\"/calendar\"  requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <CalendarView/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <Route path=\"/\" component={Home}>\r\n                            <Home />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </PermissionsProvider>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n",["210","211"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\Library.js",["212","213","214","215"],"import React from 'react';\r\nimport { Menu,Layout } from 'antd';\r\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport '../../css/Library.css';\r\nimport { AlignRightOutlined, ReadOutlined, BarChartOutlined } from '@ant-design/icons';\r\nimport BookList from './BookList';\r\nimport CreateNewBook from './CreateNewBook';\r\nimport { Route, Link} from \"react-router-dom\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n\r\nconst rootSubmenuKeys = ['borrows', 'books', 'statistics'];\r\n\r\n\r\nconst Library = () => {\r\n\r\n    const [openKeys, setOpenKeys] = React.useState(['borrows', 'books', 'statistics']);\r\n\r\n    const onOpenChange = keys => {\r\n      const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\r\n      if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n        setOpenKeys(keys);\r\n      } else {\r\n        setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\r\n      }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <Sider width={200} theme=\"light\">\r\n                    <Menu mode=\"inline\" style={{float: 'right'}} openKeys={openKeys} onOpenChange={onOpenChange}>\r\n                        <SubMenu key=\"borrows\" icon={<AlignRightOutlined />} title=\"השאלת ספרים\">\r\n                            <Menu.Item key=\"borrowing books\">\r\n                                <Link to='/library/borrows'>רשימת השאלות</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"add new borrow\">\r\n                                <Link to='/library/borrows/add'>הוספת השאלה חדשה</Link>\r\n                            </Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"books\" icon={<ReadOutlined />} title=\"ספרים\">\r\n                            <Menu.Item key=\"book list\">\r\n                                <Link to='/library/books'>רשימת ספרים</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"add new book\">\r\n                                <Link to='/library/books/add'>הוספת ספר חדש</Link>\r\n                            </Menu.Item>\r\n                        </SubMenu>\r\n                        <Menu.Item key=\"statistics\" icon={<BarChartOutlined />}>\r\n                            <label>סטטיסטיקה</label>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Content style={{float: 'right', background: 'transparent', padding: '30px'}}>\r\n\r\n                        <Route path='/library/books' component={BookList} exact />\r\n                        <Route path='/library/books/add' component={CreateNewBook} exact />\r\n                        <Route path='/library/borrows' render={() => <>borrows</>} />\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default Library;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\NewPassword.js",["216","217","218"],"import React, { useState } from 'react';\r\nimport {Form,Input,Select,Button,} from 'antd';\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: {\r\n        span: 24,\r\n      },\r\n      sm: {\r\n        span: 8,\r\n      },\r\n    },\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n      },\r\n    },\r\n  };\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n  \r\n\r\n\r\nconst NewPassword = () => { \r\n   const RegistrationForm = () => {\r\n    const [form] = Form.useForm();\r\n  \r\n    const onFinish = (values) => {\r\n      console.log('Received values of form: ', values);\r\n    };\r\n    return (\r\n        <>\r\n               <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n  \r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject('The two passwords that you entered do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          save\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    <RegistrationForm />\r\n        </>\r\n    )\r\n    }\r\n}\r\nexport default NewPassword;\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\general\\CalendarView.js",["219","220","221"],"import React, { useState,useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { CaretRightOutlined, CaretLeftOutlined } from '@ant-design/icons';\r\nimport { Button, Radio, Tooltip } from 'antd';\r\nimport { getLessons } from '../../services/layer.service';\r\nimport { useSelector } from 'react-redux';\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/he';\r\n\r\nimport CalendarFilters from './CalendarFilters';\r\nimport { getEvents } from '../../services/google-calendar.service';\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport '../../css/CalendarView.css';\r\n\r\nmoment.locale(\"he-IL\");\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\nconst formats = {\r\n    weekdayFormat: (date, culture, localizer) => localizer.format(date, 'dddd', culture),\r\n}\r\n\r\nconst CalendarView = (props) => {\r\n\r\n    const { user } = useSelector(state => state.userReducer);\r\n    const [filterValues, setFilterValues] = useState({\r\n        groupIds: null, \r\n        userId: user._id, \r\n        getAll: false\r\n    });\r\n    const [eventList, setEventList] = useState([]);\r\n    const [defaultView, setDefaultView] = useState('month');\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        getEvents();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getLessonsEvents();\r\n    }, [filterValues]);\r\n    \r\n    useEffect(() => {\r\n        console.log(selectedDate)\r\n    }, [selectedDate]);\r\n\r\n    const getLessonsEvents = () => {\r\n      getLessons(filterValues.groupIds, filterValues.userId, filterValues.getAll)\r\n        .then(response => response.data).then(response => {\r\n            if(response.success) {\r\n                let events = response.lessons.map(lesson => ({\r\n                    start: new Date(lesson.fromDateTime),\r\n                    end: new Date(lesson.toDateTime),\r\n                    title: `${lesson.lessonId.lessonSubject} - קבוצת  ${lesson.groupName}`\r\n                }))\r\n                setEventList(events);\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n    const updateFilters = (filterProps) => {\r\n      setFilterValues({...filterProps});\r\n    }\r\n\r\n    const onEventResize = (data) => {\r\n        const { start, end } = data;\r\n    };\r\n\r\n    const onEventDrop = (data) => {\r\n        console.log(data);\r\n    };\r\n    \r\n    const changeTime = e => {\r\n        let selectedValue = e.target.value;\r\n        let newDate = new Date(selectedDate);\r\n        if(selectedValue === 'today') {\r\n            setSelectedDate(new Date());\r\n            return;\r\n        }\r\n        let timeDiff = selectedValue === 'next' ? 1 : -1;\r\n        switch (defaultView) {\r\n            case 'month':\r\n                newDate.setMonth(newDate.getMonth() + timeDiff); \r\n                break;\r\n            case 'week':\r\n                newDate.setDate(newDate.getDate() + timeDiff * 7); \r\n                break;\r\n            case 'day':\r\n                newDate.setDate(newDate.getDate() + timeDiff); \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setSelectedDate(newDate);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <CalendarFilters updateFilters={updateFilters} filterValues={filterValues}/>\r\n                <div>\r\n                    <Radio.Group value={defaultView} onChange={(e)=>{setDefaultView(e.target.value);}}>\r\n                        <Radio.Button value=\"day\">יום</Radio.Button>\r\n                        <Radio.Button value=\"week\">שבוע</Radio.Button>\r\n                        <Radio.Button value=\"month\">חודש</Radio.Button>\r\n                        <Radio.Button value=\"agenda\">תקציר</Radio.Button>\r\n                    </Radio.Group>\r\n\r\n                    <Tooltip title=\"הקודם\">\r\n                        <Button value=\"back\" onClick={changeTime} shape=\"circle\" icon={<CaretLeftOutlined />} />\r\n                    </Tooltip>\r\n                    <Tooltip title=\"הבא\">\r\n                        <Button value=\"next\" onClick={changeTime} shape=\"circle\" icon={<CaretRightOutlined />} />\r\n                    </Tooltip>\r\n                    <Radio.Group>\r\n                        {/* <Radio.Button onClick={changeTime} value=\"next\">next</Radio.Button>\r\n                        <Radio.Button onClick={changeTime} value=\"back\">back</Radio.Button> */}\r\n                        <Radio.Button onClick={changeTime} value=\"today\">today</Radio.Button>\r\n                    </Radio.Group>\r\n                </div>\r\n                <DnDCalendar\r\n                    formats={formats}\r\n                    localizer={localizer}\r\n                    events={eventList}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    calendarType=\"Hebrew\"\r\n                    date={selectedDate}\r\n                    view={defaultView}\r\n                    onSelectEvent={(e)=>{console.log(e)}}\r\n                    onEventDrop={onEventDrop}\r\n                    onEventResize={onEventResize}\r\n                    style={{ height: \"100vh\", direction:'rtl'}}\r\n                    onNavigate={(e)=>{console.log(e)}}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default CalendarView;\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchyListView.js",["222","223"],"import React, {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {getLayers} from '../../redux/actions/layer.actions';\r\nimport { Button, Card, Col, Row, Breadcrumb } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport CreateHierarchy from './CreateHierarchy';\r\n\r\nconst HierarchyListView = (props) => {\r\n\r\n    const { type, layerId, gradeId, nextHierarchy } = props;\r\n    const [showAddNewHierarchy, setshowAddNewHierarchy] = useState(false);\r\n    const  { layers } = useSelector(state => state.layerReducer);\r\n    const history = useHistory();\r\n    // const {hierarchyItem} = history.location.state;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(layers == null){\r\n            dispatch(getLayers());\r\n        }\r\n    }, [dispatch, layers]);\r\n\r\n    const getHierarchyItemId = () => {\r\n        if(history.location.state)\r\n            return history.location.state.hierarchyItem._id;\r\n        return null;\r\n    }\r\n\r\n    const getData = () => {\r\n        let data;\r\n        switch (type) {\r\n            case 'layer':\r\n                data = layers;\r\n                break;\r\n            case 'grade':\r\n                data =  layers.find(layer => layer._id === getHierarchyItemId()).grades;\r\n                break;\r\n            case 'level':\r\n                data =  layers.find(layers => layers.grades.find(grade => \r\n                    grade._id === getHierarchyItemId())\r\n                ).grades.find(grade => \r\n                    grade._id === getHierarchyItemId()\r\n                ).levels;\r\n                break;\r\n            case 'group':\r\n                layers.forEach(layer => {\r\n                    layer.grades.forEach(grade => {\r\n                        grade.levels.forEach(level => {\r\n                            if(level._id === getHierarchyItemId())\r\n                                data = level.groups;\r\n                        })\r\n                    })\r\n                })\r\n                break;\r\n            default:\r\n                return [];\r\n        }\r\n        return data ? data : [];\r\n    }\r\n\r\n    const showDetails = (item) => {\r\n        history.push({\r\n            pathname: `/${nextHierarchy}`,\r\n            state: { hierarchyItem: item },\r\n        });\r\n    }\r\n\r\n    const handleAddNewLayer = () => {\r\n        setshowAddNewHierarchy(true);\r\n    }\r\n\r\n    const hideCreateHierarchy = () => {\r\n        setshowAddNewHierarchy(false);\r\n    }\r\n\r\n    return (\r\n        <>      \r\n        \r\n            <div className=\"hierarchy-header\">\r\n                <Breadcrumb>\r\n                    {['layer', 'grade', 'level', 'group' ].includes(type) && <Breadcrumb.Item>Layers</Breadcrumb.Item>}\r\n                    {['grade', 'level', 'group' ].includes(type) && <Breadcrumb.Item>Grades</Breadcrumb.Item>}\r\n                    {['level', 'group' ].includes(type) && <Breadcrumb.Item>Levels</Breadcrumb.Item>}\r\n                    {['group' ].includes(type) && <Breadcrumb.Item>Groups</Breadcrumb.Item>}\r\n                </Breadcrumb>\r\n\r\n                <Button htmlType=\"submit\" type=\"primary\" onClick={handleAddNewLayer}>{`add new ${type}`}</Button>\r\n            </div>\r\n            {showAddNewHierarchy && \r\n                <CreateHierarchy \r\n                    hideCreateHierarchy={hideCreateHierarchy} \r\n                    type={type} \r\n                    layerId={getHierarchyItemId()}\r\n                    gradeId={getHierarchyItemId()}\r\n                    levelId={getHierarchyItemId()}\r\n                />}\r\n               <div>\r\n                <div className=\"site-card-wrapper\">\r\n                    <Row gutter={16}>\r\n                        {getData().map(item =>\r\n                            <Col key={item._id} span={8}>\r\n                                <Card  title={item.name} bordered={true} >\r\n                                    <Button type=\"primary\" onClick={() => showDetails(item)}>view details</Button>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </div>\r\n               </div>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HierarchyListView;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js",["224","225","226","227","228","229"],"import React, {useState} from 'react';\r\nimport { Divider, Form, Input, Button, Upload, message, Row, Col } from 'antd';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { createLesson } from '../../redux/actions/lesson.actions';\r\nimport { InboxOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport '../../css/Lessons.css';\r\nimport UploadImageToS3WithReactS3 from './UploadImageToS3WithReactS3';\r\nimport UploadFiles from './UploadFiles';\r\nimport ViewFile from './ViewFile';\r\nimport ViewFileCopy from './ViewFileCopy';\r\nimport ViewFileCopy2 from './ViewFileCopy2';\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst CreateLesson = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [lessonFiles, setLessonFiles] = useState([]);\r\n\r\n    const { Dragger } = Upload;\r\n\r\n    const props = {\r\n        name: 'file',\r\n        multiple: true,\r\n        action: '',\r\n        onChange(info) {\r\n            const { status } = info.file;\r\n            if (status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n            if (status === 'done') {\r\n                message.success(`${info.file.name} file uploaded successfully.`);\r\n            } else if (status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n    };\r\n\r\n    const addFile = (linkToFile, fileName) => {\r\n        debugger\r\n        setLessonFiles([...lessonFiles, {linkToFile,fileName}]);\r\n    }\r\n\r\n    const save = (values) => {\r\n        console.log('Success:', values);\r\n        dispatch(createLesson(values)).then(response => {\r\n            if(response.success){\r\n                message.success(response.message)\r\n            }\r\n            else {\r\n                message.error('lesson creation failed')\r\n            }\r\n        }).catch(error => message.error('lesson creation failed'));\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <ViewFileCopy2/>\r\n        <h1>docx</h1>\r\n        <ViewFileCopy file=\"https://lessons-files.s3.amazonaws.com/workFileExample.docx\" type=\"docx\"/>\r\n        <h1>jpg</h1>\r\n        <ViewFileCopy file=\"https://lessons-files.s3.eu-west-3.amazonaws.com/bg1a.jpg\" type=\"jpg\"/>\r\n        <h1>pdf</h1>\r\n        <ViewFileCopy file=\"https://lessons-files.s3.amazonaws.com/testPDF.pdf\" type=\"pdf\"/>\r\n        <h1>mp3</h1>\r\n        <ViewFileCopy file=\"https://lessons-files.s3.eu-west-3.amazonaws.com/%D7%97%D7%99%D7%99%D7%9D+%D7%90%D7%9C%D7%98%D7%9E%D7%9F+-+%D7%99%D7%A8%D7%90%D7%AA+%D7%94%D7%A9%D7%9D+(1).mp3\" type=\"mp3\"/>\r\n        <h1>mp4</h1>\r\n        <ViewFileCopy file=\"https://lessons-files.s3.amazonaws.com/VID-20201207-WA0004.mp4\" type=\"mp4\"/>\r\n        <Row>\r\n        {/* <ViewFile/> */}\r\n        <UploadFiles actionOnUploadCompleted={addFile}/>\r\n        {/* <UploadImageToS3WithReactS3/> */}\r\n            <Col span={12} offset={6}>\r\n                <Form className=\"parent\" \r\n                        {...layout} \r\n                        name=\"Add New Lesson\" \r\n                        initialValues={{ remember: true }} \r\n                        onFinish={save} \r\n                        onFinishFailed={onFinishFailed}>\r\n\r\n                        <Form.Item className=\"div1\"\r\n                            label=\"lesson subject\"\r\n                            name=\"lessonSubject\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    pattern: \"(^[a-zA-Z0-9 ]+$)\",\r\n                                    min: 2,\r\n                                    message: 'lesson subject is required and must be at least 2 chars',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item className=\"div2\"\r\n                            label=\"file name\"\r\n                            name=\"fileName\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    pattern: \"(^[a-zA-Z0-9]+$)\",\r\n                                    min: 2,\r\n                                    message: 'file name is required and must be at least 2 chars',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n\r\n                        </Form.Item>\r\n                        <Divider orientation=\"left\">\r\n                            Lesson Files\r\n                        </Divider>\r\n                        {/* <Form.Item className=\"div3\">\r\n                            <Dragger {...props}>\r\n                                <p className=\"ant-upload-drag-icon\">\r\n                                    <InboxOutlined />\r\n                                </p>\r\n                                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                                <p className=\"ant-upload-hint\">\r\n                                    Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n                                    band files\r\n                                </p>\r\n                            </Dragger>\r\n                            <br/>\r\n                            <Upload action=\"                                                \" directory>\r\n                                <Button icon={<UploadOutlined />}>Upload Directory</Button>\r\n                            </Upload>\r\n                        </Form.Item> */}\r\n                        <Form.Item\r\n                            className=\"div4\"\r\n                            label=\"task name\"\r\n                            name=\"taskName\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    pattern: \"(^[a-zA-Z0-9]+$)\",\r\n                                    min: 2,\r\n                                    message: 'file name is required and must be at least 2 chars',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        {/* <Form.Item className=\"div5\">\r\n                            <Dragger {...props}>\r\n                                <p className=\"ant-upload-drag-icon\">\r\n                                    <InboxOutlined />\r\n                                </p>\r\n                                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                                <p className=\"ant-upload-hint\">\r\n                                    Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n                                    band files\r\n                                </p>\r\n                            </Dragger>\r\n                            <br/>\r\n                            <Upload action=\"                                                \" directory>\r\n                                <Button icon={<UploadOutlined />}>Upload Directory</Button>\r\n                            </Upload>\r\n                        </Form.Item> */}\r\n                        <Form.Item className=\"div6\">\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Add Lesson\r\n                            </Button>\r\n                        </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row> \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateLesson;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\ViewGroupsDetails.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AffiliationToGroup.js",["230","231","232","233","234"],"import React, { useEffect, useState } from 'react';\r\nimport { AutoComplete, Input, Form, Tabs, Drawer ,message,Button, Card } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getTeachers, getStudents } from '../../services/user.service';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {updateGroup} from '../../redux/actions/layer.actions';\r\nimport ViewUsers from '../../components/users/ViewUsers';\r\nimport GroupDetails from './GroupDetails';\r\n\r\n\r\n\r\nconst AffiliationToGroup = (props) => {\r\n\r\n    const {mode} = props;\r\n    const history = useHistory();\r\n    const [group, setGroup] = useState();\r\n    const [teacherList, setTeacherList] = useState([]);\r\n    const [studentList, setStudentList] = useState();\r\n    const [groupName, setGroupName] = useState('');\r\n    const [selectedTeacher, setSelectedTeacher] = useState('');\r\n    const [selectedStudents, setSelectedStudents] = useState([]);\r\n    const [currentStudent, setCurrentStudent] = useState(null);\r\n    // const [selectStudent, setSelectStudent] = useState(group.StudentsInTheGroup.studentCode);\r\n    const [teacherDefaultValue, setTeacherDefaultValue] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [viewMode, setViewMode] = useState(mode);\r\n    const { layers } = useSelector(state => state.layerReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(group) {\r\n            initTeacherList();\r\n            initStudentList();\r\n        }\r\n    }, [group]);\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        for(let layer of layers) {\r\n            for(let grade of layer.grades) {\r\n                for(let level of grade.levels) {\r\n                    for(let group of level.groups) {\r\n                        if(group._id === history.location.state.hierarchyItem._id) {\r\n                            setGroup(group);\r\n                            setGroupName(group.name)\r\n                            setSelectedTeacher(group.teacherCode)\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [layers]);\r\n\r\n    const initTeacherList = () => {\r\n        getTeachers().then(resopnse => resopnse.data).then(response => {\r\n            if (response.success) {\r\n                let result = response.data.map(teacher => {\r\n                    if(group.teacherCode && teacher._id === group.teacherCode) {\r\n                        setTeacherDefaultValue(`${teacher.firstName} ${teacher.lastName}`);\r\n                        setSelectedTeacher(teacher._id);\r\n                    }\r\n                    return ({ ...teacher, key:teacher._id, value:`${teacher.firstName} ${teacher.lastName}` })\r\n                })\r\n                setTeacherList(result);\r\n            }\r\n            else {\r\n                message.error('Faild to load teacher list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load teacher list'));\r\n    }\r\n    const getPicklistItem = (student) => {\r\n        let value = `${student.firstName} ${student.lastName}`;\r\n        return (\r\n            <div value={value}>\r\n                <h3>{value}</h3>\r\n                <label>{student.email}</label>\r\n            </div>\r\n        )\r\n    }\r\n    const initStudentList = () => {\r\n        getStudents().then(resopnse => resopnse.data).then(response => {\r\n            if (response.success) {\r\n                debugger\r\n                let result = response.data.map(student => \r\n                    ({...student,\r\n                        key:student._id, \r\n                        value: `${student.firstName} ${student.lastName}`,\r\n                        label : getPicklistItem(student)\r\n                    }\r\n                ));\r\n                let studentsIds = group.StudentsInTheGroup.map(studentInGroup => studentInGroup.studentCode);\r\n                let existStudents = result.filter(student => studentsIds.includes(student._id));\r\n                let notExistStudents = result.filter(student => !studentsIds.includes(student._id));\r\n                setStudentList(notExistStudents);\r\n                setSelectedStudents(existStudents); \r\n            }\r\n            \r\n            else {\r\n                message.error('Faild to load student list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load student list'));\r\n    }\r\n\r\n    const handleSelectTeacher = (value, teacher) => {\r\n        setSelectedTeacher(teacher._id);\r\n        setTeacherDefaultValue(`${teacher.firstName} ${teacher.lastName}`)\r\n    }\r\n    const handleSelectStudent = (value, student) => {\r\n        setCurrentStudent(student);\r\n    }\r\n\r\n    const addNewStudentToList = (event) => {\r\n        setSelectedStudents([...selectedStudents, currentStudent]);\r\n        let students = studentList.filter(student => student._id !== currentStudent._id);\r\n        setStudentList(students);\r\n        setCurrentStudent(null)\r\n    }\r\n\r\n    const filterAutoComplete  = (inputValue, option) => {\r\n        return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n    }\r\n\r\n    const save = () => {\r\n        setLoading(true);\r\n        let data = {\r\n            groupId: group._id,\r\n            name:groupName,\r\n            teacherCode: selectedTeacher,\r\n            StudentsInTheGroup: selectedStudents.map(student => \r\n                ({studentCode: student._id})\r\n            )\r\n        }\r\n\r\n        dispatch(updateGroup(data)).then((response) => {\r\n            setLoading(false);\r\n            if(response.success){\r\n                debugger\r\n                setGroup(response.group);\r\n                message.success(`group updated sucessfuly`);\r\n            }\r\n            setViewMode('read');\r\n        }).catch(error => {\r\n            message.error(`Filed to update group`);\r\n        });  \r\n    }\r\n    const removeStudent = (studentId) => {\r\n        let student = selectedStudents.find(student => student._id === studentId);\r\n        let selectedList = selectedStudents.filter(student => student._id !== studentId)\r\n        setSelectedStudents(selectedList);\r\n        setStudentList([...studentList, student]);\r\n    }\r\n\r\n    const editGroup = () => {\r\n        setViewMode('edit');\r\n    }\r\n\r\n    const style = {\r\n        display : \"flex\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n    const style2 = {\r\n        width: \"-webkit-fill-available\"\r\n    }\r\n\r\n    return (\r\n        \r\n       \r\n        <div style={style}>\r\n        {group &&\r\n            <>\r\n            <div style={style2}>\r\n                {viewMode === 'edit' && \r\n                    <>\r\n                        <Form\r\n                            layout=\"vertical\"\r\n                        >\r\n                            <Form.Item\r\n                                label=\"group name\"\r\n                                name=\"group name\"\r\n                                onChange={(e) => {setGroupName(e.target.value)}}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: `Please input group name!`\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input defaultValue={groupName}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"teacher name\" name=\"teacher name\">     \r\n                                <AutoComplete\r\n                                    style={{\r\n                                        width: 200,\r\n                                    }}\r\n                                    options={teacherList}\r\n                                    defaultValue={teacherDefaultValue}\r\n                                    placeholder=\"teacher name\"\r\n                                    onSelect={handleSelectTeacher}\r\n                                    filterOption={filterAutoComplete}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label=\"add a new student\" name=\"add a new student\"> \r\n                            <AutoComplete\r\n                                style={{width: 200}}\r\n                                options={studentList}\r\n                                placeholder=\"add student\"\r\n                                onSelect={handleSelectStudent}\r\n                                filterOption={filterAutoComplete}\r\n                                notFoundContent=\"No student found\"\r\n                                value={currentStudent !== null? `${currentStudent.firstName} ${currentStudent.lastName}` : \"\"}\r\n                            />\r\n                            <Button disabled={currentStudent=== null} onClick={addNewStudentToList}>Add Student</Button>\r\n                            </Form.Item>\r\n                        <div>\r\n                        </div>\r\n\r\n                        </Form>\r\n                        <ViewUsers \r\n                            title=\"Student In Group:\" \r\n                            userList={selectedStudents} \r\n                            showSetRole={false}\r\n                            showRemove={true}\r\n                            removeStudent={removeStudent}\r\n                        /> \r\n                    </>\r\n                }\r\n                    \r\n                {viewMode === 'read' &&\r\n                    <GroupDetails \r\n                        group={group} \r\n                        teacherName={teacherDefaultValue} \r\n                        studentsInGroup={selectedStudents}\r\n                    />\r\n                }\r\n          \r\n            </div>\r\n            <div>\r\n                {viewMode === 'edit' && <Button loading={loading} onClick={save}>Save Changes</Button>}\r\n                {viewMode === 'read' && \r\n                    <>\r\n                        <Button loading={loading} onClick={editGroup}>Edit</Button>\r\n                    </>\r\n                }\r\n                \r\n            </div>\r\n            </>\r\n        }\r\n        </div>\r\n    )\r\n}\r\nexport default AffiliationToGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js",["235","236","237","238","239"],"import React, { useEffect, useState } from 'react';\r\nimport { List, message, Avatar, Spin, Card, Button , Modal} from 'antd';\r\nimport { useHistory,Link } from 'react-router-dom';\r\nimport SetUserRole from './SetUserRole';\r\nimport stringToColor from '../../hooks/stringToColor';\r\n\r\nconst ViewUsers = (props) => {\r\n\r\n    const {userList, showSetRole, title, showRemove, removeStudent} = props;\r\n    const [selectUser, setSelectdUser] = useState(null);\r\n    \r\n    const history = useHistory();\r\n\r\n    const getRandomColor = (userName) => {\r\n        return stringToColor(userName);\r\n    }\r\n\r\n    const navigate = (user) => {\r\n        history.push({\r\n            pathname: `/users/${user._id}`,\r\n            state: { user },\r\n        });\r\n    }\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = (e, userId) => {\r\n        e.stopPropagation();\r\n        e.nativeEvent.stopImmediatePropagation();\r\n        setSelectdUser(userId);\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card type=\"inner\" title={title}>\r\n                <List\r\n                    dataSource={userList}\r\n                    renderItem={item => (\r\n                        // <List.Item key={item._id} >\r\n                        <List.Item key={item._id} onClick={()=> navigate(item)}>\r\n                            <List.Item.Meta \r\n                                avatar={\r\n                                    <Avatar style={{ backgroundColor: getRandomColor(item.firstName),textTransform: 'uppercase', verticalAlign: 'middle' }} size=\"large\">\r\n                                        {item.firstName.charAt(0)}\r\n                                    </Avatar>\r\n                                }\r\n                                title={`${item.firstName} ${item.lastName}`}\r\n                                description={item.email}\r\n\r\n                                />\r\n                                {showSetRole && \r\n                                    <Button type=\"primary\" onClick={(e) =>showModal(e,item._id)}>Set User Role</Button>\r\n                                }\r\n                                {showRemove && \r\n                                    <Button type=\"primary\" onClick={()=>removeStudent(item._id)}>Remove Student</Button>\r\n                                }\r\n                        </List.Item>\r\n                    )}\r\n                >\r\n                </List>\r\n            </Card>\r\n            \r\n            {isModalVisible && <SetUserRole id={selectUser} handleOk={handleOk} handleCancel={handleCancel}></SetUserRole>}\r\n        </>\r\n    )\r\n}\r\nexport default ViewUsers;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\book.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\layer.reducer.js",["240"],"import {SET_LAYERS, ADD_LAYER, UPDATE_GROUP} from '../actions/layer.actions';\r\nimport produce from \"immer\"\r\n\r\n\r\nconst InitialSatate = {\r\n    layers: null\r\n}\r\n\r\nexport default produce((state = InitialSatate, action) => {\r\n    switch (action.type) {\r\n        case SET_LAYERS:\r\n            return {...state, \r\n                layers : action.payload\r\n            };\r\n        case ADD_LAYER:\r\n            let newLayer = action.payload;\r\n            let layers = state.layers.filter(layer => layer._id !== newLayer._id);\r\n            layers = [...layers, newLayer];\r\n            state.layers = layers;\r\n            return state;\r\n\r\n        case UPDATE_GROUP:\r\n            for(let layer of state.layers) {\r\n                for(let grade of layer.grades) {\r\n                    for(let level of grade.levels) {\r\n                        for(let group of level.groups) {\r\n                            if(group._id === action.payload._id) {\r\n                                group = Object.assign(group, action.payload);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n})","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\NavBar.js",["241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259"],"import React, { useState, useEffect } from 'react';\r\nimport { Menu,Avatar, Badge } from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../redux/actions/user.actions';\r\nimport SignIn from '../../pages/SignIn';\r\nimport MenuItem from './MenuItem';\r\nimport '../../css/Home.css';\r\nimport { \r\n    MailOutlined, \r\n    AppstoreOutlined, \r\n    SettingOutlined, \r\n    ApartmentOutlined,\r\n    HomeOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    UsergroupAddOutlined,\r\n    ReadOutlined,\r\n    MessageOutlined,\r\n    WechatOutlined,\r\n    IdcardOutlined,\r\n    LogoutOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst pathPermissions = new Map([\r\n    ['/', new Array('guest','admin','secretary','teacher', 'student')],\r\n    ['/library', new Array('admin','secretary','teacher', 'student')],\r\n    ['/users', new Array('admin','secretary')],\r\n    ['/users/:id', new Array('admin','secretary','teacher', 'student')],\r\n    ['/lessons/add', new Array('admin')],\r\n    ['/layers', new Array('admin','secretary','teacher')],\r\n    ['/calendar', new Array('admin','secretary','teacher', 'student')],\r\n    ['/grade', new Array('admin','secretary','teacher')],\r\n    ['/level', new Array('admin','secretary','teacher')],\r\n    ['/group', new Array('admin','secretary','teacher')],\r\n    ['/viewGroupDetails', new Array('admin','secretary','teacher', 'student')],\r\n    ['/viewGroupDetails', new Array('admin','secretary','teacher', 'student')]\r\n]);\r\n\r\nconst navBarItems = new Map([\r\n    ['/','בית'],\r\n    ['/library','ספריה'],\r\n    ['/users','משתמשים'],\r\n    ['/users/:id','פרטי משתמש'],\r\n    ['/lessons/add','הוספת שיעור חדש'],\r\n    ['/layers','שכבות'],\r\n    ['/calendar','לוח שנה']\r\n]);\r\n\r\n\r\nconst NavBar = (props) => {\r\n\r\n    const [current, setCurrent] = useState('/');\r\n    const { user, loggedIn } = useSelector(state => state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const [showSignIn, setShowSignIn] = useState(false);\r\n    const [userRole, setUserRole] = useState(user && user.role ? user.role : 'guest');\r\n\r\n    useEffect(() => {\r\n        if(loggedIn){\r\n            hideSignIn();\r\n        }\r\n    }, [loggedIn]);\r\n\r\n    const handleClick = e => {\r\n        setCurrent(e.key);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('access-token');\r\n        dispatch(logout());\r\n    };\r\n\r\n    const handleShowSignIn = () => {\r\n        setShowSignIn(true);\r\n    }\r\n    const hideSignIn = () => {\r\n        setShowSignIn(false);\r\n    }\r\n    const getMessagesCount = () => {\r\n        return 1;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <Menu style={{lineHeight: '5vh'}}  onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n            <MenuItem route=\"/\" key='/' icon={<HomeOutlined />}>בית</MenuItem>\r\n            <MenuItem route=\"/layers\" key='/layers' roles={['admin','secretary','teacher']} icon={<ApartmentOutlined />}>קבוצות</MenuItem>\r\n            <SubMenu key=\"lessons and tasks\" roles={['admin','secretary','teacher']} icon={<ReadOutlined />} title=\"שיעורים ומשימות\">\r\n            <Menu.ItemGroup>\r\n                <Menu.Item key=\"/lessons/add\" role={['admin']}>\r\n                    <Link to=\"/lessons/add\">הוספת שיעור חדש</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"setting:2\" role={['admin','secretary','teacher']}>רשימת שיעורים</Menu.Item>\r\n            </Menu.ItemGroup>\r\n            </SubMenu>\r\n            <MenuItem route=\"/calendar\" key='/calendar' roles={['admin','secretary','teacher', 'student']} icon={<CalendarOutlined />}>לוח שנה</MenuItem>\r\n            <MenuItem route=\"/library\" key='/library' roles={['admin','teacher']} icon={<CalendarOutlined />}>ספריה</MenuItem>\r\n            <MenuItem route=\"/users\" key='/users' roles={['admin','secretary']} icon={<UsergroupAddOutlined />}>ניהול משתמשים</MenuItem>\r\n\r\n        {user && \r\n            <SubMenu \r\n                style={{float: 'left'}} \r\n                key=\"user\" \r\n                icon={\r\n                    <Badge style={{float: 'right'}} count={getMessagesCount()}>\r\n                        <Avatar icon={<UserOutlined />} />\r\n                    </Badge> \r\n                }>\r\n                <Menu.ItemGroup>\r\n                    <Menu.Item key=\"messeges\" icon={<WechatOutlined />}>הודעות</Menu.Item>\r\n                    <Menu.Item key=\"profile\" icon={<IdcardOutlined />}>פרופיל</Menu.Item>\r\n                    <Menu.Item key=\"logout\" icon={<LogoutOutlined />} onClick={handleLogout}>יציאה</Menu.Item>\r\n                </Menu.ItemGroup>\r\n            </SubMenu>\r\n        }\r\n\r\n        {!user &&\r\n            <Menu.Item\r\n                    style={{float: 'left'}} \r\n                    key=\"signIn\" \r\n                    onClick={handleShowSignIn}\r\n            >\r\n                <span style={{padding:\"8px\"}}>כניסה</span> \r\n                <LogoutOutlined />\r\n            </Menu.Item>\r\n        }\r\n      </Menu>\r\n      {showSignIn && <SignIn hideSignIn={hideSignIn}/>}\r\n\r\n      </>\r\n    )\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\SetUserRole.js",["260"],"import React, { useState } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { Form, Input, Radio, Button, Modal, message } from 'antd';\r\nimport {setUserRole} from '../../redux/actions/user.actions';\r\n\r\n\r\nconst SetUserRole = (props) => {\r\n\r\n  const { id, handleOk, handleCancel } = props;\r\n\r\n  const { user } = useSelector(state => state.userReducer);\r\n    \r\n  const [role, setRole] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onChange = e => {\r\n    console.log('radio checked', e.target.value);\r\n    setRole(e.target.value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n    \r\n  const save = () => {\r\n      setLoading(true);\r\n      dispatch(setUserRole(id, role)).then(response => {\r\n        message.success('role was set successfully');\r\n        setLoading(false);\r\n      }).catch(error => {\r\n        setLoading(false);\r\n        message.error('set user role failed');\r\n      });    \r\n      handleOk();   \r\n  }\r\n  const cancel = () => {\r\n    handleCancel();\r\n  }\r\n\r\n  const onFinishFailed = () => {\r\n    alert('Failed to set user role');\r\n  }\r\n\r\n    return (\r\n      <>\r\n        <Modal title=\"הגדרת תפקיד משתמש\" visible={true} footer={\r\n          <>\r\n              <Button onClick={cancel} style={{ marginRight: 8 }}>\r\n                Cancel\r\n              </Button>\r\n              <Button loading={loading}  type=\"primary\" htmlType=\"submit\" form=\"newBookForm\" key=\"submit\">\r\n                Save\r\n              </Button>\r\n            </>\r\n          }>\r\n          <Form id=\"newBookForm\" onFinish={save} onFinishFailed={onFinishFailed} >\r\n\r\n          <Form.Item id=\"roleForm\">\r\n            <Radio.Group onChange={onChange}>\r\n            <Radio value={'student'}>תלמיד/ה</Radio>\r\n            <br />\r\n            <Radio value={'teacher'}>מורה</Radio>\r\n            <br />\r\n            <Radio value={'secretary'}>מזכיר/ה</Radio>\r\n            <br />\r\n            { user.role === 'admin' && \r\n              <Radio value={'admin'}>מנהל</Radio>\r\n            }\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SetUserRole;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\GroupDetails.js",["261","262","263","264"],"import React, {useState} from 'react';\r\nimport ViewUsers from '../../components/users/ViewUsers';\r\nimport { AutoComplete, Input, Form, Tabs, Drawer ,message,Button, Card } from 'antd';\r\nimport LessonsInGroup from './LessonsInGroup';\r\nimport AddLessonsToGroup from './AddLessonToGroup';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst GroupDetails = (props) => {\r\n\r\n    const {group, teacherName, studentsInGroup} = props;\r\n    const [viewDrawer, setViewDrawer] = useState(false);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card title={`Group name: ${group.name}`} style={{ width: 300 }} bordered={false}>\r\n                        <p>Teacher name: {teacherName}</p>\r\n            </Card>\r\n\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"Student In Group\" key=\"1\">\r\n                    <ViewUsers \r\n                        title=\"Student In Group:\" \r\n                        userList={studentsInGroup} \r\n                        showSetRole={false}\r\n                        showRemove={false}\r\n                    /> \r\n                </TabPane>\r\n                <TabPane tab=\"Group Lessons\" key=\"2\">\r\n                    <>\r\n                    <LessonsInGroup lessons={group.lessons}/>\r\n                        <Button onClick={()=>{setViewDrawer(true)}}>add new lesson to group</Button>\r\n                        <Drawer\r\n                            title=\"add lesson to group\"\r\n                            placement=\"right\"\r\n                            closable={()=>{setViewDrawer(true)}}\r\n                            visible={viewDrawer}\r\n                            key=\"right\"\r\n                            >\r\n                            <AddLessonsToGroup setViewDrawer={setViewDrawer} groupId={group._id}/>\r\n                        </Drawer>\r\n                    </>\r\n                </TabPane>\r\n            </Tabs>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupDetails;\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\ViewFileCopy2.js",["265","266"],"import React, {useRef, useEffect} from 'react';\r\nimport DocViewer,  { DocViewerRenderers }  from \"react-doc-viewer\";\r\n\r\n\r\nconst ViewFileCopy2  = (props) => {\r\n\r\n    const docs = [\r\n        { uri: \"https://lessons-files.s3.amazonaws.com/workFileExample.docx\" },\r\n        { uri: \"https://lessons-files.s3.eu-west-3.amazonaws.com/bg1a.jpg\" },\r\n        { uri: \"https://lessons-files.s3.amazonaws.com/testPDF.pdf\" },\r\n        { uri: \"https://lessons-files.s3.eu-west-3.amazonaws.com/%D7%97%D7%99%D7%99%D7%9D+%D7%90%D7%9C%D7%98%D7%9E%D7%9F+-+%D7%99%D7%A8%D7%90%D7%AA+%D7%94%D7%A9%D7%9D+(1).mp3\" },\r\n        { uri: \"https://lessons-files.s3.amazonaws.com/VID-20201207-WA0004.mp4\" },\r\n    ];\r\n    return <DocViewer \r\n                pluginRenderers={DocViewerRenderers} \r\n                documents={docs} \r\n            />\r\n}\r\n\r\nexport default ViewFileCopy2;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\ViewFileCopy.js",["267"],"import React, {useRef, useEffect} from 'react';\r\n// import logger from 'logging-library';\r\nimport FileViewer from 'react-file-viewer';\r\n// import { CustomErrorComponent } from 'custom-error';\r\n\r\n// https://lessons-files.s3.eu-west-3.amazonaws.com/bg1a.jpg\r\n// const file = 'https://lessons-files.s3.amazonaws.com/testPDF.pdf'\r\n// const type = 'pdf'\r\n\r\nconst ViewFileCopy  = (props) => {\r\n\r\n    const {file, type} = props;\r\n    const componentRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        if(componentRef.current.state.loading == false){\r\n            const elFromLibraryComponent = componentRef.current.querySelector('audio');\r\n\r\n            if (elFromLibraryComponent) {\r\n                elFromLibraryComponent.setAttribute('controlsList','nodownload');\r\n            }\r\n        }\r\n    }, [componentRef])\r\n\r\n    // const [numPages, setNumPages] = useState(null);\r\n    // const [pageNumber, setPageNumber] = useState(1);\r\n\r\n    // const onDocumentLoadSuccess = ({ numPages }) => {\r\n    //     setNumPages(numPages);\r\n    // }\r\n\r\n    const onError = (e) => {\r\n        console.log(e);\r\n        alert(e);\r\n        // logger.logError(e, 'error in file-viewer');\r\n    }\r\n    const preventDownloading = (e) => {\r\n        debugger\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div onContextMenu={preventDownloading}>\r\n        <FileViewer\r\n            ref={componentRef}\r\n            fileType={type}\r\n            filePath={file}\r\n            onError={onError}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewFileCopy;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\hooks\\stringToColor.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js",["268","269","270","271","272","273"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../components/sign-in/Login';\r\nimport Register from '../components/sign-in/Register';\r\nimport { Modal, Button, Layout, Tabs } from 'antd';\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nfunction SignIn(props) {\r\n\r\n    const {hideSignIn} = props;\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [visible, setVisible] = useState(true);\r\n\r\n    //   const showModal = () => {\r\n    //     setVisible(true);\r\n    //   };\r\n\r\n    const hideModal = () => {\r\n        hideSignIn();\r\n    }\r\n\r\n    const handleOk = () => {\r\n        // setLoading(true);\r\n        // setTimeout(() => {\r\n        //   setVisible(false);\r\n        //   setLoading(false);\r\n        // }, 3000);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        // hideSignIn();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* <Button type=\"primary\" onClick={showModal}>Sign in</Button> */}\r\n            <Modal\r\n                title=\"Login/Register\"\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                visible={visible}\r\n                closable={false}\r\n                footer={[\r\n                    // <Button key=\"back\" onClick={handleCancel}> Return </Button>,\r\n                    // <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}> Submit</Button>\r\n                ]}\r\n            >\r\n                {/* <Layout theme=\"light\"> */}\r\n                <Tabs defaultActiveKey=\"1\" size=\"large\" >\r\n                    <TabPane tab=\"Login\" key=\"1\"><Login hideModal={hideModal} /></TabPane>\r\n                    <TabPane tab=\"Register\" key=\"2\"><Register hideModal={hideModal} /></TabPane>\r\n\r\n                </Tabs>\r\n                {/* </Layout> */}\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\ViewFile.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadFiles.js",["274","275","276","277"],"import React, {useState} from  'react';\r\nimport { Upload, Button, message } from \"antd\";\r\nimport { InboxOutlined, UploadOutlined,PlusOutlined  } from '@ant-design/icons';\r\nimport { uploadFile } from 'react-s3';\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst config = {\r\n    bucketName: process.env.REACT_APP_S3_BUCKET,\r\n    region: process.env.REACT_APP_S3_REGION,\r\n    accessKeyId: process.env.REACT_APP_S3_ACCESS_KEY,\r\n    secretAccessKey: process.env.REACT_APP_S3_SECRET_ACCESS_KEY,\r\n}\r\n\r\nconst UploadFiles  = (props) => {\r\n\r\n    const { actionOnUploadCompleted } = props;\r\n    const [selectedFileList, setSelectedFileList] = useState([]);\r\n\r\n    const uploadFileToS3 = ({ file, onSuccess, onError }) => {\r\n        uploadFile(file, config).then(data => {\r\n            console.log(data.location);\r\n            debugger\r\n            actionOnUploadCompleted(data.location, data.name);\r\n            onSuccess(\"ok\")\r\n        }).catch(error => {\r\n            console.error(error);\r\n            onError({error});\r\n        })\r\n    }\r\n    \r\n    //TODO : delete files: https://www.npmjs.com/package/react-s3\r\n\r\n    const upload = info => {\r\n        debugger;\r\n\r\n        switch (info.file.status) {\r\n            // case \"uploading\":\r\n            //     nextState.selectedFileList = [info.file];\r\n            //     break;\r\n            case \"done\":\r\n                message.success(`${info.file.name} file uploaded successfully.`);\r\n                break;\r\n\r\n            case \"error\":\r\n                message.error(`${info.file.name} file upload failed.`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const daraggerProps = {\r\n        name: 'file',\r\n        multiple: true,\r\n        customRequest: uploadFileToS3,\r\n        onChange : upload\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Dragger {...daraggerProps}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n            <p className=\"ant-upload-hint\">\r\n            Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n            band files\r\n            </p>\r\n        </Dragger>\r\n\r\n        <Upload\r\n            // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            listType=\"picture-card\"\r\n            fileList={selectedFileList}\r\n            customRequest={uploadFileToS3}\r\n            onChange={upload}\r\n        >\r\n          {selectedFileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default UploadFiles;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\layer.actions.js",["278"],"import { useSelector } from 'react-redux';\r\nimport {getAllLayers, \r\n        addNewLayer, \r\n        addNewGrade, \r\n        addNewLevel, \r\n        addNewGroup,\r\n        updateGroupDetails,\r\n        updateGroupLessons\r\n} from '../../services/layer.service';\r\n\r\nexport const SET_LAYERS = 'SET LAYERS';\r\nexport const ADD_LAYER = 'ADD LAYER';\r\nexport const UPDATE_GROUP = 'UPDATE GROUP';\r\n\r\nexport const setLayers = (layersList) => {\r\n    return {\r\n        type: SET_LAYERS,\r\n        payload: layersList\r\n    };\r\n};\r\nexport const setLayer = (layer) => {\r\n    return {\r\n        type: ADD_LAYER,\r\n        payload: layer\r\n    };\r\n};\r\nexport const setUpdatedGroup = (group) => {\r\n    return {\r\n        type: UPDATE_GROUP,\r\n        payload: group\r\n    };\r\n};\r\n\r\n\r\nexport const getLayers = () => {\r\n    return (dispatch) => {\r\n        getAllLayers().then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayers(response.data));\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const addLayer = (layer) => {\r\n    return dispatch => {\r\n        return addNewLayer(layer).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\n\r\nexport const addGrade = (params) => {\r\n    return dispatch => {\r\n        return addNewGrade(params).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const addLevel = (params) => {\r\n   \r\n    return dispatch => {\r\n        return addNewLevel(params).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\nexport const addGroup = (params) => {\r\n   \r\n    return dispatch => {\r\n        return addNewGroup(params).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setLayer(response.layer));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\nexport const updateGroup = (group) => {\r\n   \r\n    return dispatch => {\r\n        return updateGroupDetails(group).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                dispatch(setUpdatedGroup(response.group));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}\r\nexport const updateLessonsInGroup = (data) => {\r\n   \r\n    return dispatch => {\r\n        return updateGroupLessons(data).then(response => response.data).then(response => {\r\n            if(response.success){\r\n                debugger;\r\n                dispatch(setUpdatedGroup(response.group));\r\n            }\r\n            return response;\r\n        }).catch(error=> \r\n            { return {success:false , error: error};\r\n        });\r\n    }\r\n}","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\book.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\UploadImageToS3WithReactS3.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AddLessonToGroup.js",["279","280","281","282","283"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button,Space, DatePicker,TimePicker, message,Checkbox,AutoComplete } from 'antd';\r\nimport {getLessons} from '../../services/lesson.service';\r\nimport {updateLessonsInGroup} from '../../redux/actions/layer.actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddLessonsToGroup = (props) => {\r\n    const {groupId, setViewDrawer} = props;\r\n    const [startDate, setStartDate] = useState();\r\n    // const [startDate, setStartDate] = useState();\r\n    const [lessons, setLessons] = useState([]);\r\n    const [selectedLesson, setSelectedLesson] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [key, setKey] = useState(new Date());\r\n    const format = 'HH:mm';\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        initLessons();\r\n    }, []);\r\n\r\n    const initLessons = () => {\r\n        getLessons().then(response => {\r\n            debugger\r\n            if (response.success) {\r\n                debugger\r\n                let result = response.data.map(lesson => \r\n                    ({...lesson,\r\n                        key:lesson._id, \r\n                        value: lesson.lessonSubject,\r\n                        label : lesson.lessonSubject\r\n                    }\r\n                ));\r\n                setLessons(result);\r\n            }\r\n            else {\r\n                message.error('Faild to load teacher list')\r\n            }\r\n            console.log(response);\r\n        }).catch(error => message.error('Faild to load teacher list'));\r\n    }\r\n\r\n\r\n    const handleSatartDateChanged = (date, dateString) => {\r\n        setStartDate(date);\r\n    }\r\n\r\n    // lessonId: { type: ObjectId, required: true },\r\n    // remarks: { type: String, required: false },\r\n    // // date: { type: Date, required: true },\r\n    // comments: { type: Date, required: true },\r\n    // toAnHour: { type: Date, required: true },\r\n    // comments: { type: String, required: false },\r\n\r\n    const filterAutoComplete = (inputValue, option) => {\r\n        return option.lessonSubject.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1  \r\n    }\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n        let lesson = {\r\n            lessonId: selectedLesson._id,\r\n            fromDateTime:values[\"lesson time\"][0],\r\n            toDateTime:values[\"lesson time\"][1],\r\n            comments: values[\"comments\"]\r\n        }\r\n        let data = {groupId: groupId, lessons: [lesson]};\r\n        dispatch(updateLessonsInGroup(data)).then(res => {\r\n            if(res.success){\r\n                setLoading(false);\r\n                message.success(\"lesson created successfuly\")\r\n                setViewDrawer(false);\r\n                setKey(new Date());\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        console.log(\"cancel\");\r\n    }\r\n\r\n    const handleSelectLesson = (value, lesson) => {\r\n        setSelectedLesson(lesson);\r\n    }\r\n\r\n    const style = { \r\n        display: \"grid\"\r\n    }\r\n    return (\r\n        <>\r\n        <Space>\r\n        <Form key={key} layout=\"vertical\" style={style} initialValues={{ remember: true }} onFinish={save}>\r\n            <Form.Item \r\n                label=\"lesson time\" \r\n                name=\"lesson time\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'please set lesson hours!'\r\n                    },\r\n                ]}\r\n            >\r\n                <RangePicker\r\n                    ranges={{\r\n                        Today: [moment(), moment()],\r\n                        'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n                    }}\r\n                    showTime\r\n                    format=\"YYYY/MM/DD HH:mm\"\r\n                />\r\n\r\n            </Form.Item>\r\n            <Form.Item \r\n                label=\"select lesson\" \r\n                name=\"select lesson\" \r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'please select lesson!'\r\n                    },\r\n                ]}\r\n            \r\n            >     \r\n                <AutoComplete\r\n                    style={{\r\n                        width: 200,\r\n                    }}\r\n                    options={lessons}\r\n                    placeholder=\"select lesson\"\r\n                    onSelect={handleSelectLesson}\r\n                    filterOption={filterAutoComplete}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                    label=\"comments\"\r\n                    name=\"comments\"\r\n                >\r\n                    <Input />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                        Save\r\n                    </Button>\r\n                    <Button type=\"default\" htmlType=\"button\" onClick={handleCancel}>\r\n                        Cancel\r\n                    </Button>\r\n            </Form.Item>\r\n        </Form>\r\n        </Space>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddLessonsToGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\book.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\layer.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js",["284","285","286"],"import React, { useState } from 'react';\r\nimport { enterUser } from '../../redux/actions/user.actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Form, Input, Button, Checkbox, Alert, message } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst Login = (props) => {\r\n\r\n    const {hideModal} = props;\r\n\r\n    // const { message } = useSelector(state => state.messageReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n\r\n        dispatch(enterUser(values.email, values.password))\r\n            .then((response)=>{\r\n                setLoading(false);\r\n                if(response.data){\r\n                    hideModal();\r\n                    return;\r\n                }\r\n                switch (response.request.status) {\r\n                    case 404:\r\n                        message.error('Error: user name or password are not exist');\r\n                        break;\r\n                    default:\r\n                        message.error('Login Failed 1');\r\n                        break;\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setLoading(false);\r\n                message.error('Login Failed 2')\r\n            });\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        hideModal();\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* {message && <Alert\r\n                message=\"Error\"\r\n                description={message}\r\n                type=\"error\"\r\n                showIcon\r\n            />} */}\r\n            <Form {...layout} name=\"login\" onFinish={save} onFinishFailed={onFinishFailed} >\r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your email!',\r\n                            type: 'email'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                        Submit\r\n                    </Button>\r\n                    <Button type=\"default\" htmlType=\"button\" onClick={handleCancel}>\r\n                        Cancel\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js",["287","288"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createUser } from '../../redux/actions/user.actions';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const {hideModal} = props;\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const save = (values) => {\r\n        console.log('Success:', values); \r\n        dispatch(createUser(values)).then(res => {\r\n            hideModal();\r\n        });       \r\n    }\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        hideModal();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form {...layout} name=\"login\" onFinish={save} onFinishFailed={onFinishFailed} >\r\n                <Form.Item\r\n                    label=\"first name\"\r\n                    name=\"firstName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern:\"(^[a-zA-Z\\u0590-\\u05fe]+$)\",\r\n                            min:2,\r\n                            message: 'first name is required and must be at least 2 chars',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"last name\"\r\n                    name=\"lastName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern:\"(^[a-zA-Z\\u0590-\\u05fe]+$)\",\r\n                            min:2,\r\n                            message: 'first name is required and must be at least 2 chars',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                \r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your email!',\r\n                            type: 'email'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button type=\"default\" htmlType=\"button\" onClick={handleCancel}>\r\n                        Cancel\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\LessonsInGroup.js",["289","290","291"],"import React, {useEffect, useState} from 'react';\r\nimport { List, message, Steps, Divider, Popover } from 'antd';\r\nimport {getLessons} from '../../services/lesson.service';\r\n\r\nconst { Step } = Steps;\r\n\r\n\r\nconst LessonsInGroup = (props) => {\r\n\r\n    const {lessons} = props;\r\n    const [groupLessons, setGroupLessons] = useState([]);\r\n    const [currentLessonIndex, setCurrentLessonIndex] = useState();\r\n\r\n    useEffect(() => {\r\n        initLessons();\r\n    }, [lessons]);\r\n    \r\n    \r\n    useEffect(() => {\r\n        let index = groupLessons.findIndex(lesson => new Date(lesson.fromDateTime) > new Date());\r\n        setCurrentLessonIndex(index);\r\n        // groupLessons.forEach((lesson, index) => {\r\n        //     if(new Date(lesson.fromDateTime) > new Date()){\r\n        //         setCurrentLessonIndex(index);\r\n        //         return;\r\n        //     }\r\n        // });\r\n    }, [groupLessons]);\r\n\r\n    const initLessons = () => {\r\n        getLessons().then(response => {\r\n\r\n            if (response.success) {\r\n                let lessonsMap = Object.assign({}, ...response.data.map(lesson => ({[lesson._id]: lesson})));\r\n                let result = Object.values(lessons.map(lesson => ({...lesson, lessonObject: lessonsMap[lesson.lessonId]})));\r\n                let filterdList = result.sort((a, b) => new Date(a.fromDateTime) - new Date(b.fromDateTime))\r\n                setGroupLessons(filterdList);\r\n            }\r\n            else {\r\n                message.error('Faild to load lessons list')\r\n            }\r\n            console.log(response);\r\n        })\r\n        .catch(error => message.error('Faild to load lessons list'));\r\n    }\r\n\r\n    const customDot = (dot, { status, index }) => (\r\n        <Popover\r\n          content={\r\n            <span>\r\n              step {index} status: {status}\r\n            </span>\r\n          }\r\n        >\r\n          {dot}\r\n        </Popover>\r\n      );\r\n\r\n\r\n    return (\r\n        <>\r\n            {groupLessons.length && \r\n                <Steps progressDot={customDot} current={currentLessonIndex} direction=\"vertical\">\r\n            \r\n                    {groupLessons.map(lesson => \r\n                        <Step key={lesson._id} title={lesson.lessonObject.lessonSubject} \r\n                                description={lesson.fromDateTime}\r\n                        />\r\n                    )}\r\n                </Steps>\r\n            }  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default LessonsInGroup;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\CreateHierarchy.js",["292"],"import React, { useState, useEffect }  from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addLayer, addGrade, addLevel, addGroup} from '../../redux/actions/layer.actions';\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst CreateHierarchy = (props) => {\r\n\r\n    const {hideCreateHierarchy , type, layerId, gradeId , levelId} = props;\r\n    const { layers } = useSelector(state => state.layerReducer);\r\n    const [loading, setLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getLayerId = (gradeId) => {\r\n        \r\n        if(!gradeId)\r\n            return null;\r\n        return layers.find(layers => layers.grades.find(grade => grade._id === gradeId))._id;\r\n    }\r\n    \r\n    const getGradeId = (levelId) => {\r\n        \r\n        if(!levelId)\r\n            return null;\r\n    \r\n        let result;\r\n        layers.forEach(layer => {\r\n            layer.grades.forEach(grade => {\r\n                let data = grade.levels.find(level => level._id === levelId)\r\n                if (data) {\r\n                    result = grade;\r\n                    return;\r\n                }\r\n            });\r\n    \r\n        });\r\n        return result._id;\r\n    }\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n        let {name} = values;\r\n        let func;\r\n        let params;\r\n        switch (type) {\r\n            case 'layer':\r\n                func = addLayer;\r\n                params = name;\r\n                break;\r\n            case 'grade':\r\n                func = addGrade;\r\n                params = {layerId : layerId , gradeName: name };\r\n                break;\r\n            case 'level':\r\n                func = addLevel;\r\n                params = {gradeId: gradeId, levelName: name, layerId: getLayerId(gradeId) };\r\n                break;\r\n            case 'group':\r\n                func = addGroup;\r\n                params = {\r\n                    gradeId: getGradeId(levelId), \r\n                    groupName: name, \r\n                    layerId: getLayerId(getGradeId(levelId)), \r\n                    levelId: levelId\r\n                };\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n        dispatch(func(params)).then((response) => {\r\n            setLoading(false);\r\n            if(response.success){\r\n                form.resetFields()\r\n                message.success(`${type} created sucessfuly`);\r\n                hideCreateHierarchy();\r\n            }\r\n            else {\r\n                message.error(response.error.response.data.error);\r\n            }\r\n        }).catch(error => {\r\n            debugger;\r\n            message.error(`Filed to create ${type}, error message: ${error}`);\r\n        });  \r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Form {...layout} form={form} name={`Add ${type}`} initialValues={{ remember: true }} onFinish={save} >\r\n            <Form.Item\r\n                label={`${type} Name`}\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `Please input ${type} name !`\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\"  loading={loading}>\r\n                    add\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </>\r\n)\r\n   \r\n}\r\n\r\nexport default CreateHierarchy;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\general\\CalendarFilters.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\CreateNewBook.js",["293"],"import React, { useState } from 'react';\r\nimport {setNewBook} from '../../redux/actions/book.actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport { Drawer, Form, Button, Input, Select ,message} from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst CreateNewBook = (props) => {\r\n\r\n    const {setVisible} = props;\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const save = (book) => {\r\n      setLoading(true)\r\n      dispatch(setNewBook(book)).then(response => {\r\n        setLoading(false);\r\n        message.success('the book was added successfully');\r\n        onClose();\r\n      }).catch(error => {\r\n        message.error('add new book failed');\r\n        setLoading(false);\r\n      });    \r\n    }\r\n  \r\n    const onClose = () => {\r\n        setVisible(false);\r\n    };\r\n  \r\n    return (\r\n        <>\r\n        {/* <Drawer\r\n          title=\"Create a new book\"\r\n          onClose={onClose}\r\n          visible={true}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n          footer={\r\n            <div\r\n              style={{\r\n                textAlign: 'right',\r\n              }}\r\n            >\r\n              <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n                Cancel\r\n              </Button>\r\n              <Button loading={loading}  type=\"primary\" htmlType=\"submit\" form=\"newBookForm\" key=\"submit\">\r\n                Save\r\n              </Button>\r\n            </div>\r\n          }\r\n        > */}\r\n          <Form id=\"newBookForm\" layout=\"vertical\" hideRequiredMark onFinish={save}>\r\n\r\n                <Form.Item\r\n                  name=\"barcode\"\r\n                  label=\"Barcode\"\r\n                  rules={[{ required: true, message: 'Please enter a barcode' }]}\r\n                >\r\n                  <Input placeholder=\"Please enter a barcode\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  label=\"Name\"\r\n                  rules={[{ required: true, message: 'Please enter book name' }]}\r\n                >\r\n                  <Input placeholder=\"Please enter book name\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"writer\"\r\n                  label=\"Writer\"\r\n                  rules={[{ required: true, message: 'Please enter writer name' }]}\r\n                >\r\n                  <Input placeholder=\"Please enter writer name\" />\r\n                </Form.Item>\r\n         \r\n                <Form.Item\r\n                  name=\"status\"\r\n                  label=\"Status\"\r\n                  rules={[{ required: true, message: 'Please select status' }]}\r\n                >\r\n                  <Select placeholder=\"Please select status book\">\r\n                    <Option value=\"not borrowed\">not borrowed</Option>\r\n                    <Option value=\"borrowed\">borrowed</Option>\r\n                    <Option value=\"in binding\">in binding</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button loading={loading} type=\"primary\" htmlType=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                </Form.Item>\r\n          </Form>\r\n        {/* </Drawer> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateNewBook;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\home\\MenuItem.js",["294","295","296"],"import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Menu,Avatar, Badge } from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\nimport Icon from '@ant-design/icons';\r\n\r\n\r\nconst MenuItem = ({key, route, icon, children, roles, ...props}) => {\r\n    const { user } = useSelector(state => state.userReducer);\r\n    const [userRole, setUserRole] = useState(user && user.role ? user.role : 'guest');\r\n    \r\n    useEffect(() => {\r\n        setUserRole(user && user.role ? user.role : 'guest');\r\n    },[user])\r\n    \r\n    \r\n    return (\r\n        <>\r\n            {(!roles || roles.includes(userRole)) &&\r\n                <Menu.Item key={key} {...props}> \r\n                    {icon}\r\n                    {route && <Link to={route}></Link>}\r\n                    {children}\r\n                </Menu.Item>\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default MenuItem;\r\n// const MenuItem = (props) => {\r\n//     const {roles, children} = props;\r\n//     const { user } = useSelector(state => state.userReducer);\r\n//     const [userRole, setUserRole] = useState(user && user.role ? user.role : 'guest');\r\n\r\n//     debugger;\r\n//     return (!roles || roles.includes(userRole)) ? children : <></>;\r\n// }\r\n\r\n// export default MenuItem;\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\google-calendar.service.js",["297"],"import axios from 'axios';\r\n\r\nconst CALENDAR_ID = 'iw.jewish#holiday@group.v.calendar.google.com';\r\nconst API_KEY = 'AIzaSyDUzmVNt2tsB6Ltqk9vhz8r_W55W0cSsBA';\r\nconst GOOGLE_CALENDAR_URL = `https://www.googleapis.com/calendar/v3/calendars/iw.jewish%23holiday%40group.v.calendar.google.com/events?key=${API_KEY}`;\r\n\r\nconst api = axios.create({\r\n    baseURL: GOOGLE_CALENDAR_URL\r\n})\r\n\r\nexport const getEvents = () => api.get()\r\n            .then(res => {\r\n              debugger\r\n              console.log(res)\r\n            })\r\n            .catch(err => {console.log(err)});","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\library\\BookList.js",["298","299","300","301","302"],"import React, { useEffect, useState } from 'react';\r\nimport api from '../../services/book.service';\r\nimport { Table, Button, message } from 'antd';\r\nimport CreateNewBook from './CreateNewBook';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getBooks} from '../../redux/actions/book.actions'\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Barcode',\r\n        dataIndex: 'barcode'\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name'\r\n    },\r\n    {\r\n        title: 'Writer',\r\n        dataIndex: 'writer'\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status'\r\n    }\r\n];\r\n\r\n\r\n\r\nconst BookList = () => {\r\n\r\n    const [tableData, setTableData] = useState([]);\r\n    const [viewDrawer, setViewDrawer] = useState(false);\r\n    const { books } = useSelector(state => state.bookReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const setViewAddBook = (value) => {\r\n        setViewDrawer(value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        if(books == null) {\r\n            dispatch(getBooks())\r\n            .catch(error => {\r\n                console.log(error);\r\n                message.error('Failed to get books from server')\r\n            });\r\n        }\r\n        else {\r\n             let data = books.map(book => ({...book, key: book._id}));\r\n            setTableData(data);\r\n        }\r\n    }, [books, dispatch]);\r\n\r\n    return (\r\n\r\n        <>\r\n            {/* <Button type=\"primary\" onClick={()=>{setViewAddBook(true)}}>New Book</Button>\r\n            {viewDrawer && <CreateNewBook setVisible={setViewAddBook} />} */}\r\n            <Table columns={columns} dataSource={tableData} bordered />\r\n        </>\r\n    )\r\n}\r\nexport default BookList;",{"ruleId":"303","severity":1,"message":"304","line":8,"column":48,"nodeType":"305","messageId":"306","endLine":8,"endColumn":65},{"ruleId":"303","severity":1,"message":"307","line":9,"column":50,"nodeType":"305","messageId":"306","endLine":9,"endColumn":54},{"ruleId":"303","severity":1,"message":"308","line":12,"column":8,"nodeType":"305","messageId":"306","endLine":12,"endColumn":19},{"ruleId":"303","severity":1,"message":"309","line":13,"column":8,"nodeType":"305","messageId":"306","endLine":13,"endColumn":25},{"ruleId":"303","severity":1,"message":"310","line":17,"column":8,"nodeType":"305","messageId":"306","endLine":17,"endColumn":16},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"303","severity":1,"message":"315","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":26},{"ruleId":"303","severity":1,"message":"316","line":3,"column":28,"nodeType":"305","messageId":"306","endLine":3,"endColumn":40},{"ruleId":"303","severity":1,"message":"317","line":3,"column":42,"nodeType":"305","messageId":"306","endLine":3,"endColumn":57},{"ruleId":"303","severity":1,"message":"318","line":11,"column":9,"nodeType":"305","messageId":"306","endLine":11,"endColumn":15},{"ruleId":"303","severity":1,"message":"319","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":25},{"ruleId":"303","severity":1,"message":"320","line":2,"column":20,"nodeType":"305","messageId":"306","endLine":2,"endColumn":26},{"ruleId":"303","severity":1,"message":"321","line":22,"column":9,"nodeType":"305","messageId":"306","endLine":22,"endColumn":27},{"ruleId":"322","severity":1,"message":"323","line":47,"column":8,"nodeType":"324","endLine":47,"endColumn":22,"suggestions":"325"},{"ruleId":"303","severity":1,"message":"326","line":72,"column":17,"nodeType":"305","messageId":"306","endLine":72,"endColumn":22},{"ruleId":"303","severity":1,"message":"327","line":72,"column":24,"nodeType":"305","messageId":"306","endLine":72,"endColumn":27},{"ruleId":"303","severity":1,"message":"328","line":11,"column":19,"nodeType":"305","messageId":"306","endLine":11,"endColumn":26},{"ruleId":"303","severity":1,"message":"329","line":11,"column":28,"nodeType":"305","messageId":"306","endLine":11,"endColumn":35},{"ruleId":"303","severity":1,"message":"330","line":6,"column":10,"nodeType":"305","messageId":"306","endLine":6,"endColumn":23},{"ruleId":"303","severity":1,"message":"331","line":6,"column":25,"nodeType":"305","messageId":"306","endLine":6,"endColumn":39},{"ruleId":"303","severity":1,"message":"332","line":8,"column":8,"nodeType":"305","messageId":"306","endLine":8,"endColumn":34},{"ruleId":"303","severity":1,"message":"333","line":10,"column":8,"nodeType":"305","messageId":"306","endLine":10,"endColumn":16},{"ruleId":"303","severity":1,"message":"334","line":29,"column":13,"nodeType":"305","messageId":"306","endLine":29,"endColumn":20},{"ruleId":"303","severity":1,"message":"335","line":31,"column":11,"nodeType":"305","messageId":"306","endLine":31,"endColumn":16},{"ruleId":"303","severity":1,"message":"336","line":2,"column":37,"nodeType":"305","messageId":"306","endLine":2,"endColumn":41},{"ruleId":"303","severity":1,"message":"337","line":2,"column":43,"nodeType":"305","messageId":"306","endLine":2,"endColumn":49},{"ruleId":"303","severity":1,"message":"338","line":2,"column":67,"nodeType":"305","messageId":"306","endLine":2,"endColumn":71},{"ruleId":"322","severity":1,"message":"339","line":38,"column":8,"nodeType":"324","endLine":38,"endColumn":15,"suggestions":"340"},{"ruleId":"322","severity":1,"message":"341","line":56,"column":8,"nodeType":"324","endLine":56,"endColumn":16,"suggestions":"342"},{"ruleId":"303","severity":1,"message":"343","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":26},{"ruleId":"303","severity":1,"message":"344","line":2,"column":16,"nodeType":"305","messageId":"306","endLine":2,"endColumn":23},{"ruleId":"303","severity":1,"message":"345","line":2,"column":33,"nodeType":"305","messageId":"306","endLine":2,"endColumn":37},{"ruleId":"303","severity":1,"message":"346","line":2,"column":54,"nodeType":"305","messageId":"306","endLine":2,"endColumn":59},{"ruleId":"303","severity":1,"message":"307","line":3,"column":21,"nodeType":"305","messageId":"306","endLine":3,"endColumn":25},{"ruleId":"347","severity":1,"message":"348","line":35,"column":9,"nodeType":"349","messageId":"350","endLine":36,"endColumn":26},{"ruleId":"303","severity":1,"message":"316","line":10,"column":5,"nodeType":"305","messageId":"306","endLine":10,"endColumn":17},{"ruleId":"303","severity":1,"message":"315","line":11,"column":5,"nodeType":"305","messageId":"306","endLine":11,"endColumn":21},{"ruleId":"303","severity":1,"message":"317","line":12,"column":5,"nodeType":"305","messageId":"306","endLine":12,"endColumn":20},{"ruleId":"303","severity":1,"message":"351","line":19,"column":5,"nodeType":"305","messageId":"306","endLine":19,"endColumn":20},{"ruleId":"303","severity":1,"message":"352","line":27,"column":7,"nodeType":"305","messageId":"306","endLine":27,"endColumn":22},{"ruleId":"353","severity":1,"message":"354","line":28,"column":11,"nodeType":"355","messageId":"356","endLine":28,"endColumn":70},{"ruleId":"353","severity":1,"message":"354","line":29,"column":18,"nodeType":"355","messageId":"356","endLine":29,"endColumn":69},{"ruleId":"353","severity":1,"message":"354","line":30,"column":16,"nodeType":"355","messageId":"356","endLine":30,"endColumn":46},{"ruleId":"353","severity":1,"message":"354","line":31,"column":20,"nodeType":"355","messageId":"356","endLine":31,"endColumn":71},{"ruleId":"353","severity":1,"message":"354","line":33,"column":17,"nodeType":"355","messageId":"356","endLine":33,"endColumn":57},{"ruleId":"353","severity":1,"message":"354","line":34,"column":19,"nodeType":"355","messageId":"356","endLine":34,"endColumn":70},{"ruleId":"353","severity":1,"message":"354","line":35,"column":16,"nodeType":"355","messageId":"356","endLine":35,"endColumn":56},{"ruleId":"353","severity":1,"message":"354","line":36,"column":16,"nodeType":"355","messageId":"356","endLine":36,"endColumn":56},{"ruleId":"353","severity":1,"message":"354","line":37,"column":16,"nodeType":"355","messageId":"356","endLine":37,"endColumn":56},{"ruleId":"353","severity":1,"message":"354","line":38,"column":27,"nodeType":"355","messageId":"356","endLine":38,"endColumn":78},{"ruleId":"353","severity":1,"message":"354","line":39,"column":27,"nodeType":"355","messageId":"356","endLine":39,"endColumn":78},{"ruleId":"303","severity":1,"message":"357","line":42,"column":7,"nodeType":"305","messageId":"306","endLine":42,"endColumn":18},{"ruleId":"303","severity":1,"message":"358","line":59,"column":12,"nodeType":"305","messageId":"306","endLine":59,"endColumn":20},{"ruleId":"303","severity":1,"message":"359","line":59,"column":22,"nodeType":"305","messageId":"306","endLine":59,"endColumn":33},{"ruleId":"303","severity":1,"message":"360","line":3,"column":16,"nodeType":"305","messageId":"306","endLine":3,"endColumn":21},{"ruleId":"303","severity":1,"message":"361","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":22},{"ruleId":"303","severity":1,"message":"360","line":3,"column":24,"nodeType":"305","messageId":"306","endLine":3,"endColumn":29},{"ruleId":"303","severity":1,"message":"362","line":3,"column":31,"nodeType":"305","messageId":"306","endLine":3,"endColumn":35},{"ruleId":"303","severity":1,"message":"344","line":3,"column":51,"nodeType":"305","messageId":"306","endLine":3,"endColumn":58},{"ruleId":"303","severity":1,"message":"363","line":1,"column":16,"nodeType":"305","messageId":"306","endLine":1,"endColumn":22},{"ruleId":"303","severity":1,"message":"343","line":1,"column":24,"nodeType":"305","messageId":"306","endLine":1,"endColumn":33},{"ruleId":"364","severity":1,"message":"365","line":17,"column":47,"nodeType":"366","messageId":"367","endLine":17,"endColumn":49},{"ruleId":"303","severity":1,"message":"368","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":17},{"ruleId":"303","severity":1,"message":"369","line":5,"column":17,"nodeType":"305","messageId":"306","endLine":5,"endColumn":23},{"ruleId":"303","severity":1,"message":"370","line":5,"column":25,"nodeType":"305","messageId":"306","endLine":5,"endColumn":31},{"ruleId":"303","severity":1,"message":"371","line":13,"column":12,"nodeType":"305","messageId":"306","endLine":13,"endColumn":19},{"ruleId":"303","severity":1,"message":"372","line":13,"column":21,"nodeType":"305","messageId":"306","endLine":13,"endColumn":31},{"ruleId":"303","severity":1,"message":"373","line":14,"column":21,"nodeType":"305","messageId":"306","endLine":14,"endColumn":31},{"ruleId":"303","severity":1,"message":"369","line":2,"column":18,"nodeType":"305","messageId":"306","endLine":2,"endColumn":24},{"ruleId":"303","severity":1,"message":"331","line":3,"column":25,"nodeType":"305","messageId":"306","endLine":3,"endColumn":39},{"ruleId":"303","severity":1,"message":"374","line":19,"column":30,"nodeType":"305","messageId":"306","endLine":19,"endColumn":49},{"ruleId":"375","severity":1,"message":"376","line":38,"column":9,"nodeType":"377","messageId":"378","endLine":49,"endColumn":10},{"ruleId":"303","severity":1,"message":"379","line":1,"column":10,"nodeType":"305","messageId":"306","endLine":1,"endColumn":21},{"ruleId":"303","severity":1,"message":"380","line":2,"column":48,"nodeType":"305","messageId":"306","endLine":2,"endColumn":58},{"ruleId":"303","severity":1,"message":"381","line":2,"column":68,"nodeType":"305","messageId":"306","endLine":2,"endColumn":76},{"ruleId":"303","severity":1,"message":"382","line":13,"column":12,"nodeType":"305","messageId":"306","endLine":13,"endColumn":21},{"ruleId":"303","severity":1,"message":"383","line":19,"column":11,"nodeType":"305","messageId":"306","endLine":19,"endColumn":17},{"ruleId":"303","severity":1,"message":"384","line":49,"column":11,"nodeType":"305","messageId":"306","endLine":49,"endColumn":34},{"ruleId":"303","severity":1,"message":"379","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":21},{"ruleId":"303","severity":1,"message":"381","line":5,"column":31,"nodeType":"305","messageId":"306","endLine":5,"endColumn":39},{"ruleId":"303","severity":1,"message":"385","line":5,"column":41,"nodeType":"305","messageId":"306","endLine":5,"endColumn":46},{"ruleId":"303","severity":1,"message":"319","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":25},{"ruleId":"303","severity":1,"message":"381","line":5,"column":31,"nodeType":"305","messageId":"306","endLine":5,"endColumn":39},{"ruleId":"303","severity":1,"message":"386","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":14},{"ruleId":"303","severity":1,"message":"387","line":2,"column":32,"nodeType":"305","messageId":"306","endLine":2,"endColumn":39},{"ruleId":"322","severity":1,"message":"388","line":16,"column":8,"nodeType":"324","endLine":16,"endColumn":17,"suggestions":"389"},{"ruleId":"303","severity":1,"message":"343","line":1,"column":27,"nodeType":"305","messageId":"306","endLine":1,"endColumn":36},{"ruleId":"303","severity":1,"message":"337","line":4,"column":10,"nodeType":"305","messageId":"306","endLine":4,"endColumn":16},{"ruleId":"303","severity":1,"message":"390","line":3,"column":15,"nodeType":"305","messageId":"306","endLine":3,"endColumn":21},{"ruleId":"303","severity":1,"message":"391","line":3,"column":23,"nodeType":"305","messageId":"306","endLine":3,"endColumn":28},{"ruleId":"303","severity":1,"message":"392","line":5,"column":8,"nodeType":"305","messageId":"306","endLine":5,"endColumn":12},{"ruleId":"303","severity":1,"message":"393","line":3,"column":7,"nodeType":"305","messageId":"306","endLine":3,"endColumn":18},{"ruleId":"303","severity":1,"message":"394","line":2,"column":8,"nodeType":"305","messageId":"306","endLine":2,"endColumn":11},{"ruleId":"303","severity":1,"message":"369","line":3,"column":17,"nodeType":"305","messageId":"306","endLine":3,"endColumn":23},{"ruleId":"303","severity":1,"message":"395","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":21},{"ruleId":"303","severity":1,"message":"396","line":32,"column":12,"nodeType":"305","messageId":"306","endLine":32,"endColumn":22},{"ruleId":"303","severity":1,"message":"397","line":36,"column":11,"nodeType":"305","messageId":"306","endLine":36,"endColumn":25},"no-unused-vars","'AuthorizedSection' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NewPassword' is defined but never used.","'ViewGroupsDetails' is defined but never used.","'BookList' is defined but never used.","no-native-reassign",["398"],"no-negated-in-lhs",["399"],"'AppstoreOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'Header' is assigned a value but never used.","'useState' is defined but never used.","'Select' is defined but never used.","'tailFormItemLayout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLessonsEvents'. Either include it or remove the dependency array.","ArrayExpression",["400"],"'start' is assigned a value but never used.","'end' is assigned a value but never used.","'layerId' is assigned a value but never used.","'gradeId' is assigned a value but never used.","'InboxOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'UploadImageToS3WithReactS3' is defined but never used.","'ViewFile' is defined but never used.","'Dragger' is assigned a value but never used.","'props' is assigned a value but never used.","'Tabs' is defined but never used.","'Drawer' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'initStudentList' and 'initTeacherList'. Either include them or remove the dependency array.",["401"],"React Hook useEffect has a missing dependency: 'history.location.state.hierarchyItem._id'. Either include it or remove the dependency array.",["402"],"'useEffect' is defined but never used.","'message' is defined but never used.","'Spin' is defined but never used.","'Modal' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'MessageOutlined' is defined but never used.","'pathPermissions' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'navBarItems' is assigned a value but never used.","'userRole' is assigned a value but never used.","'setUserRole' is assigned a value but never used.","'Input' is defined but never used.","'AutoComplete' is defined but never used.","'Form' is defined but never used.","'useRef' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'connect' is defined but never used.","'Button' is defined but never used.","'Layout' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'setSelectedFileList' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useSelector' is defined but never used.","'TimePicker' is defined but never used.","'Checkbox' is defined but never used.","'startDate' is assigned a value but never used.","'format' is assigned a value but never used.","'handleSatartDateChanged' is assigned a value but never used.","'Alert' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'initLessons'. Either include it or remove the dependency array.",["403"],"'Avatar' is defined but never used.","'Badge' is defined but never used.","'Icon' is defined but never used.","'CALENDAR_ID' is assigned a value but never used.","'api' is defined but never used.","'CreateNewBook' is defined but never used.","'viewDrawer' is assigned a value but never used.","'setViewAddBook' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},"Update the dependencies array to be: [filterValues, getLessonsEvents]",{"range":"412","text":"413"},"Update the dependencies array to be: [group, initStudentList, initTeacherList]",{"range":"414","text":"415"},"Update the dependencies array to be: [history.location.state.hierarchyItem._id, layers]",{"range":"416","text":"417"},"Update the dependencies array to be: [initLessons, lessons]",{"range":"418","text":"419"},[1566,1580],"[filterValues, getLessonsEvents]",[1510,1517],"[group, initStudentList, initTeacherList]",[2141,2149],"[history.location.state.hierarchyItem._id, layers]",[458,467],"[initLessons, lessons]"]