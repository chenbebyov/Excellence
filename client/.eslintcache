[{"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js":"1","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js":"2","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js":"3","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Library.js":"4","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js":"5","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js":"6","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js":"7","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\message.reducer.js":"8","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js":"9","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js":"10","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\books.service.js":"11","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\message.action.js":"12","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js":"13","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js":"14","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js":"15","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js":"16","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js":"17","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\Lessons.js":"18","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js":"19","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js":"20"},{"size":368,"mtime":1609961256170,"results":"21","hashOfConfig":"22"},{"size":4317,"mtime":1610835608508,"results":"23","hashOfConfig":"22"},{"size":549,"mtime":1610232204020,"results":"24","hashOfConfig":"22"},{"size":548,"mtime":1608650956896,"results":"25","hashOfConfig":"22"},{"size":395,"mtime":1610220848833,"results":"26","hashOfConfig":"22"},{"size":422,"mtime":1609705140807,"results":"27","hashOfConfig":"22"},{"size":1130,"mtime":1610825044924,"results":"28","hashOfConfig":"22"},{"size":402,"mtime":1610218247338,"results":"29","hashOfConfig":"22"},{"size":575,"mtime":1610234410977,"results":"30","hashOfConfig":"22"},{"size":1470,"mtime":1610821828740,"results":"31","hashOfConfig":"22"},{"size":366,"mtime":1609658093287,"results":"32","hashOfConfig":"22"},{"size":250,"mtime":1609963332060,"results":"33","hashOfConfig":"22"},{"size":2631,"mtime":1610821828812,"results":"34","hashOfConfig":"22"},{"size":2812,"mtime":1610821828809,"results":"35","hashOfConfig":"22"},{"size":1591,"mtime":1610825451033,"results":"36","hashOfConfig":"22"},{"size":390,"mtime":1610830596948,"results":"37","hashOfConfig":"22"},{"size":1398,"mtime":1610828963618,"results":"38","hashOfConfig":"22"},{"size":192,"mtime":1610828532812,"results":"39","hashOfConfig":"22"},{"size":638,"mtime":1610828887525,"results":"40","hashOfConfig":"22"},{"size":335,"mtime":1610828754796,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1a2415e",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js",[],["89","90"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js",["91"],"import React, { useEffect, useState } from 'react';\r\nimport Library from './pages/Library';\r\nimport LessonAndTask from './components/lessonsAndTasks/Lessons';\r\nimport Home from './pages/Home';\r\nimport ViewUsers from './components/users/ViewUsers';\r\nimport api from './services/user.service';\r\nimport { logout } from './redux/actions/user.actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { PermissionsProvider, AuthorizedRoute, AuthorizedSection } from '@tshio/react-router-permissions';\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport UserDetails from './components/users/UserDetails';\r\nimport CreateLessonOrTask from './components/lessonsAndTasks/CreateLesson';\r\n\r\nconst permissionsStrategy = (currentRoles, requirement) => {\r\n    return currentRoles.find(role => role === requirement);\r\n};\r\n\r\nfunction App (props) {\r\n\r\n    const { loggedIn, user } = useSelector(state => state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const [userList, setUserList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        api.getAllUsers().then(users => {\r\n            setUserList(users.data.data);\r\n        }, [])\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('access-token');\r\n        dispatch(logout());\r\n    };\r\n\r\n    const getRoles =() =>{\r\n        return user ? [user.role] : 'guest';\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PermissionsProvider\r\n                permissions={getRoles}\r\n                authorizationStrategy={permissionsStrategy}\r\n            >\r\n                <Router>\r\n                    <nav>\r\n                        <ul>\r\n\r\n                            <li>\r\n                                <Link to=\"/\">Home</Link>\r\n                            </li>\r\n                            {loggedIn &&\r\n                                <>\r\n                                    <li>\r\n                                        <Link to=\"/lessons\">Lessons</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/library\">Library</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/users\">Users</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/lessons/add\">add lesson</Link>\r\n                                    </li>\r\n                                    <li onClick={handleLogout}>\r\n                                        <Link to=\"/\">logout</Link>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </ul>\r\n                    </nav>\r\n\r\n                    <Switch>\r\n                        <AuthorizedRoute path=\"/lessons/add\"  requires={'teacher'}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <CreateLessonOrTask /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/lessons\" requires={'admin'}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <LessonAndTask /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/library\" requires={'teacher'}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <Library /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/users/:id\" requires={'teacher'}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <UserDetails /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/users\" requires={'teacher'}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <ViewUsers userList={userList} /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <Route path=\"/\" component={Home}>\r\n                            <Home />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </PermissionsProvider>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Library.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\message.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js",["92","93","94","95"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../components/Login';\r\nimport Register from '../components/Register';\r\nimport { Modal, Button, Layout, Tabs } from 'antd';\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nfunction SignIn(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    // setLoading(true);\r\n    // setTimeout(() => {\r\n    //   setVisible(false);\r\n    //   setLoading(false);\r\n    // }, 3000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showModal}>Sign in</Button>\r\n      <Modal\r\n        visible={visible}\r\n        title=\"Login/Register\"\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={[\r\n          // <Button key=\"back\" onClick={handleCancel}> Return </Button>,\r\n          // <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}> Submit</Button>\r\n        ]}\r\n      >\r\n        {/* <Layout theme=\"light\"> */}\r\n          <Tabs defaultActiveKey=\"1\" size=\"large\">\r\n            <TabPane tab=\"Login\" key=\"1\"><Login/></TabPane>\r\n            <TabPane tab=\"Register\" key=\"2\"><Register/></TabPane>\r\n            \r\n          </Tabs>\r\n        {/* </Layout> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\books.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\message.action.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js",[],["96","97"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js",["98"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createUser } from '../../redux/actions/user.actions';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const save = (values) => {\r\n        console.log('Success:', values); \r\n        dispatch(createUser(values));       \r\n    }\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form {...layout} name=\"login\" initialValues={{ remember: true }} onFinish={save} onFinishFailed={onFinishFailed} >\r\n                <Form.Item\r\n                    label=\"first name\"\r\n                    name=\"firstName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern:\"(^[a-zA-Z]+$)\",\r\n                            min:2,\r\n                            message: 'first name is required and must be at least 2 chars',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"last name\"\r\n                    name=\"lastName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern:\"(^[a-zA-Z]+$)\",\r\n                            min:2,\r\n                            message: 'first name is required and must be at least 2 chars',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                \r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your email!',\r\n                            type: 'email'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                    <Checkbox>Remember me</Checkbox>\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js",["99","100","101","102","103"],"import React, { useEffect, useState } from 'react';\r\nimport { List, message, Avatar, Spin, Card } from 'antd';\r\nimport { useHistory,Link } from 'react-router-dom';\r\n\r\n\r\nconst ViewUsers = (props) => {\r\n\r\n    const {userList} = props;\r\n    const history = useHistory();\r\n    function getRandomColor() {\r\n        var letters = '0123456789ABCDEF'.split('');\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++ ) {\r\n            color += letters[Math.round(Math.random() * 15)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    const navigate = (user) => {\r\n        history.push({\r\n            pathname: `/users/${user._id}`,\r\n            state: { user },\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card type=\"inner\" title=\"User List\">\r\n            <List\r\n                dataSource={userList}\r\n                renderItem={item => (\r\n                    <List.Item key={item._id} onClick={()=> navigate(item)}>\r\n                        <List.Item.Meta \r\n                            avatar={\r\n                                <Avatar style={{ backgroundColor: getRandomColor(),textTransform: 'uppercase', verticalAlign: 'middle' }} size=\"large\">\r\n                                    {item.firstName.charAt(0)}\r\n                                </Avatar>\r\n                            }\r\n                            title={`${item.firstName} ${item.lastName}`}\r\n                            description={item.email}\r\n                            />\r\n                    </List.Item>\r\n                )}\r\n            >\r\n            </List>\r\n        </Card>\r\n    )\r\n}\r\nexport default ViewUsers;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js",["104"],"import React from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createLesson } from '../../redux/actions/lesson.actions';\r\n\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n};\r\n\r\nconst CreateLesson = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const save = (values) => {\r\n        console.log('Success:', values); \r\n        dispatch(createLesson(values));       \r\n    }\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Form {...layout} name=\"Add New Lesson\" initialValues={{ remember: true }} onFinish={save} onFinishFailed={onFinishFailed} >\r\n        <Form.Item\r\n            label=\"lesson subject\"\r\n            name=\"lessonSubject\"\r\n            rules={[\r\n                {\r\n                    required: true,\r\n                    pattern:\"(^[a-zA-Z0-9]+$)\",\r\n                    min:2,\r\n                    message: 'lesson subject is required and must be at least 2 chars',\r\n                },\r\n            ]}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Add Lesson\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateLesson;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\Lessons.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":9,"column":48,"nodeType":"111","messageId":"112","endLine":9,"endColumn":65},{"ruleId":"109","severity":1,"message":"113","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":17},{"ruleId":"109","severity":1,"message":"114","line":5,"column":25,"nodeType":"111","messageId":"112","endLine":5,"endColumn":31},{"ruleId":"109","severity":1,"message":"115","line":11,"column":10,"nodeType":"111","messageId":"112","endLine":11,"endColumn":17},{"ruleId":"109","severity":1,"message":"116","line":11,"column":19,"nodeType":"111","messageId":"112","endLine":11,"endColumn":29},{"ruleId":"105","replacedBy":"117"},{"ruleId":"107","replacedBy":"118"},{"ruleId":"109","severity":1,"message":"119","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"120","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"119","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"121","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":23},{"ruleId":"109","severity":1,"message":"122","line":2,"column":33,"nodeType":"111","messageId":"112","endLine":2,"endColumn":37},{"ruleId":"109","severity":1,"message":"123","line":3,"column":21,"nodeType":"111","messageId":"112","endLine":3,"endColumn":25},{"ruleId":"109","severity":1,"message":"124","line":2,"column":31,"nodeType":"111","messageId":"112","endLine":2,"endColumn":39},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'AuthorizedSection' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'Layout' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["125"],["126"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'message' is defined but never used.","'Spin' is defined but never used.","'Link' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation"]