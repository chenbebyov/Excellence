[{"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js":"1","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js":"2","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js":"3","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Library.js":"4","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js":"5","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js":"6","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js":"7","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\message.reducer.js":"8","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js":"9","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js":"10","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\books.service.js":"11","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\message.action.js":"12","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js":"13","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js":"14","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js":"15","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js":"16","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js":"17","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\Lessons.js":"18","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js":"19","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js":"20","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\SetUserRole.js":"21","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\layer.reducer.js":"22","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\layer.actions.js":"23","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\layer.service.js":"24","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\AttendanceJournal.js":"25","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchyListView.js":"26","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\CreateHierarchy.js":"27","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\ViewGroupsDetails.js":"28","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AffiliationToGroup.js":"29"},{"size":368,"mtime":1609961256170,"results":"30","hashOfConfig":"31"},{"size":6923,"mtime":1614455425780,"results":"32","hashOfConfig":"31"},{"size":622,"mtime":1612295933692,"results":"33","hashOfConfig":"31"},{"size":1283,"mtime":1614454376491,"results":"34","hashOfConfig":"31"},{"size":395,"mtime":1610220848833,"results":"35","hashOfConfig":"31"},{"size":700,"mtime":1614450758516,"results":"36","hashOfConfig":"31"},{"size":1452,"mtime":1612639730024,"results":"37","hashOfConfig":"31"},{"size":402,"mtime":1610218247338,"results":"38","hashOfConfig":"31"},{"size":575,"mtime":1610234410977,"results":"39","hashOfConfig":"31"},{"size":1470,"mtime":1610821828740,"results":"40","hashOfConfig":"31"},{"size":366,"mtime":1609658093287,"results":"41","hashOfConfig":"31"},{"size":250,"mtime":1609963332060,"results":"42","hashOfConfig":"31"},{"size":2631,"mtime":1610821828812,"results":"43","hashOfConfig":"31"},{"size":2812,"mtime":1610821828809,"results":"44","hashOfConfig":"31"},{"size":2600,"mtime":1614455357803,"results":"45","hashOfConfig":"31"},{"size":390,"mtime":1610830596948,"results":"46","hashOfConfig":"31"},{"size":1398,"mtime":1610828963618,"results":"47","hashOfConfig":"31"},{"size":1024,"mtime":1611171332073,"results":"48","hashOfConfig":"31"},{"size":630,"mtime":1612888625253,"results":"49","hashOfConfig":"31"},{"size":335,"mtime":1610828754796,"results":"50","hashOfConfig":"31"},{"size":1405,"mtime":1612034672710,"results":"51","hashOfConfig":"31"},{"size":698,"mtime":1613844403535,"results":"52","hashOfConfig":"31"},{"size":2312,"mtime":1613922016617,"results":"53","hashOfConfig":"31"},{"size":654,"mtime":1613848879110,"results":"54","hashOfConfig":"31"},{"size":3019,"mtime":1614451440565,"results":"55","hashOfConfig":"31"},{"size":3612,"mtime":1613852030290,"results":"56","hashOfConfig":"31"},{"size":4121,"mtime":1613922016611,"results":"57","hashOfConfig":"31"},{"size":614,"mtime":1614450758452,"results":"58","hashOfConfig":"31"},{"size":5629,"mtime":1614530673616,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1a2415e",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\index.js",[],["129","130"],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\App.js",["131"],"import React, { useEffect, useState } from 'react';\r\nimport Library from './pages/Library';\r\nimport Lessons from './components/lessonsAndTasks/Lessons';\r\nimport Home from './pages/Home';\r\nimport ViewUsers from './components/users/ViewUsers';\r\nimport HierarchyListView from './components/layers/HierarchyListView';\r\nimport api from './services/user.service';\r\nimport { logout } from './redux/actions/user.actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { PermissionsProvider, AuthorizedRoute, AuthorizedSection } from '@tshio/react-router-permissions';\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport UserDetails from './components/users/UserDetails';\r\nimport CreateLesson from './components/lessonsAndTasks/CreateLesson';\r\nimport AttendanceJournal from './components/users/AttendanceJournal';\r\nimport ViewGroupsDetails from './components/layers/ViewGroupsDetails';\r\nimport AffiliationToGroup from './components/groups/AffiliationToGroup';\r\n\r\nconst permissionsStrategy = (currentRole, requirement) => {\r\n    return requirement.find(role => role === currentRole);\r\n};\r\n\r\nfunction App (props) {\r\n\r\n    const { loggedIn, user } = useSelector(state => state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const [userList, setUserList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        api.getAllUsers().then(users => {\r\n            setUserList(users.data.data);\r\n        }, [])\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('access-token');\r\n        dispatch(logout());\r\n    };\r\n\r\n    // const getRoles =() =>{\r\n    //     return user ? [user.role] : 'guest';\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <PermissionsProvider\r\n                permissions={user ? user.role : 'guest'}\r\n                authorizationStrategy={permissionsStrategy}\r\n            >\r\n                <Router>\r\n                    <nav>\r\n                        <ul>\r\n\r\n                            <li>\r\n                                <Link to=\"/\">Home</Link>\r\n                            </li>\r\n                            {loggedIn &&\r\n                                <>\r\n                                    <li>\r\n                                        <Link to=\"/lessons\">Lessons</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/library\">Library</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/users\">Users</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/lessons/add\">add lesson</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/layers\">Layers</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/attendanceJournal\">AttendanceJournal</Link>\r\n                                    </li>\r\n                                    <li onClick={handleLogout}>\r\n                                        <Link to=\"/\">logout</Link>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </ul>\r\n                    </nav>\r\n\r\n                    <Switch>\r\n                        <AuthorizedRoute path=\"/lessons/add\"  requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <CreateLesson /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/lessons\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <Lessons /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/library\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <Library /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/users/:id\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <UserDetails /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/users\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <ViewUsers userList={userList} showSetRole={true} />: <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/layers\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"layer\" nextHierarchy=\"grade\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/grade\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"grade\" nextHierarchy=\"level\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/level\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"level\" nextHierarchy=\"group\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/group\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <HierarchyListView type=\"group\" nextHierarchy=\"viewGroupDetails\"/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/viewGroupDetails\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <ViewGroupsDetails/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/affiliationToGroup\" requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <AffiliationToGroup/> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <AuthorizedRoute path=\"/attendanceJournal\"  requires={['teacher','admin']}>\r\n                            {({ isAuthorized }) => (isAuthorized ? <AttendanceJournal /> : <Redirect to=\"/\" />)}\r\n                        </AuthorizedRoute>\r\n                        <Route path=\"/\" component={Home}>\r\n                            <Home />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </PermissionsProvider>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\store.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Library.js",["132"],"import React, { useEffect, useState } from 'react';\r\nimport { useBarcode } from 'react-barcodes';\r\nimport api from '../services/books.service';\r\nimport { Table } from 'antd';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Barcode',\r\n        dataIndex: 'barcode'\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name'\r\n    },\r\n    {\r\n        title: 'Writer',\r\n        dataIndex: 'writer'\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status'\r\n    }\r\n];\r\n\r\n\r\n\r\nconst Library = () => {\r\n\r\n    const [tableData, setTableData] = useState([]);\r\n\r\n    // const { inputRef } = useBarcode({\r\n    //     value: '',\r\n    // })\r\n\r\n    //  [\r\n    //     {\r\n    //         key: <svg ref={inputRef} />,\r\n    //         name: <ul>{bookList.map((book, index) => <li key={index}>{book.bookName}</li>)}</ul>,\r\n    //         writer: '',\r\n    //         status: ''\r\n    //     }\r\n    // ];\r\n\r\n    useEffect(() => {\r\n        api.getAllBooks().then(response => response.data.data).then(books => {\r\n            let data = books.map(book => ({...book, key: book._id}));\r\n            setTableData(data);\r\n        }, [])\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Table columns={columns} dataSource={tableData} bordered />\r\n        </>\r\n    )\r\n}\r\nexport default Library;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\Home.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\user.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\user.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\message.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\user.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\pages\\SignIn.js",["133","134","135","136"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../components/Login';\r\nimport Register from '../components/Register';\r\nimport { Modal, Button, Layout, Tabs } from 'antd';\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nfunction SignIn(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    // setLoading(true);\r\n    // setTimeout(() => {\r\n    //   setVisible(false);\r\n    //   setLoading(false);\r\n    // }, 3000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showModal}>Sign in</Button>\r\n      <Modal\r\n        visible={visible}\r\n        title=\"Login/Register\"\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={[\r\n          // <Button key=\"back\" onClick={handleCancel}> Return </Button>,\r\n          // <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}> Submit</Button>\r\n        ]}\r\n      >\r\n        {/* <Layout theme=\"light\"> */}\r\n          <Tabs defaultActiveKey=\"1\" size=\"large\">\r\n            <TabPane tab=\"Login\" key=\"1\"><Login/></TabPane>\r\n            <TabPane tab=\"Register\" key=\"2\"><Register/></TabPane>\r\n            \r\n          </Tabs>\r\n        {/* </Layout> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\books.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\message.action.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Login.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\sign-in\\Register.js",["137"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createUser } from '../../redux/actions/user.actions';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const save = (values) => {\r\n        console.log('Success:', values); \r\n        dispatch(createUser(values));       \r\n    }\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form {...layout} name=\"login\" initialValues={{ remember: true }} onFinish={save} onFinishFailed={onFinishFailed} >\r\n                <Form.Item\r\n                    label=\"first name\"\r\n                    name=\"firstName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern:\"(^[a-zA-Z]+$)\",\r\n                            min:2,\r\n                            message: 'first name is required and must be at least 2 chars',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"last name\"\r\n                    name=\"lastName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            pattern:\"(^[a-zA-Z]+$)\",\r\n                            min:2,\r\n                            message: 'first name is required and must be at least 2 chars',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                \r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your email!',\r\n                            type: 'email'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                    <Checkbox>Remember me</Checkbox>\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\ViewUsers.js",["138","139","140","141","142"],"import React, { useEffect, useState } from 'react';\r\nimport { List, message, Avatar, Spin, Card, Button , Modal} from 'antd';\r\nimport { useHistory,Link } from 'react-router-dom';\r\nimport SetUserRole from './SetUserRole';\r\n\r\nconst ViewUsers = (props) => {\r\n\r\n    const {userList, showSetRole} = props;\r\n    const history = useHistory();\r\n    function getRandomColor() {\r\n        var letters = '0123456789ABCDEF'.split('');\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++ ) {\r\n            color += letters[Math.round(Math.random() * 15)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    const navigate = (user) => {\r\n        history.push({\r\n            pathname: `/users/${user._id}`,\r\n            state: { user },\r\n        });\r\n    }\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = (e) => {\r\n        e.stopPropagation();\r\n        e.nativeEvent.stopImmediatePropagation();\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <Card type=\"inner\" title=\"User List\">\r\n            <List\r\n                dataSource={userList}\r\n                renderItem={item => (\r\n                    // <List.Item key={item._id} onClick={()=> navigate(item)}>\r\n                    <List.Item key={item._id}>\r\n                        <List.Item.Meta \r\n                            avatar={\r\n                                <Avatar style={{ backgroundColor: getRandomColor(),textTransform: 'uppercase', verticalAlign: 'middle' }} size=\"large\">\r\n                                    {item.firstName.charAt(0)}\r\n                                </Avatar>\r\n                            }\r\n                            title={`${item.firstName} ${item.lastName}`}\r\n                            description={item.email}\r\n\r\n                            />\r\n                            {showSetRole && \r\n                                <>\r\n                                    <Button type=\"primary\" onClick={showModal}>Set User Role</Button>\r\n                                    <Modal title=\"Set Role\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                                        <SetUserRole id={item._id}></SetUserRole>\r\n                                    </Modal>\r\n                                </>\r\n                            }\r\n                    </List.Item>\r\n                )}\r\n            >\r\n            </List>\r\n        </Card>\r\n    )\r\n}\r\nexport default ViewUsers;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\UserDetails.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\CreateLesson.js",["143"],"import React from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createLesson } from '../../redux/actions/lesson.actions';\r\n\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n};\r\n\r\nconst CreateLesson = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const save = (values) => {\r\n        console.log('Success:', values); \r\n        dispatch(createLesson(values));       \r\n    }\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Form {...layout} name=\"Add New Lesson\" initialValues={{ remember: true }} onFinish={save} onFinishFailed={onFinishFailed} >\r\n        <Form.Item\r\n            label=\"lesson subject\"\r\n            name=\"lessonSubject\"\r\n            rules={[\r\n                {\r\n                    required: true,\r\n                    pattern:\"(^[a-zA-Z0-9]+$)\",\r\n                    min:2,\r\n                    message: 'lesson subject is required and must be at least 2 chars',\r\n                },\r\n            ]}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Add Lesson\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateLesson;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\lessonsAndTasks\\Lessons.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\lesson.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\lesson.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\SetUserRole.js",["144"],"import React, { useState } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { Form, Input, Radio, Button } from 'antd';\r\nimport {setUserRole} from '../../redux/actions/user.actions';\r\n\r\n\r\nconst SetUserRole = (props) => {\r\n\r\n  const { id } = props;\r\n\r\n  const { user } = useSelector(state => state.userReducer);\r\n    \r\n  const [role, setRole] = useState();\r\n\r\n  const onChange = e => {\r\n    console.log('radio checked', e.target.value);\r\n    setRole(e.target.value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n    \r\n  const save = () => {\r\n      dispatch(setUserRole(id, role));       \r\n  }\r\n\r\n  const onFinishFailed = () => {\r\n    alert('Failed to set user role');\r\n  }\r\n\r\n    return (\r\n      <>\r\n      <Form onFinish={save} onFinishFailed={onFinishFailed} >\r\n\r\n      <Form.Item>\r\n        <Radio.Group onChange={onChange}>\r\n        <Radio value={'student'}>student</Radio>\r\n        <br />\r\n        <Radio value={'teacher'}>teacher</Radio>\r\n        <br />\r\n        <Radio value={'secretary'}>secretary</Radio>\r\n        <br />\r\n        { user.role === 'admin' && \r\n          <Radio value={'admin'}>admin</Radio>\r\n        }\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n          </Button>\r\n      </Form.Item>\r\n      </Form>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SetUserRole;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\reducers\\layer.reducer.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\redux\\actions\\layer.actions.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\services\\layer.service.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\users\\AttendanceJournal.js",["145","146","147","148"],"import React, { useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\n\r\nconst AttendanceJournal = (props) => {\r\n\r\n    const [eventList, setEventList] = useState([]);\r\n    const myEventsList = [\r\n        {\r\n            start: moment().toDate(),\r\n            end: moment()\r\n                .add(1, \"days\")\r\n                .toDate(),\r\n            title: \"Some title\"\r\n        }\r\n    ];\r\n    const onEventResize = (data) => {\r\n        const { start, end } = data;\r\n\r\n        // this.setState((state) => {\r\n        //   state.myEventsList[0].start = start;\r\n        //   state.myEventsList[0].end = end;\r\n        //   return { myEventsList: [...state.events] };\r\n        // });\r\n    };\r\n\r\n    const onEventDrop = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <DnDCalendar\r\n                    localizer={localizer}\r\n                    events={myEventsList}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    defaultDate={new Date()}\r\n                    defaultView=\"month\"\r\n                    onEventDrop={onEventDrop}\r\n                    onEventResize={onEventResize}\r\n                    resizable\r\n                    style={{ height: \"100vh\" }}\r\n\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AttendanceJournal;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import {useSelector} from 'react-redux';\r\n// import { Table,Input, AutoComplete } from 'antd';\r\n// import { AudioOutlined } from '@ant-design/icons';\r\n// import { $CombinedState } from 'redux';\r\n\r\n\r\n\r\n\r\n// const columns = [\r\n//   {\r\n//     title: 'Name',\r\n//     dataIndex: 'name'\r\n//   }\r\n// ];\r\n\r\n\r\n// const AttendanceJournal = (props) => {\r\n\r\n//   const {id}=props;\r\n\r\n// const { user } = useSelector(state => state.userReducer);\r\n\r\n//   const data = [\r\n//   {\r\n//     key:user._id ,\r\n//     name: user.name\r\n//   }\r\n//  ];\r\n\r\n\r\n//   const [students,setStudents] = useState();\r\n\r\n//     const rowSelection = {\r\n//     onChange: (selectedRowKeys, selectedRows) => {\r\n//         console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n//     },\r\n//     getCheckboxProps: record => ({\r\n//         disabled: record.name === 'Disabled User', \r\n//         name: record.name,\r\n//     }),\r\n//     };\r\n\r\n//   return (\r\n//     <>\r\n//         <Table\r\n//           rowSelection={{\r\n//             type: 'checkbox',\r\n//             ...rowSelection,\r\n//           }}\r\n//           columns={columns}\r\n//           dataSource={data}\r\n\r\n//         />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default AttendanceJournal;\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\HierarchyListView.js",["149","150"],"import React, {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {getLayers} from '../../redux/actions/layer.actions';\r\nimport { Button, Card, Col, Row } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport CreateHierarchy from './CreateHierarchy';\r\n\r\nconst HierarchyListView = (props) => {\r\n\r\n    const { type, layerId, gradeId, nextHierarchy } = props;\r\n    const [showAddNewHierarchy, setshowAddNewHierarchy] = useState(false);\r\n    const  { layers } = useSelector(state => state.layerReducer);\r\n    const history = useHistory();\r\n    // const {hierarchyItem} = history.location.state;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(layers == null){\r\n            dispatch(getLayers());\r\n        }\r\n    }, [dispatch, layers]);\r\n\r\n    const getHierarchyItemId = () => {\r\n        if(history.location.state)\r\n            return history.location.state.hierarchyItem._id;\r\n        return null;\r\n    }\r\n\r\n    const getData = () => {\r\n        let data;\r\n        switch (type) {\r\n            case 'layer':\r\n                data = layers;\r\n                break;\r\n            case 'grade':\r\n                data =  layers.find(layer => layer._id === getHierarchyItemId()).grades;\r\n                break;\r\n            case 'level':\r\n                data =  layers.find(layers => layers.grades.find(grade => \r\n                    grade._id === getHierarchyItemId())\r\n                ).grades.find(grade => \r\n                    grade._id === getHierarchyItemId()\r\n                ).levels;\r\n                break;\r\n            case 'group':\r\n                layers.forEach(layer => {\r\n                    layer.grades.forEach(grade => {\r\n                        grade.levels.forEach(level => {\r\n                            if(level._id === getHierarchyItemId())\r\n                                data = level.groups;\r\n                        })\r\n                    })\r\n                })\r\n                break;\r\n            default:\r\n                return [];\r\n        }\r\n        return data ? data : [];\r\n    }\r\n\r\n    const showDetails = (item) => {\r\n        history.push({\r\n            pathname: `/${nextHierarchy}`,\r\n            state: { hierarchyItem: item },\r\n        });\r\n    }\r\n\r\n    const handleAddNewLayer = () => {\r\n        setshowAddNewHierarchy(true);\r\n    }\r\n\r\n    const hideCreateHierarchy = () => {\r\n        setshowAddNewHierarchy(false);\r\n    }\r\n\r\n    return (\r\n        <>      \r\n        \r\n            <Button htmlType=\"submit\" type=\"primary\" onClick={handleAddNewLayer}>{`add new ${type}`}</Button>\r\n            {showAddNewHierarchy && \r\n                <CreateHierarchy \r\n                    hideCreateHierarchy={hideCreateHierarchy} \r\n                    type={type} \r\n                    layerId={getHierarchyItemId()}\r\n                    gradeId={getHierarchyItemId()}\r\n                    levelId={getHierarchyItemId()}\r\n                />}\r\n               <div>\r\n                <div className=\"site-card-wrapper\">\r\n                    <Row gutter={16}>\r\n                        {getData().map(item =>\r\n                            <Col key={item._id} span={8}>\r\n                                <Card  title={item.name} bordered={false}>\r\n                                    <Button type=\"primary\" onClick={() => showDetails(item)}>view details</Button>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </div>\r\n               </div>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HierarchyListView;","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\CreateHierarchy.js",["151"],"import React, { useState, useEffect }  from 'react';\r\nimport { Form, Input, Button, Alert, message } from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addLayer, addGrade, addLevel, addGroup} from '../../redux/actions/layer.actions';\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst CreateHierarchy = (props) => {\r\n\r\n    const {hideCreateHierarchy , type, layerId, gradeId , levelId} = props;\r\n    const { layers } = useSelector(state => state.layerReducer);\r\n\r\n    // const gradeByLevel = getGradeId(levelId);\r\n    // const layerByGrade = getLayerId(gradeByLevel);\r\n\r\n    // const  { message } = useSelector(state => state.messageReducer);\r\n    const [messageText, setMessageText] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getLayerId = (gradeId) => {\r\n        \r\n        if(!gradeId)\r\n            return null;\r\n        return layers.find(layers => layers.grades.find(grade => grade._id === gradeId))._id;\r\n    }\r\n    \r\n    const getGradeId = (levelId) => {\r\n        \r\n        if(!levelId)\r\n            return null;\r\n    \r\n        let result;\r\n        layers.forEach(layer => {\r\n            layer.grades.forEach(grade => {\r\n                let data = grade.levels.find(level => level._id === levelId)\r\n                if (data) {\r\n                    result = grade;\r\n                    return;\r\n                }\r\n            });\r\n    \r\n        });\r\n        return result._id;\r\n    }\r\n\r\n    const save = (values) => {\r\n        setLoading(true);\r\n        let {name} = values;\r\n        let func;\r\n        let params;\r\n        switch (type) {\r\n            case 'layer':\r\n                func = addLayer;\r\n                params = name;\r\n                break;\r\n            case 'grade':\r\n                func = addGrade;\r\n                params = {layerId : layerId , gradeName: name };\r\n                break;\r\n            case 'level':\r\n                func = addLevel;\r\n                params = {gradeId: gradeId, levelName: name, layerId: getLayerId(gradeId) };\r\n                break;\r\n            case 'group':\r\n                func = addGroup;\r\n                params = {\r\n                    gradeId: getGradeId(levelId), \r\n                    groupName: name, \r\n                    layerId: getLayerId(getGradeId(levelId)), \r\n                    levelId: levelId\r\n                };\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n        dispatch(func(params)).then((response) => {\r\n            setLoading(false);\r\n            if(response.success){\r\n                form.resetFields()\r\n                message.success(`${type} created sucessfuly`);\r\n                hideCreateHierarchy();\r\n            }\r\n            else {\r\n                setMessageText(response.error.response.data.error);\r\n            }\r\n        }).catch(error => {\r\n            setMessageText(`Filed to create ${type}`);\r\n        });  \r\n    }\r\n\r\n    return (\r\n    <>\r\n        {messageText && <Alert\r\n            message=\"Error\"\r\n            description={messageText}\r\n            type=\"error\"\r\n            showIcon\r\n        />}\r\n        <Form {...layout} form={form} name={`Add ${type}`} initialValues={{ remember: true }} onFinish={save} >\r\n            <Form.Item\r\n                label={`${type} Name`}\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `Please input ${type} name !`\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\"  loading={loading}>\r\n                    add\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </>\r\n)\r\n   \r\n}\r\n\r\nexport default CreateHierarchy;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\layers\\ViewGroupsDetails.js",[],"C:\\Users\\nkremer\\Documents\\Excellence\\client\\src\\components\\groups\\AffiliationToGroup.js",["152","153","154"],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":10,"column":48,"nodeType":"161","messageId":"162","endLine":10,"endColumn":65},{"ruleId":"159","severity":1,"message":"163","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":20},{"ruleId":"159","severity":1,"message":"164","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":17},{"ruleId":"159","severity":1,"message":"165","line":5,"column":25,"nodeType":"161","messageId":"162","endLine":5,"endColumn":31},{"ruleId":"159","severity":1,"message":"166","line":11,"column":10,"nodeType":"161","messageId":"162","endLine":11,"endColumn":17},{"ruleId":"159","severity":1,"message":"167","line":11,"column":19,"nodeType":"161","messageId":"162","endLine":11,"endColumn":29},{"ruleId":"159","severity":1,"message":"168","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"170","line":2,"column":16,"nodeType":"161","messageId":"162","endLine":2,"endColumn":23},{"ruleId":"159","severity":1,"message":"171","line":2,"column":33,"nodeType":"161","messageId":"162","endLine":2,"endColumn":37},{"ruleId":"159","severity":1,"message":"172","line":3,"column":21,"nodeType":"161","messageId":"162","endLine":3,"endColumn":25},{"ruleId":"159","severity":1,"message":"173","line":19,"column":11,"nodeType":"161","messageId":"162","endLine":19,"endColumn":19},{"ruleId":"159","severity":1,"message":"174","line":2,"column":31,"nodeType":"161","messageId":"162","endLine":2,"endColumn":39},{"ruleId":"159","severity":1,"message":"175","line":3,"column":16,"nodeType":"161","messageId":"162","endLine":3,"endColumn":21},{"ruleId":"159","severity":1,"message":"176","line":14,"column":12,"nodeType":"161","messageId":"162","endLine":14,"endColumn":21},{"ruleId":"159","severity":1,"message":"177","line":14,"column":23,"nodeType":"161","messageId":"162","endLine":14,"endColumn":35},{"ruleId":"159","severity":1,"message":"178","line":25,"column":17,"nodeType":"161","messageId":"162","endLine":25,"endColumn":22},{"ruleId":"159","severity":1,"message":"179","line":25,"column":24,"nodeType":"161","messageId":"162","endLine":25,"endColumn":27},{"ruleId":"159","severity":1,"message":"180","line":11,"column":19,"nodeType":"161","messageId":"162","endLine":11,"endColumn":26},{"ruleId":"159","severity":1,"message":"181","line":11,"column":28,"nodeType":"161","messageId":"162","endLine":11,"endColumn":35},{"ruleId":"159","severity":1,"message":"169","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"182","line":24,"column":13,"nodeType":"161","messageId":"162","endLine":24,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":29,"column":8,"nodeType":"185","endLine":29,"endColumn":10,"suggestions":"186"},{"ruleId":"159","severity":1,"message":"187","line":97,"column":13,"nodeType":"161","messageId":"162","endLine":97,"endColumn":17},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'AuthorizedSection' is defined but never used.","Identifier","unusedVar","'useBarcode' is defined but never used.","'connect' is defined but never used.","'Layout' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'message' is defined but never used.","'Spin' is defined but never used.","'Link' is defined but never used.","'navigate' is assigned a value but never used.","'Checkbox' is defined but never used.","'Input' is defined but never used.","'eventList' is assigned a value but never used.","'setEventList' is assigned a value but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.","'layerId' is assigned a value but never used.","'gradeId' is assigned a value but never used.","'layers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initStudentList' and 'initTeacherList'. Either include them or remove the dependency array.","ArrayExpression",["190"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},"Update the dependencies array to be: [initStudentList, initTeacherList]",{"range":"193","text":"194"},[1215,1217],"[initStudentList, initTeacherList]"]